z = z, type = "contour",colors = c("red","white","snow"),autocontour = F,contours = list(
start = 0,end = 100 , size =1))%>%
colorbar(title = "Fraction of\n Simulated Years")%>%
layout(title = "June 1st Storage Levels Reliability
Extreme Storage Level (280,000 Acre-Feet)",
xaxis = list(title ="Demand (Acre-Feet/Year)"),
yaxis = list(title = "Inflows (Acre-Feet/Year)"))
p <- plot_ly(
x = x,
y = y,
z = z, type = "contour",colors = c("red","white"))%>%
colorbar(title = "Fraction of\n Simulated Years")%>%
layout(title = "June 1st Storage Levels Reliability
Extreme Storage Level (280,000 Acre-Feet)",
xaxis = list(title ="Demand (Acre-Feet/Year)"),
yaxis = list(title = "Inflows (Acre-Feet/Year)"))
p
############ Storage Contours based on Moderate, Severe and Extreme Storage Drought Levels  #############################
#Storage
z=Data$Tot_Mnthly_Stor
p <- plot_ly(
x = Data$Demand,
y = Data$Inflow,
z =z , type = "contour",
colors = c("red","orange","yellow","white"),
#contours = list(coloring = 'heatmap'),
autocontour = F,contours = list(
start = 280000,
end = 380000,
size = 50000
))%>%
layout(title = "Storage by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
z=Data$ModPercent
p <- plot_ly(
x = x,
y = y,
z = z , type = "contour",contours = list(showlabels = TRUE),colors = c("yellow","white"))%>%
colorbar(title = "Fraction of\n Simulated Years")%>%
layout(title = "June 1st Storage Levels Reliability
Moderate Storage Level (380,000 Acre-Feet)",
xaxis = list(title ="Demand (Acre-Feet/Year)"),
yaxis = list(title = "Inflows (Acre-Feet/Year)"))
p
z=Data$ModPercent
p <- plot_ly(
x = x,
y = y,
z = z , type = "contour",colors = c("yellow","white"))%>%
colorbar(title = "Fraction of\n Simulated Years")%>%
layout(title = "June 1st Storage Levels Reliability
Moderate Storage Level (380,000 Acre-Feet)",
xaxis = list(title ="Demand (Acre-Feet/Year)"),
yaxis = list(title = "Inflows (Acre-Feet/Year)"))
p <- plot_ly(
x = x,
y = y,
z = z , type = "contour",colors = c("yellow","white"))%>%
addtrace(x=x,y=y, type = 'scatter',mode ='markers')%>%
colorbar(title = "Fraction of\n Simulated Years")%>%
layout(title = "June 1st Storage Levels Reliability
Moderate Storage Level (380,000 Acre-Feet)",
xaxis = list(title ="Demand (Acre-Feet/Year)"),
yaxis = list(title = "Inflows (Acre-Feet/Year)"))
p
z=Data$ModPercent
p <- plot_ly(
x = x,
y = y,
z = z , type = "contour",colors = c("yellow","white"))%>%
add_trace(x=x,y=y, type = 'scatter',mode ='markers')%>%
colorbar(title = "Fraction of\n Simulated Years")%>%
layout(title = "June 1st Storage Levels Reliability
Moderate Storage Level (380,000 Acre-Feet)",
xaxis = list(title ="Demand (Acre-Feet/Year)"),
yaxis = list(title = "Inflows (Acre-Feet/Year)"))
p
#text information
t <- list(
family = "sans serif",
size = 14,
color = toRGB("grey50"))
z=Data$ModPercent
p <- plot_ly(
x = x,
y = y,
z = z , type = "contour",colors = c("yellow","white"))%>%
add_trace(x=x,y=y, type = 'scatter',mode ='markers')%>%
add_text(textfont = t, textposition = "top right") %>%
colorbar(title = "Fraction of\n Simulated Years")%>%
layout(title = "June 1st Storage Levels Reliability
Moderate Storage Level (380,000 Acre-Feet)",
xaxis = list(title ="Demand (Acre-Feet/Year)"),
yaxis = list(title = "Inflows (Acre-Feet/Year)"))
#text information
t <- list(
family = "sans serif",
size = 14,
color = toRGB("grey50"))
z=Data$ModPercent
p <- plot_ly(
x = x,
y = y,
z = z , type = "contour",colors = c("yellow","white"))%>%
add_trace(x=x,y=y, type = 'scatter',mode ='markers')%>%
add_text(textfont = t, textposition = "top right") %>%
colorbar(title = "Fraction of\n Simulated Years")%>%
layout(title = "June 1st Storage Levels Reliability
Moderate Storage Level (380,000 Acre-Feet)",
xaxis = list(title ="Demand (Acre-Feet/Year)"),
yaxis = list(title = "Inflows (Acre-Feet/Year)"))
#text information
t <- list(
family = "sans serif",
size = 14,
color = toRGB("grey50"))
#text information
t <- list(
family = "sans serif",
size = 14,
color = toRGB("grey50"))
z=Data$ModPercent
p <- plot_ly(
x = x,
y = y,
z = z , type = "contour",colors = c("yellow","white"))%>%
add_trace(x=x,y=y,text=c(Inflow,Demand,Tot_Mnthly_Stor), type = 'scatter',mode ='markers',color = "grey")%>%
add_text(textfont = t, textposition = "top right") %>%
colorbar(title = "Fraction of\n Simulated Years")%>%
layout(title = "June 1st Storage Levels Reliability
Moderate Storage Level (380,000 Acre-Feet)",
xaxis = list(title ="Demand (Acre-Feet/Year)"),
yaxis = list(title = "Inflows (Acre-Feet/Year)"))
p <- plot_ly(
x = x,
y = y,
z = z , type = "contour",colors = c("yellow","white"))%>%
add_trace(x=x,y=y,text=c(Data$Inflow,Data$Demand,Data$Tot_Mnthly_Stor), type = 'scatter',mode ='markers',color = "grey")%>%
add_text(textfont = t, textposition = "top right") %>%
colorbar(title = "Fraction of\n Simulated Years")%>%
layout(title = "June 1st Storage Levels Reliability
Moderate Storage Level (380,000 Acre-Feet)",
xaxis = list(title ="Demand (Acre-Feet/Year)"),
yaxis = list(title = "Inflows (Acre-Feet/Year)"))
#Axis assignment
x=Data$Demand
y=Data$`Annual Avg Inflow`
#text information
t <- list(
family = "sans serif",
size = 14,
color = toRGB("grey50"))
z=Data$ModPercent
p <- plot_ly(
x = x,
y = y,
z = z , type = "contour",colors = c("yellow","white"))%>%
add_trace(x=x,y=y,text=c(Data$`Annual Avg Inflow`,Data$Demand,Data$Tot_Mnthly_Stor), type = 'scatter',mode ='markers',color = "grey")%>%
add_text(textfont = t, textposition = "top right") %>%
colorbar(title = "Fraction of\n Simulated Years")%>%
layout(title = "June 1st Storage Levels Reliability
Moderate Storage Level (380,000 Acre-Feet)",
xaxis = list(title ="Demand (Acre-Feet/Year)"),
yaxis = list(title = "Inflows (Acre-Feet/Year)"))
z=Data$ModPercent
p <- plot_ly(
x = x,
y = y,
z = z , type = "contour",colors = c("yellow","white"))%>%
add_trace(x=x,y=y,text=Data$Tot_Mnthly_Stor, type = 'scatter',mode ='markers',color = "grey")%>%
add_text(textfont = t, textposition = "top right") %>%
colorbar(title = "Fraction of\n Simulated Years")%>%
layout(title = "June 1st Storage Levels Reliability
Moderate Storage Level (380,000 Acre-Feet)",
xaxis = list(title ="Demand (Acre-Feet/Year)"),
yaxis = list(title = "Inflows (Acre-Feet/Year)"))
p <- plot_ly(
x = x,
y = y,
z = z , type = "contour",colors = c("yellow","white"))%>%
add_trace(x=x,y=y,text=Data$Tot_Mnthly_Stor, type = 'scatter',mode ='markers',color = "grey")%>%
#add_text(textfont = t, textposition = "top right") %>%
colorbar(title = "Fraction of\n Simulated Years")%>%
layout(title = "June 1st Storage Levels Reliability
Moderate Storage Level (380,000 Acre-Feet)",
xaxis = list(title ="Demand (Acre-Feet/Year)"),
yaxis = list(title = "Inflows (Acre-Feet/Year)"))
p
#Select Data frame to do Calculation on.
#Data<- Data_NoSed
Data <- Data_10Perc
###########################################################################################################
#################### Reliability  Metric for Storage ########################
###########################################################################################################
#  -- Metrics based on WBWCD - Drought Contigency Plan Drought Levels --  #
# See Table 3-2 : Hot/Dry Projected Drought for Drought Levels
# Moderate Total Basin Storage Drought Level 340K to 380K -- Yellow  ("Less than 380K")
# Severe Total Basin Storage Drought Level 280K to 340K -- Orange    ("Less than 340K")
# Extreme Total Basin Storage Drought Level less than 280K -- Red    ("Less than 280K")
ModerateLevel<- 380000
SevereLevel <- 340000
ExtremeLevel<-280000
Storage_Metrics <- data.frame(Data$Tot_Mnthly_Stor)
Storage_Rel_Metrics_Moderate <- data.frame(Data$Tot_Mnthly_Stor)
Storage_Rel_Metrics_Severe <- data.frame(Data$Tot_Mnthly_Stor)
Storage_Rel_Metrics_Extreme <- data.frame(Data$Tot_Mnthly_Stor)
#Monthly Storage Column Number (MSCN)
MSCN <-9
#Moderate
i=1
while (i<=1080) {
Storage_Rel_Metrics_Moderate[i,] <- ifelse(Data[i,MSCN]>ModerateLevel,1,0)
i=i+1
}
#Severe
i=1
while (i<=1080) {
Storage_Rel_Metrics_Severe[i,] <- ifelse(Data[i,MSCN]>SevereLevel,1,0)
i=i+1
}
#Extreme
i=1
while (i<=1080) {
Storage_Rel_Metrics_Extreme[i,] <- ifelse(Data[i,MSCN]>ExtremeLevel,1,0)
i=i+1
}
Data$ModerateStorageR <-Storage_Rel_Metrics_Moderate$Data.Tot_Mnthly_Stor
Data$SevereStorageR <- Storage_Rel_Metrics_Severe$Data.Tot_Mnthly_Stor
Data$ExtremeStorageR<- Storage_Rel_Metrics_Extreme$Data.Tot_Mnthly_Stor
## Calculate Reliability
Stor_Rel_Moderate <- data.frame(1:36)
Stor_Rel_Severe <- data.frame(c(1:36))
Stor_Rel_Extreme <- data.frame(1:36)
#Moderate
Reliability_Data_Moderate <-Data %>%
group_by(Trace_Notation) %>%
summarise(ModPercent = mean(ModerateStorageR)*100)
#Severe
Reliability_Data_Severe <-Data %>%
group_by(Trace_Notation) %>%
summarise(SevPercent = mean(SevereStorageR)*100)
#Extreme
Reliability_Data_Extreme <-Data %>%
group_by(Trace_Notation) %>%
summarise(ExtPercent = mean(ExtremeStorageR)*100)
PlotData <- right_join(Reliability_Data_Moderate,Reliability_Data_Severe,by = 'Trace_Notation')
PlotData <- right_join(PlotData,Reliability_Data_Extreme,by = 'Trace_Notation')
PlotData <- left_join(PlotData,Data,by ='Trace_Notation') ####################### -- ISSUES  #############
Data <- PlotData
##################################################################################################
###PLOTS###
##################################################################################################
library(plotly)
#Axis assignment
x=Data$Demand
y=Data$`Annual Avg Inflow`
setwd("~/GitHub/WeberBasinVulnerability/WeberBasinVulnerability/3 - Post Processing/Output")
# Moderate Demand Level
z=Data$ModPercent
p <- plot_ly(
x = x,
y = y,
z = z , type = "contour",colors = c("yellow","white"))%>%
colorbar(title = "Fraction of\n Simulated Years")%>%
layout(title = "June 1st Storage Levels Reliability
Moderate Storage Level (380,000 Acre-Feet)",
xaxis = list(title ="Demand (Acre-Feet/Year)"),
yaxis = list(title = "Inflows (Acre-Feet/Year)"))
p
#Severe Demand Level
z=Data$SevPercent
p <- plot_ly(
x = x,
y = y,
z = z, type = "contour",colors = c("orange","white"))%>%
colorbar(title = "Fraction of\n Simulated Years")%>%
layout(title = "June 1st Storage Levels Reliability
Severe Storage Level (340,000 Acre-Feet)",
xaxis = list(title ="Demand (Acre-Feet/Year)"),
yaxis = list(title = "Inflows (Acre-Feet/Year)"))
p
#Extreme Demand Level
z=Data$ExtPercent
p <- plot_ly(
x = x,
y = y,
z = z, type = "contour",colors = c("red","white"))%>%
colorbar(title = "Fraction of\n Simulated Years")%>%
layout(title = "June 1st Storage Levels Reliability
Extreme Storage Level (280,000 Acre-Feet)",
xaxis = list(title ="Demand (Acre-Feet/Year)"),
yaxis = list(title = "Inflows (Acre-Feet/Year)"))
p
plotList <- function(nplots) {
lapply(seq_len(nplots), function(x) plot_ly())
}
s1 <- subplot(plotList(9), nrows = 3, shareX = TRUE, shareY = TRUE)
s1 <- subplot(plotList(9), nrows = 3, shareX = TRUE, shareY = TRUE)
s1
plotList <- function(nplots) {
lapply(seq_len(nplots), function(x) plot_ly())
}
s1 <- subplot(plotList(9), nrows = 3, shareX = TRUE, shareY = TRUE)
s1
# Moderate Demand Level
z=Data$ModPercent
p <- plot_ly(
x = x,
y = y,
z = z , type = "contour",colors = c("yellow","white"))%>%
colorbar(title = "Fraction of\n Simulated Years")%>%
layout(title = "June 1st Storage Levels Reliability
Moderate Storage Level (380,000 Acre-Feet)",
xaxis = list(title ="Demand (Acre-Feet/Year)"),
yaxis = list(title = "Inflows (Acre-Feet/Year)"))
p
Data <- Data_30Perc
###########################################################################################################
#################### Reliability  Metric for Storage ########################
###########################################################################################################
#  -- Metrics based on WBWCD - Drought Contigency Plan Drought Levels --  #
# See Table 3-2 : Hot/Dry Projected Drought for Drought Levels
# Moderate Total Basin Storage Drought Level 340K to 380K -- Yellow  ("Less than 380K")
# Severe Total Basin Storage Drought Level 280K to 340K -- Orange    ("Less than 340K")
# Extreme Total Basin Storage Drought Level less than 280K -- Red    ("Less than 280K")
ModerateLevel<- 380000
SevereLevel <- 340000
ExtremeLevel<-280000
Storage_Metrics <- data.frame(Data$Tot_Mnthly_Stor)
Storage_Rel_Metrics_Moderate <- data.frame(Data$Tot_Mnthly_Stor)
Storage_Rel_Metrics_Severe <- data.frame(Data$Tot_Mnthly_Stor)
Storage_Rel_Metrics_Extreme <- data.frame(Data$Tot_Mnthly_Stor)
#Monthly Storage Column Number (MSCN)
MSCN <-9
#Moderate
i=1
while (i<=1080) {
Storage_Rel_Metrics_Moderate[i,] <- ifelse(Data[i,MSCN]>ModerateLevel,1,0)
i=i+1
}
#Severe
i=1
while (i<=1080) {
Storage_Rel_Metrics_Severe[i,] <- ifelse(Data[i,MSCN]>SevereLevel,1,0)
i=i+1
}
#Extreme
i=1
while (i<=1080) {
Storage_Rel_Metrics_Extreme[i,] <- ifelse(Data[i,MSCN]>ExtremeLevel,1,0)
i=i+1
}
Data$ModerateStorageR <-Storage_Rel_Metrics_Moderate$Data.Tot_Mnthly_Stor
Data$SevereStorageR <- Storage_Rel_Metrics_Severe$Data.Tot_Mnthly_Stor
Data$ExtremeStorageR<- Storage_Rel_Metrics_Extreme$Data.Tot_Mnthly_Stor
## Calculate Reliability
Stor_Rel_Moderate <- data.frame(1:36)
Stor_Rel_Severe <- data.frame(c(1:36))
Stor_Rel_Extreme <- data.frame(1:36)
#Moderate
Reliability_Data_Moderate <-Data %>%
group_by(Trace_Notation) %>%
summarise(ModPercent = mean(ModerateStorageR)*100)
#Severe
Reliability_Data_Severe <-Data %>%
group_by(Trace_Notation) %>%
summarise(SevPercent = mean(SevereStorageR)*100)
#Extreme
Reliability_Data_Extreme <-Data %>%
group_by(Trace_Notation) %>%
summarise(ExtPercent = mean(ExtremeStorageR)*100)
PlotData <- right_join(Reliability_Data_Moderate,Reliability_Data_Severe,by = 'Trace_Notation')
PlotData <- right_join(PlotData,Reliability_Data_Extreme,by = 'Trace_Notation')
PlotData <- left_join(PlotData,Data,by ='Trace_Notation') ####################### -- ISSUES  #############
Data <- PlotData
##################################################################################################
###PLOTS###
##################################################################################################
library(plotly)
#Axis assignment
x=Data$Demand
y=Data$`Annual Avg Inflow`
setwd("~/GitHub/WeberBasinVulnerability/WeberBasinVulnerability/3 - Post Processing/Output")
plotList <- function(nplots) {
lapply(seq_len(nplots), function(x) plot_ly())
}
s1 <- subplot(plotList(9), nrows = 3, shareX = TRUE, shareY = TRUE)
s1
# Moderate Demand Level
z=Data$ModPercent
p <- plot_ly(
x = x,
y = y,
z = z , type = "contour",colors = c("yellow","white"))%>%
colorbar(title = "Fraction of\n Simulated Years")%>%
layout(title = "June 1st Storage Levels Reliability
Moderate Storage Level (380,000 Acre-Feet)",
xaxis = list(title ="Demand (Acre-Feet/Year)"),
yaxis = list(title = "Inflows (Acre-Feet/Year)"))
p
#Severe Demand Level
z=Data$SevPercent
p <- plot_ly(
x = x,
y = y,
z = z, type = "contour",colors = c("orange","white"))%>%
colorbar(title = "Fraction of\n Simulated Years")%>%
layout(title = "June 1st Storage Levels Reliability
Severe Storage Level (340,000 Acre-Feet)",
xaxis = list(title ="Demand (Acre-Feet/Year)"),
yaxis = list(title = "Inflows (Acre-Feet/Year)"))
p
#Extreme Demand Level
z=Data$ExtPercent
p <- plot_ly(
x = x,
y = y,
z = z, type = "contour",colors = c("red","white"))%>%
colorbar(title = "Fraction of\n Simulated Years")%>%
layout(title = "June 1st Storage Levels Reliability
Extreme Storage Level (280,000 Acre-Feet)",
xaxis = list(title ="Demand (Acre-Feet/Year)"),
yaxis = list(title = "Inflows (Acre-Feet/Year)"))
p
#text information
t <- list(
family = "sans serif",
size = 14,
color = toRGB("grey50"))
z=Data$ModPercent
p <- plot_ly(
x = x,
y = y,
z = z , type = "contour",contours = list(showlabels = TRUE),colors = c("yellow","white"))%>%
add_trace(x=x,y=y,text=Data$Tot_Mnthly_Stor, type = 'scatter',mode ='markers',color = "grey")%>%
#add_text(textfont = t, textposition = "top right") %>%
colorbar(title = "Fraction of\n Simulated Years")%>%
layout(title = "June 1st Storage Levels Reliability
Moderate Storage Level (380,000 Acre-Feet)",
xaxis = list(title ="Demand (Acre-Feet/Year)"),
yaxis = list(title = "Inflows (Acre-Feet/Year)"))
p
s1 <- subplot(p1,p2,p3, plot_ly(),nrows = 3, margin = 0.04, heights = c(0.6,0.3,0.1))
# Moderate Demand Level
z=Data$ModPercent
p1 <- plot_ly(
x = x,
y = y,
z = z , type = "contour",colors = c("yellow","white"))%>%
colorbar(title = "Fraction of\n Simulated Years")%>%
layout(title = "June 1st Storage Levels Reliability
Moderate Storage Level (380,000 Acre-Feet)",
xaxis = list(title ="Demand (Acre-Feet/Year)"),
yaxis = list(title = "Inflows (Acre-Feet/Year)"))
p1
#Severe Demand Level
z=Data$SevPercent
p2 <- plot_ly(
x = x,
y = y,
z = z, type = "contour",colors = c("orange","white"))%>%
colorbar(title = "Fraction of\n Simulated Years")%>%
layout(title = "June 1st Storage Levels Reliability
Severe Storage Level (340,000 Acre-Feet)",
xaxis = list(title ="Demand (Acre-Feet/Year)"),
yaxis = list(title = "Inflows (Acre-Feet/Year)"))
p2
#Extreme Demand Level
z=Data$ExtPercent
p3 <- plot_ly(
x = x,
y = y,
z = z, type = "contour",colors = c("red","white"))%>%
colorbar(title = "Fraction of\n Simulated Years")%>%
layout(title = "June 1st Storage Levels Reliability
Extreme Storage Level (280,000 Acre-Feet)",
xaxis = list(title ="Demand (Acre-Feet/Year)"),
yaxis = list(title = "Inflows (Acre-Feet/Year)"))
p3
s1 <- subplot(p1,p2,p3, plot_ly(),nrows = 3, margin = 0.04, heights = c(0.6,0.3,0.1))
s1
s1 <- subplot(p1,p2,p3, plot_ly(),nrows = 3, margin = 0.04, heights = c(0.6,0.3,0.1))
s1
s2 <- subplot(p1,p2,p3, plot_ly(),nrows = 3, margin = 0.04, heights = c(0.6,0.3,0.1))
s2
s3 <- subplot(p1,p2,p3, plot_ly(),nrows = 3, margin = 0.04, heights = c(0.6,0.3,0.1))
s1 <- subplot(p1,p2,p3, plot_ly(),nrows = 3, margin = 0.04, heights = c(0.6,0.3,0.1))
#s1
s2 <- subplot(p1,p2,p3, plot_ly(),nrows = 3, margin = 0.04, heights = c(0.6,0.3,0.1))
#s2
s3 <- subplot(p1,p2,p3, plot_ly(),nrows = 3, margin = 0.04, heights = c(0.6,0.3,0.1))
#s3
p <- subplot(s1, s2, s3,plot_ly(), nrows = 3, margin = 0.04, heights = c(0.6, 0.3, 0.1))
p
s1 <- subplot(p1,p2,p3, plot_ly(),nrows = 1)#, margin = 0.04, heights = c(0.6,0.3,0.1))
#s1
s2 <- subplot(p1,p2,p3, plot_ly(),nrows = 1)#, margin = 0.04, heights = c(0.6,0.3,0.1))
#s2
s3 <- subplot(p1,p2,p3, plot_ly(),nrows = 1)#, margin = 0.04, heights = c(0.6,0.3,0.1))
#s3
p <- subplot(s1, s2, s3,plot_ly(), nrows = 3)#, margin = 0.04, heights = c(0.6, 0.3, 0.1))
p
s1 <- subplot(p1,p2,p3, plot_ly(),nrows = 1)#, margin = 0.04, heights = c(0.6,0.3,0.1))
#s1
s2 <- subplot(p1,p2,p3, plot_ly(),nrows = 1)#, margin = 0.04, heights = c(0.6,0.3,0.1))
#s2
s3 <- subplot(p1,p2,p3, plot_ly(),nrows = 1)#, margin = 0.04, heights = c(0.6,0.3,0.1))
#s3
p3x3 <- subplot(s1, s2, s3,plot_ly(), nrows = 3)#, margin = 0.04, heights = c(0.6, 0.3, 0.1))
p3x3
