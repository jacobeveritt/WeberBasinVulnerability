p <- plot_ly(
x = newData$Demand,
y = newData$Inflows,
z = newData$Shortage, type = "contour")%>%
layout(title = "Shortages by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
#Storage
p <- plot_ly(
x = newData$Demand,
y = newData$Inflows,
z = newData$Storage, type = "contour")%>%
layout(title = "Storage by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
p <- plot_ly(
x = newData$Demand,
y = newData$Inflows,
z = newData$Storage, type = "contour",
colors = c("red","orange","yellow","white"),
#contours = list(coloring = 'heatmap',colors = c("red","orange","yellow","white")),
autocontour = F,contours = list(
start = 280000,
end = 380000,
size = 50000,
showlabels = TRUE
))%>% colorbar(title = "Storage Level") %>%
layout(title = "Storage by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
# Sedimentation & Shortage
p <- plot_ly(
x = newData$Sedimentation,
y = newData$Inflows,
z = newData$Shortage,type = "contour")%>%
layout(title = "Sedimentation by Color",
xaxis = list(title="Sedimentation"),
yaxis = list(title="Inflows"))
p
################################### Shortage only data Plots ##############################################
Plot_Data <- filter(J1Data, Sedimentation==0,Shortage>500)
Plot_Data <- data.frame(Plot_Data)
Plot_Data$Traces <- as.factor(Plot_Data$Traces)
colors <- c('#4AC6B7', '#1972A4', '#965F8A', '#FF7070', '#C61951')
#Contour
p <- plot_ly(Plot_Data,
x = ~Demand,
y = ~Inflows,
z = ~Shortage, type = "contour")%>%
layout(title = 'June 1st -- Demands v. Inflows -- Shortage',
scene = list(xaxis = list(title = 'Per Capita Water Usage Demands (Acre-Feet/Year)',
gridcolor = 'rgb(255, 255, 255)',
type = 'log',
zerolinewidth = 1,
ticklen = 5,
gridwidth = 2),
yaxis = list(title = 'Total System Monthly Inflows (Acre-Feet)',
gridcolor = 'rgb(255, 255, 255)',
zerolinewidth = 1,
ticklen = 5,
gridwith = 2)))
p
#3d
p <- plot_ly(Plot_Data, x = ~Demand, y = ~Inflows, z = ~Shortage, color = ~Storage , #size = ~size, colors = colors,
# marker = list(symbol = 'circle', sizemode = 'diameter'), sizes = c(5, 150),
text = ~paste('Trace Notation:', Traces, '<br>Sedimentation:', Sedimentation)) %>%
layout(title = 'June 1st -- Demands v. Inflows -- Shortage',
scene = list(xaxis = list(title = 'Per Capita Water Usage Demands (Acre-Feet/Year)',
gridcolor = 'rgb(255, 255, 255)',
type = 'log',
zerolinewidth = 1,
ticklen = 5,
gridwidth = 2),
yaxis = list(title = 'Total System Monthly Inflows (Acre-Feet)',
gridcolor = 'rgb(255, 255, 255)',
zerolinewidth = 1,
ticklen = 5,
gridwith = 2),
zaxis = list(title = 'Monthly Shortages (Acre-Feet)',
gridcolor = 'rgb(255, 255, 255)',
type = 'log',
zerolinewidth = 1,
ticklen = 5,
gridwith = 2)) ,
paper_bgcolor = 'rgb(243, 243, 243)',
plot_bgcolor = 'rgb(243, 243, 243)'
)
p
#2d - Shortage -- Inflows vs Demand
p <- plot_ly(Plot_Data, x = ~Demand, y = ~Inflows, color = ~Shortage , size = ~Storage, #colors = colors,
# marker = list(symbol = 'circle', sizemode = 'diameter'), sizes = c(5, 150),
text = ~paste('Trace Notation:', Traces, '<br>Sedimentation:', Sedimentation)) %>%
layout(title = 'June 1st -- Inflows v. Demands -- Shortage',
scene = list(xaxis = list(title = 'Per Capita Water Usage Demands (Acre-Feet/Year)',
gridcolor = 'rgb(255, 255, 255)',
type = 'log',
zerolinewidth = 1,
ticklen = 5,
gridwidth = 2),
yaxis = list(title = 'Total System Monthly Inflows (Acre-Feet)',
gridcolor = 'rgb(255, 255, 255)',
zerolinewidth = 1,
ticklen = 5,
gridwith = 2)),
paper_bgcolor = 'rgb(243, 243, 243)',
plot_bgcolor = 'rgb(243, 243, 243)')
p
## Contour and 2D plot/Demands v. Inflows -- Shortage
p <- plot_ly(Plot_Data,x = ~Demand,y = ~Inflows,z = ~Shortage, type = "contour")%>%
layout(title = 'June 1st -- Demands v. Inflows -- Shortage',
scene = list(xaxis = list(title = 'Per Capita Water Usage Demands (Acre-Feet/Year)'),
yaxis = list(title = 'Total System Monthly Inflows (Acre-Feet)')) %>%
add_trace( x = ~Demand, y = ~Inflows, #color = ~Shortage , size = ~Storage, colors = colors,
# marker = list(symbol = 'circle', sizemode = 'diameter'), sizes = c(5, 150),
text = ~paste('Trace Notation:', Traces, '<br>Sedimentation:', Sedimentation)))
p
#2d Storage -- Inflows vs Demand
p <- plot_ly(Plot_Data, x = ~Demand, y = ~Inflows,color = ~Storage , size = ~Shortage,# colors = colors,
# marker = list(symbol = 'circle', sizemode = 'diameter'), sizes = c(5, 150),
text = ~paste('Trace Notation:', Traces, '<br>Sedimentation:', Sedimentation)) %>%
layout(title = 'June 1st -- Inflows v. Demands -- Storage',
scene = list(xaxis = list(title = 'Per Capita Water Usage Demands (Acre-Feet/Year)',
gridcolor = 'rgb(255, 255, 255)',
type = 'log',
zerolinewidth = 1,
ticklen = 5,
gridwidth = 2),
yaxis = list(title = 'Total System Monthly Inflows (Acre-Feet)',
gridcolor = 'rgb(255, 255, 255)',
zerolinewidth = 1,
ticklen = 5,
gridwith = 2)),
paper_bgcolor = 'rgb(243, 243, 243)',
plot_bgcolor = 'rgb(243, 243, 243)')
p
#2d Storage -- Shortage vs Demand
p <- plot_ly(Plot_Data, x = ~Demand, y = ~Shortage,color = ~Storage , size = ~Inflows,# colors = colors,
# marker = list(symbol = 'circle', sizemode = 'diameter'), sizes = c(5, 150),
text = ~paste('Trace Notation:', Traces, '<br>Sedimentation:', Sedimentation)) %>%
layout(title = 'June 1st -- Shortage v. Demands -- Shortage',
scene = list(xaxis = list(title = 'Per Capita Water Usage Demands (Acre-Feet/Year)',
gridcolor = 'rgb(255, 255, 255)',
type = 'log',
zerolinewidth = 1,
ticklen = 5,
gridwidth = 2),
yaxis = list(title = 'Total System Monthly Inflows (Acre-Feet)',
gridcolor = 'rgb(255, 255, 255)',
zerolinewidth = 1,
ticklen = 5,
gridwith = 2)),
paper_bgcolor = 'rgb(243, 243, 243)',
plot_bgcolor = 'rgb(243, 243, 243)')
p
#2d Shortage -- Storage vs Demands
p <- plot_ly(Plot_Data, x = ~Demand, y = ~Storage,color = ~Shortage , size = ~Inflows, colors = colors,
# marker = list(symbol = 'circle', sizemode = 'diameter'), sizes = c(5, 150),
text = ~paste('Trace Notation:', Traces, '<br>Sedimentation:', Sedimentation)) %>%
layout(title = 'June 1st -- Demands v. Inflows -- Shortage',
scene = list(xaxis = list(title = 'Per Capita Water Usage Demands (Acre-Feet/Year)',
gridcolor = 'rgb(255, 255, 255)',
type = 'log',
zerolinewidth = 1,
ticklen = 5,
gridwidth = 2),
yaxis = list(title = 'Total System Monthly Inflows (Acre-Feet)',
gridcolor = 'rgb(255, 255, 255)',
zerolinewidth = 1,
ticklen = 5,
gridwith = 2)),
paper_bgcolor = 'rgb(243, 243, 243)',
plot_bgcolor = 'rgb(243, 243, 243)')
p
#2d Storage -- Shortage vs Inflows
p <- plot_ly(Plot_Data, x = ~Inflows, y = ~Shortage,color = ~Storage , size = ~Inflows,# colors = colors,
# marker = list(symbol = 'circle', sizemode = 'diameter'), sizes = c(5, 150),
text = ~paste('Trace Notation:', Traces, '<br>Sedimentation:', Sedimentation)) %>%
layout(title = 'June 1st -- Shortages v. Inflows -- Storage',
scene = list(xaxis = list(title = 'Per Capita Water Usage Demands (Acre-Feet/Year)',
gridcolor = 'rgb(255, 255, 255)',
type = 'log',
zerolinewidth = 1,
ticklen = 5,
gridwidth = 2),
yaxis = list(title = 'Total System Monthly Inflows (Acre-Feet)',
gridcolor = 'rgb(255, 255, 255)',
zerolinewidth = 1,
ticklen = 5,
gridwith = 2)),
paper_bgcolor = 'rgb(243, 243, 243)',
plot_bgcolor = 'rgb(243, 243, 243)')
p
#2d Shortage -- Storage vs Inflows
p <- plot_ly(Plot_Data, x = ~Inflows, y = ~Storage, color = ~Shortage , size = ~Inflows,# colors = colors,
# marker = list(symbol = 'circle', sizemode = 'diameter'), sizes = c(5, 150),
text = ~paste('Trace Notation:', Traces, '<br>Sedimentation:', Sedimentation)) %>%
layout(title = 'June 1st -- Storage v. Inflows -- Shortage',
scene = list(xaxis = list(title = 'Per Capita Water Usage Demands (Acre-Feet/Year)',
gridcolor = 'rgb(255, 255, 255)',
type = 'log',
zerolinewidth = 1,
ticklen = 5,
gridwidth = 2),
yaxis = list(title = 'Total System Monthly Inflows (Acre-Feet)',
gridcolor = 'rgb(255, 255, 255)',
zerolinewidth = 1,
ticklen = 5,
gridwith = 2)),
paper_bgcolor = 'rgb(243, 243, 243)',
plot_bgcolor = 'rgb(243, 243, 243)')
p
########## Plot Scatter Plots ###########
### Individual plots
#X = Demand, Y= Inflows
p <- plot_ly(newData,x =newData$Demand,y=newData$Inflows ,color = newData$Storage,colors = blues9)%>%
layout(title = "Storage by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
#X = Demand, Y= Inflows Z = Shortages
p <- plot_ly(newData,x =newData$Demand,y=newData$Inflows ,color = newData$Shortages,colors = blues9)%>%   #How to ignore 0 values
layout(title = "Shortages by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
#X = Shortage, Y= Storage Z= Demands
p <- plot_ly(newData,x =newData$Shortage,y=newData$Storage ,color = newData$Demand) %>%
layout(title = "Demand by Color",
xaxis = list(title ="Shortage (Acre-Feet)"),
yaxis = list(title = "Storage (Acre-Feet)"))
p
#X = Shortage, Y= Storage Z= Inflows
p <- plot_ly(newData,x =newData$Shortage,y=newData$Storage ,color = newData$Inflows)%>%
layout(title = "Inflows by Color",
xaxis = list(title ="Shortage (Acre-Feet)"),
yaxis = list(title = "Storage (Acre-Feet)"))
p
############ End of June 1 code##########
# *------------------------------------------------------------------
# | PROGRAM NAME: Service Area Divided Annual Demands
#Copy intro page back in when done
#Set Working Directory
setwd("~/GitHub/WeberBasinVulnerability/WeberBasinVulnerability/1 - Scenario Processing/Annual Service Area Demand Scenarios/Input_Data")
### Clear any existing data or functions.
rm(list=ls())
##Possible package installation necessary
#install.packages("RColorBrewer")
#install.packages("plotly")
#install.packages("readxl")
#install.packages("openxlsx")
library(readxl)
library(plotly)
library(RColorBrewer)
library(openxlsx)
#----------------------------### Inputs ### ------------------------------------------------------------------------------------------------------------------------------------------
#1 & #2 Inputs By County and Year (Population and Per Capita Usage)
D2015<-read.csv("2015Data.csv")
D2070<-read.csv("2070Data.csv")
D2150<-read.csv("2150Data.csv")
#3 Evapotranspiration
#Evapotranspiration Scenarios
# a. No Change (No Calculation Necessary) (+0% Secondary Usage)
# b. Increased Usage due to Evapotranspiration (+ 15% Secondary Usage)
# c. Decreased Usage due to Increased Evapotranspiration therefore greater Precipitation (6% Secondary Usage)
ET_IncreaseFactor = 1.15
ET_DecreaseFactor = 1.06
#b.
D2015$IncET_Secondary.Use <- D2015$Secondary.Use*ET_IncreaseFactor
D2070$IncET_Secondary.Use <- D2070$Secondary.Use*ET_IncreaseFactor
D2150$IncET_Secondary.Use <- D2150$Secondary.Use*ET_IncreaseFactor
#c.
D2015$DecET_Secondary.Use <- D2015$Secondary.Use*ET_DecreaseFactor
D2070$DecET_Secondary.Use <- D2070$Secondary.Use*ET_DecreaseFactor
D2150$DecET_Secondary.Use <- D2150$Secondary.Use*ET_DecreaseFactor
#4 Scenarios Input (0%, 25% and 40% reduction)
ScenarioSA_PCntChanges <- read_excel("PercentChanges.xlsx")
#5 Misc Data
#Division of Water Resources Service Area Table
DWRSA_Table <- read_excel("DWRSA_Table.xlsx")
'_________________________________________________________________________________________________________________________________'
#Calculate Demand by County For 2015, 2070 and 2150
#Conversion Factor Gallons per day to Acre-feet per year
GALtoAF <- 0.0000030688832459704*365
#2015
D2015$MI_County <- ((D2015$Population*D2015$Potable.Use) + (D2015$Population*D2015$Secondary.Use))*GALtoAF
#2070
D2070$MI_County <- ((D2070$Population*D2070$Potable.Use) + (D2070$Population*D2070$Secondary.Use))*GALtoAF
#2150
D2150$MI_County <- ((D2150$Population*D2150$Potable.Use) + (D2150$Population*D2150$Secondary.Use))*GALtoAF
#2015
D2015$MI_SA <- D2015$MI_County*(DWRSA_Table$AVG/DWRSA_Table$`SUMS by County`)
#2070
D2070$MI_SA <- D2070$MI_County*(DWRSA_Table$AVG/DWRSA_Table$`SUMS by County`)
#2150
D2150$MI_SA <- D2150$MI_County*(DWRSA_Table$AVG/DWRSA_Table$`SUMS by County`)
DecPotable <- 0.90
#2015
D2015$DecPotable.Use <- D2015$Potable.Use * DecPotable
#2070
D2070$DecPotable.Use <- D2070$Potable.Use * DecPotable
#2150
D2150$DecPotable.Use <- D2150$Potable.Use * DecPotable
DecSecondary <- (1 - 0.34)
#2015
D2015$DecSecondary.Use <- D2015$Secondary.Use * DecSecondary
#2070
D2070$DecSecondary.Use <- D2070$Secondary.Use * DecSecondary
#2150
D2150$DecSecondary.Use <- D2150$Secondary.Use * DecSecondary
#Calculate Demand by County For 2015, 2070 and 2150
#2015
D2015$MI_County_PCDec <- ((D2015$Population*D2015$DecPotable.Use) + (D2015$Population*D2015$DecSecondary.Use))*GALtoAF
#2070
D2070$MI_County_PCDec <- ((D2070$Population*D2070$DecPotable.Use) + (D2070$Population*D2070$DecSecondary.Use))*GALtoAF
#2150
D2150$MI_County_PCDec <- ((D2150$Population*D2150$DecPotable.Use) + (D2150$Population*D2150$DecSecondary.Use))*GALtoAF
#2015
D2015$MI_SA_PCDec <- D2015$MI_County_PCDec*(DWRSA_Table$AVG/DWRSA_Table$`SUMS by County`)
#2070
D2070$MI_SA_PCDec <- D2070$MI_County_PCDec*(DWRSA_Table$AVG/DWRSA_Table$`SUMS by County`)
#2150
D2150$MI_SA_PCDec <- D2150$MI_County_PCDec*(DWRSA_Table$AVG/DWRSA_Table$`SUMS by County`)
DDPotable <- 0.80
#2015
D2015$DDPotable.Use <- D2015$Potable.Use * DDPotable
#2070
D2070$DDPotable.Use <- D2070$Potable.Use * DDPotable
#2150
D2150$DDPotable.Use <- D2150$Potable.Use * DDPotable
DDSecondary <- (1 - 0.44)
#2015
D2015$DDSecondary.Use <- D2015$Secondary.Use * DDSecondary
#2070
D2070$DDSecondary.Use <- D2070$Secondary.Use * DDSecondary
#2150
D2150$DDSecondary.Use <- D2150$Secondary.Use * DDSecondary
#Calculate Demand by County For 2015, 2070 and 2150
#2015
D2015$MI_County_PCDD <- ((D2015$Population*D2015$DDPotable.Use) + (D2015$Population*D2015$DDSecondary.Use))*GALtoAF
#2070
D2070$MI_County_PCDD <- ((D2070$Population*D2070$DDPotable.Use) + (D2070$Population*D2070$DDSecondary.Use))*GALtoAF
#2150
D2150$MI_County_PCDD <- ((D2150$Population*D2150$DDPotable.Use) + (D2150$Population*D2150$DDSecondary.Use))*GALtoAF
#2015
D2015$MI_SA_PCDD <- D2015$MI_County_PCDD*(DWRSA_Table$AVG/DWRSA_Table$`SUMS by County`)
#2070
D2070$MI_SA_PCDD <- D2070$MI_County_PCDD*(DWRSA_Table$AVG/DWRSA_Table$`SUMS by County`)
#2150
D2150$MI_SA_PCDD <- D2150$MI_County_PCDD*(DWRSA_Table$AVG/DWRSA_Table$`SUMS by County`)
#2015
D2015$MI_County_ETInc <- ((D2015$Population*D2015$Potable.Use) + (D2015$Population*D2015$IncET_Secondary.Use ))*GALtoAF
#2070
D2070$MI_County_ETInc <- ((D2070$Population*D2070$Potable.Use) + (D2070$Population*D2070$IncET_Secondary.Use))*GALtoAF
#2150
D2150$MI_County_ETInc <- ((D2150$Population*D2150$Potable.Use) + (D2150$Population*D2150$IncET_Secondary.Use))*GALtoAF
#2015
D2015$MI_SA_ETInc <- D2015$MI_County_ETInc*(DWRSA_Table$AVG/DWRSA_Table$`SUMS by County`)
#2070
D2070$MI_SA_ETInc <- D2070$MI_County_ETInc*(DWRSA_Table$AVG/DWRSA_Table$`SUMS by County`)
#2150
D2150$MI_SA_ETInc <- D2150$MI_County_ETInc*(DWRSA_Table$AVG/DWRSA_Table$`SUMS by County`)
DecSecondary <- (1 - 0.34)
#2015
D2015$DecSecondary.Use_ETInc <- D2015$IncET_Secondary.Use * DecSecondary
#2070
D2070$DecSecondary.Use_ETInc <- D2070$IncET_Secondary.Use * DecSecondary
#2150
D2150$DecSecondary.Use_ETInc <- D2150$IncET_Secondary.Use * DecSecondary
#Calculate Demand by County For 2015, 2070 and 2150
#2015
D2015$MI_County_PCDec_ETInc <- ((D2015$Population*D2015$DecPotable.Use) + (D2015$Population*D2015$DecSecondary.Use_ETInc))*GALtoAF
#2070
D2070$MI_County_PCDec_ETInc <- ((D2070$Population*D2070$DecPotable.Use) + (D2070$Population*D2070$DecSecondary.Use_ETInc))*GALtoAF
#2150
D2150$MI_County_PCDec_ETInc <- ((D2150$Population*D2150$DecPotable.Use) + (D2150$Population*D2150$DecSecondary.Use_ETInc))*GALtoAF
#2015
D2015$MI_SA_PCDec_ETInc <- D2015$MI_County_PCDec_ETInc*(DWRSA_Table$AVG/DWRSA_Table$`SUMS by County`)
#2070
D2070$MI_SA_PCDec_ETInc <- D2070$MI_County_PCDec_ETInc*(DWRSA_Table$AVG/DWRSA_Table$`SUMS by County`)
#2150
D2150$MI_SA_PCDec_ETInc <- D2150$MI_County_PCDec_ETInc*(DWRSA_Table$AVG/DWRSA_Table$`SUMS by County`)
DDSecondary <- (1 - 0.44)
#2015
D2015$DDSecondary.Use_ETInc <- D2015$IncET_Secondary.Use * DDSecondary
#2070
D2070$DDSecondary.Use_ETInc <- D2070$IncET_Secondary.Use * DDSecondary
#2150
D2150$DDSecondary.Use_ETInc <- D2150$IncET_Secondary.Use * DDSecondary
#Calculate Demand by County For 2015, 2070 and 2150
#2015
D2015$MI_County_PCDD_ETInc <- ((D2015$Population*D2015$DDPotable.Use) + (D2015$Population*D2015$DDSecondary.Use_ETInc))*GALtoAF
#2070
D2070$MI_County_PCDD_ETInc <- ((D2070$Population*D2070$DDPotable.Use) + (D2070$Population*D2070$DDSecondary.Use_ETInc))*GALtoAF
#2150
D2150$MI_County_PCDD_ETInc <- ((D2150$Population*D2150$DDPotable.Use) + (D2150$Population*D2150$DDSecondary.Use_ETInc))*GALtoAF
###Allocating Demand from County Demand to Service Area Proportionally From DWRSA_Table
#2015
D2015$MI_SA_PCDD_ETInc <- D2015$MI_County_PCDD_ETInc*(DWRSA_Table$AVG/DWRSA_Table$`SUMS by County`)
#2070
D2070$MI_SA_PCDD_ETInc <- D2070$MI_County_PCDD_ETInc*(DWRSA_Table$AVG/DWRSA_Table$`SUMS by County`)
#2150
D2150$MI_SA_PCDD_ETInc <- D2150$MI_County_PCDD_ETInc*(DWRSA_Table$AVG/DWRSA_Table$`SUMS by County`)
#Calculate Demand by County For 2015, 2070 and 2150
#Conversion Factor Gallons per day to Acre-feet per year
GALtoAF <- 0.0000030688832459704*365
#2015
D2015$MI_County_ETDec <- ((D2015$Population*D2015$Potable.Use) + (D2015$Population*D2015$DecET_Secondary.Use))*GALtoAF
#2070
D2070$MI_County_ETDec <- ((D2070$Population*D2070$Potable.Use) + (D2070$Population*D2070$DecET_Secondary.Use))*GALtoAF
#2150
D2150$MI_County_ETDec <- ((D2150$Population*D2150$Potable.Use) + (D2150$Population*D2150$DecET_Secondary.Use))*GALtoAF
##Allocating Demand from County Demand to Service Area Proportionally From DWRSA_Table
#2015
D2015$MI_SA_ETDec <- D2015$MI_County_ETDec*(DWRSA_Table$AVG/DWRSA_Table$`SUMS by County`)
#2070
D2070$MI_SA_ETDec <- D2070$MI_County_ETDec*(DWRSA_Table$AVG/DWRSA_Table$`SUMS by County`)
#2150
D2150$MI_SA_ETDec <- D2150$MI_County_ETDec*(DWRSA_Table$AVG/DWRSA_Table$`SUMS by County`)
DecSecondary <- (1 - 0.34)
#2015
D2015$DecSecondary.Use_ETDec <- D2015$DecET_Secondary.Use * DecSecondary
#2070
D2070$DecSecondary.Use_ETDec <- D2070$DecET_Secondary.Use * DecSecondary
#2150
D2150$DecSecondary.Use_ETDec <- D2150$DecET_Secondary.Use * DecSecondary
#Calculate Demand by County For 2015, 2070 and 2150
#2015
D2015$MI_County_PCDec_ETDec <- ((D2015$Population*D2015$DecPotable.Use) + (D2015$Population*D2015$DecSecondary.Use_ETDec))*GALtoAF
#2070
D2070$MI_County_PCDec_ETDec <- ((D2070$Population*D2070$DecPotable.Use) + (D2070$Population*D2070$DecSecondary.Use_ETDec))*GALtoAF
#2150
D2150$MI_County_PCDec_ETDec <- ((D2150$Population*D2150$DecPotable.Use) + (D2150$Population*D2150$DecSecondary.Use_ETDec))*GALtoAF
#2015
D2015$MI_SA_PCDec_ETDec <- D2015$MI_County_PCDec_ETDec*(DWRSA_Table$AVG/DWRSA_Table$`SUMS by County`)
#2070
D2070$MI_SA_PCDec_ETDec <- D2070$MI_County_PCDec_ETDec*(DWRSA_Table$AVG/DWRSA_Table$`SUMS by County`)
#2150
D2150$MI_SA_PCDec_ETDec <- D2150$MI_County_PCDec_ETDec*(DWRSA_Table$AVG/DWRSA_Table$`SUMS by County`)
DDSecondary <- (1 - 0.44)
#2015
D2015$DDSecondary.Use_ETDec <- D2015$DecET_Secondary.Use * DDSecondary
#2070
D2070$DDSecondary.Use_ETDec <- D2070$DecET_Secondary.Use * DDSecondary
#2150
D2150$DDSecondary.Use_ETDec <- D2150$DecET_Secondary.Use * DDSecondary
#Calculate Demand by County For 2015, 2070 and 2150
#2015
D2015$MI_County_PCDD_ETDec <- ((D2015$Population*D2015$DDPotable.Use) + (D2015$Population*D2015$DDSecondary.Use_ETDec))*GALtoAF
#2070
D2070$MI_County_PCDD_ETDec <- ((D2070$Population*D2070$DDPotable.Use) + (D2070$Population*D2070$DDSecondary.Use_ETDec))*GALtoAF
#2150
D2150$MI_County_PCDD_ETDec <- ((D2150$Population*D2150$DDPotable.Use) + (D2150$Population*D2150$DDSecondary.Use_ETDec))*GALtoAF
###Allocating Demand from County Demand to Service Area Proportionally From DWRSA_Table
#2015
D2015$MI_SA_PCDD_ETDec <- D2015$MI_County_PCDD_ETDec*(DWRSA_Table$AVG/DWRSA_Table$`SUMS by County`)
#2070
D2070$MI_SA_PCDD_ETDec <- D2070$MI_County_PCDD_ETDec*(DWRSA_Table$AVG/DWRSA_Table$`SUMS by County`)
#2150
D2150$MI_SA_PCDD_ETDec <- D2150$MI_County_PCDD_ETDec*(DWRSA_Table$AVG/DWRSA_Table$`SUMS by County`)
###     Outputs    ################################################################################################################
setwd("~/GitHub/WeberBasinVulnerability/WeberBasinVulnerability/1 - Scenario Processing/Annual Service Area Demand Scenarios/Output")
MI_2015 <- D2015[,c(9,13,17,19,22,25,27,30,33)]
MI_2070 <- D2070[,c(9,13,17,19,22,25,27,30,33)]
MI_2150 <- D2150[,c(9,13,17,19,22,25,27,30,33)]
#add Utah County SA1 Data 35500 to top row
MI_2015[1,]<-35500
MI_2070[1,]<-35500
#add SA20 to be 0
MI_2015[20,]<-0
MI_2150[1,]<-35500
MI_2070[20,]<-0
MI_2150[20,]<-0
colnames(MI_2015) <- paste(colnames(MI_2015),"2015",sep="_")
colnames(MI_2070) <- paste(colnames(MI_2070),"2070",sep="_")
colnames(MI_2150) <- paste(colnames(MI_2150),"2150",sep="_")
MI<- data.frame(c(MI_2015,MI_2070,MI_2150))
#output to excel
write.xlsx(MI_2015, "MI_2015.xlsx")
write.xlsx(MI_2070, "MI_2070.xlsx")
write.xlsx(MI_2150, "MI_2150.xlsx")
write.xlsx(MI,"MI.xlsx")
MISums <- colSums(MI,na.rm=F,dims = 1)
MISums
MISums <-data.frame(MISums)
#2015 Sums
MI2015_Sums <- colSums(MI_2015,na.rm = F, dims = 1)
MI2015_Sums <- data.frame(MI2015_Sums)
#MI2015_Sums$ET <-  c(rep('SameET',3),rep('DecreaseET',3),rep('IncreaseET',3))
#MI2015_Sums$PC <-  rep(c('SamePC','DecreasePC','DrasticDecreasePC'),3)
#MI2015_Sums$NUMPC <-  rep(c(3000,2000,1000),3)
#2070 Sums
MI2070_Sums <- colSums(MI_2070,na.rm = F, dims = 1)
MI2070_Sums <- data.frame(MI2070_Sums)
#MI2070_Sums$ET <- rep(c(rep('SameET',3),rep('DecreaseET',3),rep('IncreaseET',3)),3)
#MI2070_Sums$PC <- rep(rep(c('SamePC','DecreasePC','DrasticDecreasePC'),3),3)
#MI2070_Sums$NUMPC <- rep(rep(c(3000,2000,1000),3),3)
#2150 Sums
MI2150_Sums <- colSums(MI_2150,na.rm = F, dims = 1)
MI2150_Sums <- data.frame(MI2150_Sums)
SummedScenarios <- data.frame(c(MI2015_Sums,MI2070_Sums,MI2150_Sums))
row.names(SummedScenarios) <- c("Base","PCDec","PCDD","ETInc","PCDec_ETInc","PCDD_ETInc","ETDec","PCDec_ETDec","PCDD_ETDec")
RowNames <- c("Base","PCDec_ETSame","PCDrD_ETSame","PCBase_ETInc","PCDec_ETInc","PCDrD_ETInc","PCBase_ETDec","PCDec_ETDec","PCDrD_ETDec")
#Barplots
Dates <- c("2015", "2070", "2150")
#Per Capita
plot_ly(data=SummedScenarios,x=RowNames, y= ~ MI2015_Sums ,type = 'bar',name = "2015") %>%
add_trace(x=RowNames, y= ~ MI2070_Sums,name = "2070") %>%
add_trace(x=RowNames,y = ~ MI2150_Sums, name = "2150") %>%
layout(yaxis=list(title = 'M&I Demand (acre-feet)',barmode = 'group'))
