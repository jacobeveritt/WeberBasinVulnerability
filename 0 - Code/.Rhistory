############################Compile all data into one data.frame###########################################
###########################################################################################################
#Storage Data in one Column
Stacked_Inflow_June1 <- stack(AllDataJ1DF[1:108,1:30])
Stacked_Demand_June1 <- stack(AllDataJ1DF[109:216,1:30])
Stacked_Stor_June1 <- stack(AllDataJ1DF[217:324,1:30])
Stacked_Shortage_June1 <- stack(AllDataJ1DF[325:432,1:30])
Stacked_Sed_June1 <- stack(AllDataJ1DF[433:540,1:30])
Stacked_Traces_June1 <- rep(Trace_Notation,30)
### Add Trace Notation to Stacked Values
Stacked_Inflow_June1[2] <- Stacked_Traces_June1
Stacked_Demand_June1[2] <- Stacked_Traces_June1
Stacked_Stor_June1[2] <- Stacked_Traces_June1
Stacked_Shortage_June1[2] <- Stacked_Traces_June1
Stacked_Sed_June1[2] <- Stacked_Traces_June1
#Rename Columns
names(Stacked_Inflow_June1)[2] <- paste("Traces")
names(Stacked_Inflow_June1)[1] <- paste("Inflows")
names(Stacked_Demand_June1)[2] <- paste("Traces")
names(Stacked_Demand_June1)[1] <- paste("Demand")
names(Stacked_Stor_June1)[2] <- paste("Traces")
names(Stacked_Stor_June1)[1] <- paste("Storage")
names(Stacked_Shortage_June1)[2] <- paste("Traces")
names(Stacked_Shortage_June1)[1] <- paste("Shortages")
names(Stacked_Sed_June1)[2] <- paste("Traces")
names(Stacked_Sed_June1)[1] <- paste("Sedimentation")
#Merge Data frames
J1Data <- Stacked_Inflow_June1
J1Data$Demand <- Stacked_Demand_June1$Demand
J1Data$Storage <- Stacked_Stor_June1$Storage
J1Data$Shortage <- Stacked_Shortage_June1$Shortages
J1Data$Sedimentation <-Stacked_Sed_June1$Sedimentation
#Rename Inflow Column
colnames(Tot_Short)[1] <- "Inflow"
#View(J1Data)
## Filter Sedimentation
J1Data_NoZero <- filter(J1Data,Shortage>1)
J1Data_NoSed <- filter(J1Data,Sedimentation==0)
J1Data_10Perc <- filter(J1Data,Sedimentation==10)
J1Data_30Perc <- filter(J1Data,Sedimentation==30)
J1Data_NoSed_NoZero <- filter(J1Data_NoSed,Shortage>1)
J1Data_10Perc_NoZero <- filter(J1Data_10Perc,Shortage>1)
J1Data_30Perc_NoZero <- filter(J1Data_30Perc,Shortage>1)
##################################################################################################
###PLOTS###
##################################################################################################
library(plotly)
if (!require("processx")) install.packages("processx")
setwd("~/GitHub/WeberBasinVulnerability/WeberBasinVulnerability/3 - Post Processing/Output")
###################### Contour Plots ############################################################
#Shortage
p <- plot_ly(
x = J1Data$Demand,
y = J1Data$Inflows,
z = J1Data$Shortage, type = "contour")%>%
colorbar(title = "Shortage Level")%>%
layout(title = "June 1st Shortages by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
#No Zero
p <- plot_ly(
x = J1Data_NoZero$Demand,
y = J1Data_NoZero$Inflows,
z = J1Data_NoZero$Shortage, type = "contour",contours = list(start = 0,
end = 11000,
size = 100))%>%
colorbar(title = "Shortage Level")%>%
layout(title = "June 1st Shortages by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
# 0% Sedimentation
p <- plot_ly(
x = J1Data_NoSed$Demand,
y = J1Data_NoSed$Inflows,
z = J1Data_NoSed$Shortage, type = "contour")%>%
colorbar(title="Shortage Level") %>%
layout(title = "No Sedimentation Shortages by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
p <- plot_ly(
x = J1Data_NoSed_NoZero$Demand,
y = J1Data_NoSed_NoZero$Inflows,
z = J1Data_NoSed_NoZero$Shortage, type = "contour")%>%
colorbar(title="Shortage Level") %>%
layout(title = "No Sedimentation Shortages by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
# 10% Sedimentation
p <- plot_ly(
x = J1Data_10Perc$Demand,
y = J1Data_10Perc$Inflows,
z = J1Data_10Perc$Shortage, type = "contour")%>%
colorbar(title="Shortage Level") %>%
layout(title = "10% Sedimentation Shortages by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
p <- plot_ly(
x = J1Data_10Perc_NoZero$Demand,
y = J1Data_10Perc_NoZero$Inflows,
z = J1Data_10Perc_NoZero$Shortage, type = "contour")%>%
colorbar(title="Shortage Level") %>%
layout(title = "No Sedimentation Shortages by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
# 30% Sedimentation
p <- plot_ly(
x = J1Data_30Perc$Demand,
y = J1Data_30Perc$Inflows,
z = J1Data_30Perc$Shortage, type = "contour")%>%
colorbar(title="Shortage Level") %>%
layout(title = "30% Sedimentation Shortages by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
p <- plot_ly(
x = J1Data_30Perc_NoZero$Demand,
y = J1Data_30Perc_NoZero$Inflows,
z = J1Data_30Perc_NoZero$Shortage, type = "contour")%>%
colorbar(title="Shortage Level") %>%
layout(title = "No Sedimentation Shortages by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
#Storage
p <- plot_ly(
x = J1Data$Demand,
y = J1Data$Inflows,
z = J1Data$Storage, type = "contour")%>%
colorbar(title="Storage Level")%>%
layout(title = "All Data Storage by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
#0% Reservior Change to Sed
p <- plot_ly(
x = J1Data_NoSed$Demand,
y = J1Data_NoSed$Inflows,
z = J1Data_NoSed$Storage, type = "contour")%>%
layout(title = "No Sedimentation Storage by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
#10% Reservior Change to Sed
p <- plot_ly(
x = J1Data_10Perc$Demand,
y = J1Data_10Perc$Inflows,
z = J1Data_10Perc$Storage, type = "contour")%>%
layout(title = "10% Sedimentation Storage by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
#30% Reservior Change to Sed
p <- plot_ly(
x = J1Data_30Perc$Demand,
y = J1Data_30Perc$Inflows,
z = J1Data_30Perc$Storage, type = "contour")%>%
layout(title = "30% Sedimentation Storage by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
# Sedimentation   -- Issues with only plotting the 30% level for the sedimentation
#p <- plot_ly(
#x = J1Data$Demand,
#y = J1Data$Inflows,
#z = J1Data$Sedimentation, type = "contour")%>%
#layout(title = "Sedimentation by Color",
#       xaxis = list(title="Demand"),
#        yaxis = list(title="Inflows"))
#p
#p <- plot_ly(
#x = J1Data$Demand,
# y = J1Data$Sedimentation,
#  z = J1Data$Inflows, type = "contour")%>%
# layout(title = "Sedimentation by Color",
#         xaxis = list(title="Demand"),
#          yaxis = list(title="Sedimentation"))
#  p
############ Storage Contours based on Moderate, Severe and Extreme Storage Drought Levels  #############################
#Storage
p <- plot_ly(
x = J1Data$Demand,
y = J1Data$Inflows,
z = J1Data$Storage, type = "contour",
colors = c("red","orange","yellow","white"),
#contours = list(coloring = 'heatmap'),
autocontour = F,contours = list(
start = 280000,
end = 380000,
size = 50000
))%>%
layout(title = "Storage by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
#Storage
p <- plot_ly(
x = J1Data_NoSed$Demand,
y = J1Data_NoSed$Inflows,
z = J1Data_NoSed$Storage, type = "contour",
colors = c("red","orange","yellow","white"),
#contours = list(coloring = 'heatmap'),
autocontour = F,contours = list(
start = 280000,
end = 380000,
size = 50000
))%>%
colorbar(title="Storage Level")%>%
layout(title = "Storage by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
p <- plot_ly(
x = J1Data_10Perc$Demand,
y = J1Data_10Perc$Inflows,
z = J1Data_10Perc$Storage, type = "contour",
colors = c("red","orange","yellow","white"),
#contours = list(coloring = 'heatmap'),
autocontour = F,contours = list(
start = 280000,
end = 380000,
size = 50000
))%>%
colorbar(title="Storage Level")%>%
layout(title = "Storage by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
p <- plot_ly(
x = J1Data_NoSed$Demand,
y = J1Data_NoSed$Inflows,
z = J1Data_NoSed$Storage, type = "contour",
colors = c("red","orange","yellow","white"),
#contours = list(coloring = 'heatmap'),
autocontour = F,contours = list(
start = 280000,
end = 380000,
size = 50000
))%>%
colorbar(title="Storage Level")%>%
layout(title = "Storage by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
#Set all data above 380,000 acreft of storage to NA in order to show other levels more effectively
NData <- filter(J1Data_NoSed,Storage<380000)
#Storage
p <- plot_ly(
x = NData$Demand,
y = NData$Inflows,
z = NData$Storage, type = "contour",
colors = c("red","orange","yellow","white"),
#contours = list(coloring = 'heatmap',colors = c("red","orange","yellow","white")),
autocontour = F,contours = list(
start = 280000,
end = 380000,
size = 50000
))%>%
layout(title = "Storage by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
### Get rid of 0 Values in Shortages
newData <- filter(J1Data, Shortage>0)
#######################Plot New Data with no Zeros #####################################
#Shortage
p <- plot_ly(
x = newData$Demand,
y = newData$Inflows,
z = newData$Shortage, type = "contour")%>%
layout(title = "Shortages by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
#Storage
p <- plot_ly(
x = newData$Demand,
y = newData$Inflows,
z = newData$Storage, type = "contour")%>%
layout(title = "Storage by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
p <- plot_ly(
x = newData$Demand,
y = newData$Inflows,
z = newData$Storage, type = "contour",
colors = c("red","orange","yellow","white"),
#contours = list(coloring = 'heatmap',colors = c("red","orange","yellow","white")),
autocontour = F,contours = list(
start = 280000,
end = 380000,
size = 50000,
showlabels = TRUE
))%>% colorbar(title = "Storage Level") %>%
layout(title = "Storage by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
# Sedimentation & Shortage
p <- plot_ly(
x = newData$Sedimentation,
y = newData$Inflows,
z = newData$Shortage,type = "contour")%>%
layout(title = "Sedimentation by Color",
xaxis = list(title="Sedimentation"),
yaxis = list(title="Inflows"))
p
################################### Shortage only data Plots ##############################################
Plot_Data <- filter(J1Data, Sedimentation==0,Shortage>500)
Plot_Data <- data.frame(Plot_Data)
Plot_Data$Traces <- as.factor(Plot_Data$Traces)
colors <- c('#4AC6B7', '#1972A4', '#965F8A', '#FF7070', '#C61951')
#Contour
p <- plot_ly(Plot_Data,
x = ~Demand,
y = ~Inflows,
z = ~Shortage, type = "contour")%>%
layout(title = 'June 1st -- Demands v. Inflows -- Shortage',
scene = list(xaxis = list(title = 'Per Capita Water Usage Demands (Acre-Feet/Year)',
gridcolor = 'rgb(255, 255, 255)',
type = 'log',
zerolinewidth = 1,
ticklen = 5,
gridwidth = 2),
yaxis = list(title = 'Total System Monthly Inflows (Acre-Feet)',
gridcolor = 'rgb(255, 255, 255)',
zerolinewidth = 1,
ticklen = 5,
gridwith = 2)))
p
#3d
p <- plot_ly(Plot_Data, x = ~Demand, y = ~Inflows, z = ~Shortage, color = ~Storage , #size = ~size, colors = colors,
# marker = list(symbol = 'circle', sizemode = 'diameter'), sizes = c(5, 150),
text = ~paste('Trace Notation:', Traces, '<br>Sedimentation:', Sedimentation)) %>%
layout(title = 'June 1st -- Demands v. Inflows -- Shortage',
scene = list(xaxis = list(title = 'Per Capita Water Usage Demands (Acre-Feet/Year)',
gridcolor = 'rgb(255, 255, 255)',
type = 'log',
zerolinewidth = 1,
ticklen = 5,
gridwidth = 2),
yaxis = list(title = 'Total System Monthly Inflows (Acre-Feet)',
gridcolor = 'rgb(255, 255, 255)',
zerolinewidth = 1,
ticklen = 5,
gridwith = 2),
zaxis = list(title = 'Monthly Shortages (Acre-Feet)',
gridcolor = 'rgb(255, 255, 255)',
type = 'log',
zerolinewidth = 1,
ticklen = 5,
gridwith = 2)) ,
paper_bgcolor = 'rgb(243, 243, 243)',
plot_bgcolor = 'rgb(243, 243, 243)'
)
p
#2d - Shortage -- Inflows vs Demand
p <- plot_ly(Plot_Data, x = ~Demand, y = ~Inflows, color = ~Shortage , size = ~Storage, #colors = colors,
# marker = list(symbol = 'circle', sizemode = 'diameter'), sizes = c(5, 150),
text = ~paste('Trace Notation:', Traces, '<br>Sedimentation:', Sedimentation)) %>%
layout(title = 'June 1st -- Inflows v. Demands -- Shortage',
scene = list(xaxis = list(title = 'Per Capita Water Usage Demands (Acre-Feet/Year)',
gridcolor = 'rgb(255, 255, 255)',
type = 'log',
zerolinewidth = 1,
ticklen = 5,
gridwidth = 2),
yaxis = list(title = 'Total System Monthly Inflows (Acre-Feet)',
gridcolor = 'rgb(255, 255, 255)',
zerolinewidth = 1,
ticklen = 5,
gridwith = 2)),
paper_bgcolor = 'rgb(243, 243, 243)',
plot_bgcolor = 'rgb(243, 243, 243)')
p
## Contour and 2D plot/Demands v. Inflows -- Shortage
p <- plot_ly(Plot_Data,x = ~Demand,y = ~Inflows,z = ~Shortage, type = "contour")%>%
layout(title = 'June 1st -- Demands v. Inflows -- Shortage',
scene = list(xaxis = list(title = 'Per Capita Water Usage Demands (Acre-Feet/Year)'),
yaxis = list(title = 'Total System Monthly Inflows (Acre-Feet)')) %>%
add_trace( x = ~Demand, y = ~Inflows, #color = ~Shortage , size = ~Storage, colors = colors,
# marker = list(symbol = 'circle', sizemode = 'diameter'), sizes = c(5, 150),
text = ~paste('Trace Notation:', Traces, '<br>Sedimentation:', Sedimentation)))
p
#2d Storage -- Inflows vs Demand
p <- plot_ly(Plot_Data, x = ~Demand, y = ~Inflows,color = ~Storage , size = ~Shortage,# colors = colors,
# marker = list(symbol = 'circle', sizemode = 'diameter'), sizes = c(5, 150),
text = ~paste('Trace Notation:', Traces, '<br>Sedimentation:', Sedimentation)) %>%
layout(title = 'June 1st -- Inflows v. Demands -- Storage',
scene = list(xaxis = list(title = 'Per Capita Water Usage Demands (Acre-Feet/Year)',
gridcolor = 'rgb(255, 255, 255)',
type = 'log',
zerolinewidth = 1,
ticklen = 5,
gridwidth = 2),
yaxis = list(title = 'Total System Monthly Inflows (Acre-Feet)',
gridcolor = 'rgb(255, 255, 255)',
zerolinewidth = 1,
ticklen = 5,
gridwith = 2)),
paper_bgcolor = 'rgb(243, 243, 243)',
plot_bgcolor = 'rgb(243, 243, 243)')
p
#2d Storage -- Shortage vs Demand
p <- plot_ly(Plot_Data, x = ~Demand, y = ~Shortage,color = ~Storage , size = ~Inflows,# colors = colors,
# marker = list(symbol = 'circle', sizemode = 'diameter'), sizes = c(5, 150),
text = ~paste('Trace Notation:', Traces, '<br>Sedimentation:', Sedimentation)) %>%
layout(title = 'June 1st -- Shortage v. Demands -- Shortage',
scene = list(xaxis = list(title = 'Per Capita Water Usage Demands (Acre-Feet/Year)',
gridcolor = 'rgb(255, 255, 255)',
type = 'log',
zerolinewidth = 1,
ticklen = 5,
gridwidth = 2),
yaxis = list(title = 'Total System Monthly Inflows (Acre-Feet)',
gridcolor = 'rgb(255, 255, 255)',
zerolinewidth = 1,
ticklen = 5,
gridwith = 2)),
paper_bgcolor = 'rgb(243, 243, 243)',
plot_bgcolor = 'rgb(243, 243, 243)')
p
#2d Shortage -- Storage vs Demands
p <- plot_ly(Plot_Data, x = ~Demand, y = ~Storage,color = ~Shortage , size = ~Inflows, colors = colors,
# marker = list(symbol = 'circle', sizemode = 'diameter'), sizes = c(5, 150),
text = ~paste('Trace Notation:', Traces, '<br>Sedimentation:', Sedimentation)) %>%
layout(title = 'June 1st -- Demands v. Inflows -- Shortage',
scene = list(xaxis = list(title = 'Per Capita Water Usage Demands (Acre-Feet/Year)',
gridcolor = 'rgb(255, 255, 255)',
type = 'log',
zerolinewidth = 1,
ticklen = 5,
gridwidth = 2),
yaxis = list(title = 'Total System Monthly Inflows (Acre-Feet)',
gridcolor = 'rgb(255, 255, 255)',
zerolinewidth = 1,
ticklen = 5,
gridwith = 2)),
paper_bgcolor = 'rgb(243, 243, 243)',
plot_bgcolor = 'rgb(243, 243, 243)')
p
#2d Storage -- Shortage vs Inflows
p <- plot_ly(Plot_Data, x = ~Inflows, y = ~Shortage,color = ~Storage , size = ~Inflows,# colors = colors,
# marker = list(symbol = 'circle', sizemode = 'diameter'), sizes = c(5, 150),
text = ~paste('Trace Notation:', Traces, '<br>Sedimentation:', Sedimentation)) %>%
layout(title = 'June 1st -- Shortages v. Inflows -- Storage',
scene = list(xaxis = list(title = 'Per Capita Water Usage Demands (Acre-Feet/Year)',
gridcolor = 'rgb(255, 255, 255)',
type = 'log',
zerolinewidth = 1,
ticklen = 5,
gridwidth = 2),
yaxis = list(title = 'Total System Monthly Inflows (Acre-Feet)',
gridcolor = 'rgb(255, 255, 255)',
zerolinewidth = 1,
ticklen = 5,
gridwith = 2)),
paper_bgcolor = 'rgb(243, 243, 243)',
plot_bgcolor = 'rgb(243, 243, 243)')
p
#2d Shortage -- Storage vs Inflows
p <- plot_ly(Plot_Data, x = ~Inflows, y = ~Storage, color = ~Shortage , size = ~Inflows,# colors = colors,
# marker = list(symbol = 'circle', sizemode = 'diameter'), sizes = c(5, 150),
text = ~paste('Trace Notation:', Traces, '<br>Sedimentation:', Sedimentation)) %>%
layout(title = 'June 1st -- Storage v. Inflows -- Shortage',
scene = list(xaxis = list(title = 'Per Capita Water Usage Demands (Acre-Feet/Year)',
gridcolor = 'rgb(255, 255, 255)',
type = 'log',
zerolinewidth = 1,
ticklen = 5,
gridwidth = 2),
yaxis = list(title = 'Total System Monthly Inflows (Acre-Feet)',
gridcolor = 'rgb(255, 255, 255)',
zerolinewidth = 1,
ticklen = 5,
gridwith = 2)),
paper_bgcolor = 'rgb(243, 243, 243)',
plot_bgcolor = 'rgb(243, 243, 243)')
p
########## Plot Scatter Plots ###########
### Individual plots
#X = Demand, Y= Inflows
p <- plot_ly(newData,x =newData$Demand,y=newData$Inflows ,color = newData$Storage,colors = blues9)%>%
layout(title = "Storage by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
#X = Demand, Y= Inflows Z = Shortages
p <- plot_ly(newData,x =newData$Demand,y=newData$Inflows ,color = newData$Shortages,colors = blues9)%>%   #How to ignore 0 values
layout(title = "Shortages by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
#X = Shortage, Y= Storage Z= Demands
p <- plot_ly(newData,x =newData$Shortage,y=newData$Storage ,color = newData$Demand) %>%
layout(title = "Demand by Color",
xaxis = list(title ="Shortage (Acre-Feet)"),
yaxis = list(title = "Storage (Acre-Feet)"))
p
#X = Shortage, Y= Storage Z= Inflows
p <- plot_ly(newData,x =newData$Shortage,y=newData$Storage ,color = newData$Inflows)%>%
layout(title = "Inflows by Color",
xaxis = list(title ="Shortage (Acre-Feet)"),
yaxis = list(title = "Storage (Acre-Feet)"))
p
############ End of June 1 code##########
