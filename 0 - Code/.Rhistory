}
##################   Compile Mnthly Input data    ##################################
#Create Data Frame
Inputs<- data.frame(Tot_Mnthly_Demand)
Inputs$Inflow <- Tot_Mnthly_Inflow
Inputs$Sedimentation <- Tot_Mnthly_Sed
Inputs$Trace_Notation <- Trace_Notation
Inputs$Month<-Mnths
Inputs$Years<-Yrs
Inputs$WaterYear<-Wtr_Yrs
#Number
Inputs$Number<-c(1:38772)
Inputs <- data.frame(Inputs)
##################################  - 2 - Output data ########################################################
#Set Local Directory
setwd(startWD)
setwd("../2 - RiverWare Modeling/Scenario")
Tot_Mnthly_Stor <- read.csv("Trace1,Trace1,Trace1/Total Storage_NO EVAP.csv")
Tot_Mnthly_Short <-read.csv("Trace1,Trace1,Trace1/Total Shortages.csv")
##### Total Storage #####
i=1
for(TTTNum in 1:TraceNumber){
for(TTNum in 1:TraceNumber1){
for(TNum in 1:TraceNumber2){
TraceDirectory <- paste0(",Trace",TNum)
TraceDirectory <-paste0 (TraceDirectory,"/Total Storage_NO EVAP.csv")
TraceNum1<- paste0(",Trace",TTNum)
TraceDirectory <- paste0(TraceNum1,TraceDirectory)
TraceNum2 <- paste0("Trace",TTTNum)
TraceDirectory <- paste0(TraceNum2,TraceDirectory)
Location <- TraceDirectory
Temp_Storage <- read.csv(Location)
Tot_Mnthly_Stor[,i] <- Temp_Storage[,5]
colnames(Tot_Mnthly_Stor)[i] <-  TraceDirectory
i=i+1
}
}
}
Tot_Mnthly_Stor <- data.frame(Tot_Mnthly_Stor)
#Transpose Data
Tot_Mnthly_Stor_Transposed <- t(Tot_Mnthly_Stor)
Tot_Mnthly_Stor_Transposed <- data.frame(Tot_Mnthly_Stor_Transposed)
#View(Tot_Mnthly_Inflow_Transposed)
#Stack Columns
Tot_Mnthly_Stor_Stacked <- stack(Tot_Mnthly_Stor_Transposed[1:108,1:359])
Tot_Mnthly_Stor <- Tot_Mnthly_Stor_Stacked$values
Tot_Mnthly_Stor <- data.frame(Tot_Mnthly_Stor)
##### Total Shortages #####
i=1
for(TTTNum in 1:TraceNumber){
for(TTNum in 1:TraceNumber1){
for(TNum in 1:TraceNumber2){
TraceDirectory <- paste0(",Trace",TNum)
TraceDirectory <-paste0 (TraceDirectory,"/Total Shortages.csv")
TraceNum1<- paste0(",Trace",TTNum)
TraceDirectory <- paste0(TraceNum1,TraceDirectory)
TraceNum2 <- paste0("Trace",TTTNum)
TraceDirectory <- paste0(TraceNum2,TraceDirectory)
Location <- TraceDirectory
Temp_Storage <- read.csv(Location)
Tot_Mnthly_Short[,i] <- Temp_Storage[,5]
colnames(Tot_Mnthly_Short)[i] <-  TraceDirectory
i=i+1
}
}
}
Tot_Mnthly_Short <- data.frame(Tot_Mnthly_Short)
#Transpose Data
Tot_Mnthly_Short_Transposed <- t(Tot_Mnthly_Short)
Tot_Mnthly_Short_Transposed <- data.frame(Tot_Mnthly_Short_Transposed)
#View(Tot_Mnthly_Inflow_Transposed)
#Stack Columns
Tot_Mnthly_Short_Stacked <- stack(Tot_Mnthly_Short_Transposed[1:108,1:359])
Tot_Mnthly_Short <- Tot_Mnthly_Short_Stacked$values
########################   Compile Output data   ###############################
Outputs <- Tot_Mnthly_Stor
Outputs$Shortage <- Tot_Mnthly_Short
# Add Trace Notation
#Outputs$Trace_Notation <-Trace_Notation
#Number
Outputs$Number<-c(1:38772)
Outputs<-data.frame(Outputs)
#########################  Merge  ---- Data Dataframe########################
Data <- merge(Inputs,Outputs,by="Number")
#From Monthly Streamflows to Annual Streamflows
Annual_Inflows <-Data %>%
group_by(WaterYear,Trace_Notation) %>%
summarise_all(funs(sum(Inflow)))
Avg_Annual_Inflows <- Annual_Inflows %>%
group_by(Trace_Notation) %>%
summarise_all(funs(mean(Inflow)))
Avg_Annual_Inflow<-data.frame(Avg_Annual_Inflows$Inflow)
colnames(Avg_Annual_Inflow)<-"Annual Avg Inflow"
Avg_Annual_Inflow$Trace_Notation <-Trace_Notation
colnames(Avg_Annual_Inflow)[2]<-"Trace_Notation"
#Repeat Calculation from monthly shortage to total annual shortage by water year
Annual_Shortage <-Data %>%
group_by(WaterYear,Trace_Notation) %>%
summarise_all(funs(sum(Shortage)))
Avg_Annual_Shortage <- Annual_Shortage %>%
group_by(Trace_Notation) %>%
summarise_all(funs(mean(Shortage)))
Avg_Annual_Shortage<-data.frame(Avg_Annual_Shortage$Shortage)
colnames(Avg_Annual_Shortage)<-"Annual Avg Shortage"
Avg_Annual_Shortage$Trace_Notation <- Trace_Notation
colnames(Avg_Annual_Shortage)[2]<-"Trace_Notation"
Data <- full_join(Data,Avg_Annual_Inflow,by="Trace_Notation")
Data <- full_join(Data,Avg_Annual_Shortage,by ="Trace_Notation")
# Define reservoir levels as arrays: Moderate -> Severe -> Extreme
cStoreNames <- c("Moderate", "Severe", "Extreme")
cStorLevels <- c(380000,340000,280000)
cColors <- c("Yellow", "Orange", "Red")
ModerateLevel<- 380000
SevereLevel <- 340000
ExtremeLevel<-280000
#Calculate the number of storage levels
nLevels <- length(cStorLevels)
#Pull out the monthly storage values
#Storage_Metrics <- data.frame(Data$Tot_Mnthly_Stor)
Storage_Metrics <- data.frame(Data[,c("Month","Tot_Mnthly_Stor")])
#Create more duplicate columns
Storage_Metrics <- cbind(Storage_Metrics, replicate(nLevels-1,Storage_Metrics$Tot_Mnthly_Stor))
#Rename the columns
colnames(Storage_Metrics)[2:(nLevels+1)] <- cStoreNames
#Record the last data column
cLastDataCol <- ncol(Data)
#Loop through columns. In each column convert the storage values to a binary: 1 if greater or equal to target. 0 if below
for (i in 1:nLevels) {
#Is the storage criteria met?
Storage_Metrics[,1+i] <- ifelse(Storage_Metrics[,1+i] > cStorLevels[i],1,0)
#Save the result back to the Data datafrom
Data[,cLastDataCol + i] <- Storage_Metrics[,1+i]
#Rename the column
colnames(Data)[cLastDataCol +i] <- cStoreNames[i]
}
cRelColNames <- paste0("Rel", cStoreNames)
#Calculate the average (fraction) for each combination of traces for each column. This represents
#the reliability
dfStorageReliability <-Data[,c("Trace_Notation","Month",cStoreNames)] %>%
filter(Month == 6) %>%  #Filter on the June month because that is when we care about storage at criteria
group_by(Trace_Notation) %>%
summarise_all(funs(mean))
#Multiply by 100 to get a percent
dfStorageReliability[,cStoreNames] <- dfStorageReliability[,cStoreNames]*100
# Rename columns
colnames(dfStorageReliability)[3:5] <- c("Mod Reliability", "Sev Reliability","Ext Reliability")
##### Join the Reservoir storage reliability back with the big data set
AllData<-right_join(Data,dfStorageReliability,by='Trace_Notation')
##################################################################################################
###PLOTS###
##################################################################################################
library(plotly)
#Create Label/Settings Dataframe for multiple plots  ------>>>> In progress ====
Titles <- c("June 1st Storage Levels Reliability
Moderate Storage Level (380,000 Acre-Feet)",
"June 1st Storage Levels Reliability
Severe Storage Level (340,000 Acre-Feet)",
"June 1st Storage Levels Reliability
Extreme Storage Level (280,000 Acre-Feet)",
"June 1st Storage Levels Reliability")
Titles <-data.frame(Titles)
Axises <-c("Demand (Acre-Feet/Year)","Inflows (Acre-Feet/Year)")
Axises<- data.frame(Axises)
Data_NoSed <- filter(AllData,Sedimentation==0)
Data_10Perc <- filter(AllData,Sedimentation==10)
Data_30Perc <- filter(AllData,Sedimentation==30)
#Select Data frame to do Calculation on.
PlotData<- Data_NoSed
PlotData10 <- Data_10Perc
PlotData30 <- Data_30Perc
#NO Sedimentation
#########Individual PLOTS############
x<-PlotData$Demand
y<-PlotData$`Annual Avg Inflow`
# Moderate Demand Level
z=PlotData$`Mod Reliability`
p1
#Severe Demand Level
z=PlotData$`Sev Reliability`
p2 <- plot_ly(
x = x,
y = y,
z = z, type = "contour",contours = list(showlabels = TRUE),colors = c("orange","white"))%>%
colorbar(title = "Fraction of\n Simulated Years")%>%
layout(title = "June 1st Storage Levels Reliability
Severe Storage Level (340,000 Acre-Feet)",
xaxis = list(title ="Demand (Acre-Feet/Year)"),
yaxis = list(title = "Inflows (Acre-Feet/Year)"))
p3 <- plot_ly(
x = x,
y = y,
z = z, type = "contour",contours = list(showlabels = TRUE),colors = c("red","white"))%>%
colorbar(title = "Fraction of\n Simulated Years")%>%
layout(title = "June 1st Storage Levels Reliability
Extreme Storage Level (280,000 Acre-Feet)",
xaxis = list(title ="Demand (Acre-Feet/Year)"),
yaxis = list(title = "Inflows (Acre-Feet/Year)"))
p3
s1 <- subplot(p1,p2,p3,nrows = 3)
#10% Sedimentation
#########Individual PLOTS############
x<-PlotData10$Demand
y<-PlotData10$`Annual Avg Inflow`
# Moderate Demand Level
z=PlotData10$`Mod Reliability`
p1 <- plot_ly(
x = x,
y = y,
z = z , type = "contour",contours = list(showlabels = TRUE),colors = c("yellow","white"))%>%
colorbar(title = "Percent of\n Simulated Years")%>%
layout(title = "June 1st Storage Levels Reliability
Moderate Storage Level (380,000 Acre-Feet)",
xaxis = list(title ="Demand (Acre-Feet/Year)"),
yaxis = list(title = "Inflows (Acre-Feet/Year)"))
p1
#Severe Demand Level
z=PlotData10$`Sev Reliability`
p2 <- plot_ly(
x = x,
y = y,
z = z, type = "contour",contours = list(showlabels = TRUE),colors = c("orange","white"))%>%
colorbar(title = "Fraction of\n Simulated Years")%>%
layout(title = "June 1st Storage Levels Reliability
Severe Storage Level (340,000 Acre-Feet)",
xaxis = list(title ="Demand (Acre-Feet/Year)"),
yaxis = list(title = "Inflows (Acre-Feet/Year)"))
p2
#Extreme Demand Level
z=PlotData10$`Ext Reliability`
p3 <- plot_ly(
x = x,
y = y,
z = z, type = "contour",contours = list(showlabels = TRUE),colors = c("red","white"))%>%
colorbar(title = "Fraction of\n Simulated Years")%>%
layout(title = "June 1st Storage Levels Reliability
Extreme Storage Level (280,000 Acre-Feet)",
xaxis = list(title ="Demand (Acre-Feet/Year)"),
yaxis = list(title = "Inflows (Acre-Feet/Year)"))
p3
s2 <- subplot(p1,p2,p3,nrows = 3)
#30% Sedimentation
#########Individual PLOTS############
x<-PlotData30$Demand
y<-PlotData30$`Annual Avg Inflow`
# Moderate Demand Level
z=PlotData30$`Mod Reliability`
p1 <- plot_ly(
x = x,
y = y,
z = z , type = "contour",contours = list(showlabels = TRUE),colors = c("yellow","white"))%>%
colorbar(title = "Percent of\n Simulated Years")%>%
layout(title = "June 1st Storage Levels Reliability
Moderate Storage Level (380,000 Acre-Feet)",
xaxis = list(title ="Demand (Acre-Feet/Year)"),
yaxis = list(title = "Inflows (Acre-Feet/Year)"))
p1
#Severe Demand Level
z=PlotData30$`Sev Reliability`
p2 <- plot_ly(
x = x,
y = y,
z = z, type = "contour",contours = list(showlabels = TRUE),colors = c("orange","white"))%>%
colorbar(title = "Fraction of\n Simulated Years")%>%
layout(title = "June 1st Storage Levels Reliability
Severe Storage Level (340,000 Acre-Feet)",
xaxis = list(title ="Demand (Acre-Feet/Year)"),
yaxis = list(title = "Inflows (Acre-Feet/Year)"))
p2
#Extreme Demand Level
z=PlotData30$`Ext Reliability`
p3 <- plot_ly(
x = x,
y = y,
z = z, type = "contour",contours = list(showlabels = TRUE),colors = c("red","white"))%>%
colorbar(title = "Fraction of\n Simulated Years")%>%
layout(title = "June 1st Storage Levels Reliability
Extreme Storage Level (280,000 Acre-Feet)",
xaxis = list(title ="Demand (Acre-Feet/Year)"),
yaxis = list(title = "Inflows (Acre-Feet/Year)"))
p3
s3 <- subplot(p1,p2,p3,nrows = 3)
p3x3
############ Storage Contours based on Moderate, Severe and Extreme Storage Drought Levels  #############################
#Storage
z=Data$Storage
p <- plot_ly(
x = x$Data.Demand,
y = y$Data.Inflow,
z =z , type = "contour",
colors = c("red","orange","yellow","white"),
#contours = list(coloring = 'heatmap'),
autocontour = F,contours = list(
start = 280000,
end = 380000,
size = 50000
))%>%
layout(title = "Storage by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
############ End of June 1 code##########
setwd(startWD)
p2
p1 <- plot_ly(
x = x,
y = y,
z = z , type = "contour",contours = list(showlabels = TRUE),colors = c("yellow","white"))%>%
colorbar(title = "Percent of\n Simulated Years")%>%
layout(title = "June 1st Storage Levels Reliability
Moderate Storage Level (380,000 Acre-Feet)",
xaxis = list(title ="Demand (Acre-Feet/Year)"),
yaxis = list(title = "Inflows (Acre-Feet/Year)"))
#Extreme Demand Level
z=PlotData$`Ext Reliability`
# Create a 3x3 Matrix Plot -- Subplots
p3x3 <- subplot(s1,s2,s3,nrows = 3)%>%
layout(showlegend = FALSE)
p
############ End of June 1 code##########
setwd(startWD)
############ Storage Contours based on Moderate, Severe and Extreme Storage Drought Levels  #############################
#Storage
z=Data$Storage
p <- plot_ly(
x = x$Data.Demand,
y = y$Data.Inflow,
z =z , type = "contour",
colors = c("red","orange","yellow","white"),
#contours = list(coloring = 'heatmap'),
autocontour = F,contours = list(
start = 280000,
end = 380000,
size = 50000
))%>%
layout(title = "Storage by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
############ Storage Contours based on Moderate, Severe and Extreme Storage Drought Levels  #############################
#Storage
z=PlotData$Storage
p <- plot_ly(
x = PlotData$Demand,
y = PlotData$Inflow,
z =z , type = "contour",
colors = c("red","orange","yellow","white"),
#contours = list(coloring = 'heatmap'),
autocontour = F,contours = list(
start = 280000,
end = 380000,
size = 50000
))%>%
layout(title = "Storage by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
############ Storage Contours based on Moderate, Severe and Extreme Storage Drought Levels  #############################
#Storage
z=PlotData$Tot_Mnthly_Stor
p <- plot_ly(
x = PlotData$Demand,
y = PlotData$Inflow,
z =z , type = "contour",
colors = c("red","orange","yellow","white"),
#contours = list(coloring = 'heatmap'),
autocontour = F,contours = list(
start = 280000,
end = 380000,
size = 50000
))%>%
layout(title = "Storage by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
#NO Sedimentation
#########Individual PLOTS############
x<-PlotData$Demand
y<-PlotData$`Annual Avg Inflow`
# Moderate Demand Level
z=PlotData$`Mod Reliability`
p1 <- plot_ly(
x = x,
y = y,
z = z , type = "contour",contours = list(showlabels = TRUE),colors = c("yellow","white"))%>%
colorbar(title = "Percent of\n Simulated Years")%>%
layout(title = "June 1st Storage Levels Reliability
Moderate Storage Level (380,000 Acre-Feet)",
xaxis = list(title ="Demand (Acre-Feet/Year)"),
yaxis = list(title = "Inflows (Acre-Feet/Year)"))
p1
#Severe Demand Level
z=PlotData$`Sev Reliability`
p2 <- plot_ly(
x = x,
y = y,
z = z, type = "contour",contours = list(showlabels = TRUE),colors = c("orange","white"))%>%
colorbar(title = "Fraction of\n Simulated Years")%>%
layout(title = "June 1st Storage Levels Reliability
Severe Storage Level (340,000 Acre-Feet)",
xaxis = list(title ="Demand (Acre-Feet/Year)"),
yaxis = list(title = "Inflows (Acre-Feet/Year)"))
p2
#Extreme Demand Level
z=PlotData$`Ext Reliability`
p3 <- plot_ly(
x = x,
y = y,
z = z, type = "contour",contours = list(showlabels = TRUE),colors = c("red","white"))%>%
colorbar(title = "Fraction of\n Simulated Years")%>%
layout(title = "June 1st Storage Levels Reliability
Extreme Storage Level (280,000 Acre-Feet)",
xaxis = list(title ="Demand (Acre-Feet/Year)"),
yaxis = list(title = "Inflows (Acre-Feet/Year)"))
p3
s1 <- subplot(p1,p2,p3,nrows = 3)
s1
#10% Sedimentation
#########Individual PLOTS############
x<-PlotData10$Demand
y<-PlotData10$`Annual Avg Inflow`
# Moderate Demand Level
z=PlotData10$`Mod Reliability`
p1 <- plot_ly(
x = x,
y = y,
z = z , type = "contour",contours = list(showlabels = TRUE),colors = c("yellow","white"))%>%
colorbar(title = "Percent of\n Simulated Years")%>%
layout(title = "June 1st Storage Levels Reliability
Moderate Storage Level (380,000 Acre-Feet)",
xaxis = list(title ="Demand (Acre-Feet/Year)"),
yaxis = list(title = "Inflows (Acre-Feet/Year)"))
p1
#Severe Demand Level
z=PlotData10$`Sev Reliability`
p2 <- plot_ly(
x = x,
y = y,
z = z, type = "contour",contours = list(showlabels = TRUE),colors = c("orange","white"))%>%
colorbar(title = "Fraction of\n Simulated Years")%>%
layout(title = "June 1st Storage Levels Reliability
Severe Storage Level (340,000 Acre-Feet)",
xaxis = list(title ="Demand (Acre-Feet/Year)"),
yaxis = list(title = "Inflows (Acre-Feet/Year)"))
p2
#Extreme Demand Level
z=PlotData10$`Ext Reliability`
p3 <- plot_ly(
x = x,
y = y,
z = z, type = "contour",contours = list(showlabels = TRUE),colors = c("red","white"))%>%
colorbar(title = "Fraction of\n Simulated Years")%>%
layout(title = "June 1st Storage Levels Reliability
Extreme Storage Level (280,000 Acre-Feet)",
xaxis = list(title ="Demand (Acre-Feet/Year)"),
yaxis = list(title = "Inflows (Acre-Feet/Year)"))
p3
s2 <- subplot(p1,p2,p3,nrows = 3)
s2
#30% Sedimentation
#########Individual PLOTS############
x<-PlotData30$Demand
y<-PlotData30$`Annual Avg Inflow`
# Moderate Demand Level
z=PlotData30$`Mod Reliability`
p1 <- plot_ly(
x = x,
y = y,
z = z , type = "contour",contours = list(showlabels = TRUE),colors = c("yellow","white"))%>%
colorbar(title = "Percent of\n Simulated Years")%>%
layout(title = "June 1st Storage Levels Reliability
Moderate Storage Level (380,000 Acre-Feet)",
xaxis = list(title ="Demand (Acre-Feet/Year)"),
yaxis = list(title = "Inflows (Acre-Feet/Year)"))
p1
#Severe Demand Level
z=PlotData30$`Sev Reliability`
p2 <- plot_ly(
x = x,
y = y,
z = z, type = "contour",contours = list(showlabels = TRUE),colors = c("orange","white"))%>%
colorbar(title = "Fraction of\n Simulated Years")%>%
layout(title = "June 1st Storage Levels Reliability
Severe Storage Level (340,000 Acre-Feet)",
xaxis = list(title ="Demand (Acre-Feet/Year)"),
yaxis = list(title = "Inflows (Acre-Feet/Year)"))
p2
#Extreme Demand Level
z=PlotData30$`Ext Reliability`
p3 <- plot_ly(
x = x,
y = y,
z = z, type = "contour",contours = list(showlabels = TRUE),colors = c("red","white"))%>%
colorbar(title = "Fraction of\n Simulated Years")%>%
layout(title = "June 1st Storage Levels Reliability
Extreme Storage Level (280,000 Acre-Feet)",
xaxis = list(title ="Demand (Acre-Feet/Year)"),
yaxis = list(title = "Inflows (Acre-Feet/Year)"))
p3
s3 <- subplot(p1,p2,p3,nrows = 3)
# Create a 3x3 Matrix Plot -- Subplots
p3x3 <- subplot(s1,s2,s3,nrows = 3)%>%
layout(showlegend = FALSE)
s2
# Create a 3x3 Matrix Plot -- Subplots
p3x3 <- subplot(s1,s2,s3,nrows = 3)%>%
layout(showlegend = FALSE)
p3x3
s3 <- subplot(p1,p2,p3,ncol = 3)
s3
s3 <- subplot(p1,p2,p3,ncol = 3)
s3 <- subplot(p1,p2,p3,ncols = 3)
s3 <- subplot(p1,p2,p3,nrows = 1)
s3
