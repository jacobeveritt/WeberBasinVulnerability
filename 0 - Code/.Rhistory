plot_ly(data = MIAG, x="Year 2015", y=MIAG$MIAG2015_Sums,type='scatter',mode='markers',name = MIAG$Names_2015,
size = MIAG$Ag_Conversion,shape=MIAG$PerCapita,color = MIAG$Ag_Conversion,blues9)%>%
add_trace(x='Year 2070', y=MIAG$MIAG2070_Sums,name = MIAG$Names_2070)%>%
add_trace(x= 'Year 2150',y=MIAG$MIAG2150_Sums,name = MIAG$Names_2150)%>%
layout(yaxis = list(title ='M&I + AG Demand (acre-feet)',tickformat = '.1f',showticklabels=FALSE),showlegend = FALSE)
plot_ly(data = MIAG, x="Year 2015", y=MIAG$MIAG2015_Sums,type='scatter',mode='markers',name = MIAG$Names_2015,
size = MIAG$Ag_Conversion,shape=MIAG$PerCapita,color = MIAG$Ag_Conversion)%>%
add_trace(x='Year 2070', y=MIAG$MIAG2070_Sums,name = MIAG$Names_2070)%>%
add_trace(x= 'Year 2150',y=MIAG$MIAG2150_Sums,name = MIAG$Names_2150)%>%
layout(yaxis = list(title ='M&I + AG Demand (acre-feet)',tickformat = '.1f',showticklabels=FALSE),showlegend = FALSE)
plot_ly(data = MIAG, x="Year 2015", y=MIAG$MIAG2015_Sums,type='scatter',mode='markers',name = MIAG$Names_2015,
size = MIAG$PerCapita,color = MIAG$Ag_Conversion)%>%
add_trace(x='Year 2070', y=MIAG$MIAG2070_Sums,name = MIAG$Names_2070)%>%
add_trace(x= 'Year 2150',y=MIAG$MIAG2150_Sums,name = MIAG$Names_2150)%>%
layout(yaxis = list(title ='M&I + AG Demand (acre-feet)',tickformat = '.1f',showticklabels=FALSE),showlegend = FALSE)
plot_ly(data = MIAG, x="Year 2015", y=MIAG$MIAG2015_Sums,type='scatter',mode='markers',name = MIAG$Names_2015,
size = MIAG$PerCapita,color = MIAG$Ag_Conversion,colorscale="blues9")%>%
add_trace(x='Year 2070', y=MIAG$MIAG2070_Sums,name = MIAG$Names_2070)%>%
add_trace(x= 'Year 2150',y=MIAG$MIAG2150_Sums,name = MIAG$Names_2150)%>%
layout(yaxis = list(title ='M&I + AG Demand (acre-feet)',tickformat = '.1f',showticklabels=FALSE),showlegend = FALSE)
plot_ly(data = MIAG, x="Year 2015", y=MIAG$MIAG2015_Sums,type='scatter',mode='markers',name = MIAG$Names_2015,
size = MIAG$Ag_Conversion,shape=MIAG$PerCapita,color = MIAG$Ag_Conversion,colors = blues9)%>%
add_trace(x='Year 2070', y=MIAG$MIAG2070_Sums,name = MIAG$Names_2070)%>%
add_trace(x= 'Year 2150',y=MIAG$MIAG2150_Sums,name = MIAG$Names_2150)%>%
layout(yaxis = list(title ='M&I + AG Demand (acre-feet)',tickformat = '.1f',showticklabels=FALSE),showlegend = FALSE)
MIandAg_Demand2015 <- data.frame(AG_2015[,1] + MI_2015[,1])
i=1
j=1
while (i<=ncol(MI_2015)) {
MIandAg_Demand2015[,j] <- AG_2015[,1] + MI_2015[,i]
i=i+1
j=j+1
}
#2070
MIandAg_Demand2070 <- data.frame(AG_2070[,1] + MI_2070[,1])
i=1
j=1
k=1
while (k<=3) {
while (i<=ncol(MI_2070)) {
MIandAg_Demand2070[,j] <- AG_2070[,k] + MI_2070[,i]
i=i+1
j=j+1
}
k=k+1
i=1
}
MIandAg_Demand2150 <- data.frame(AG_2150[,1] + MI_2150[,1])
i=1
j=1
k=1
while (k<=3) {
while (i<=ncol(MI_2150)) {
MIandAg_Demand2150[,j] <- AG_2150[,k] + MI_2150[,i]
i=i+1
j=j+1
}
k=k+1
i=1
}
#Conversion factor of  0.65
Changein_AG_2070to2015 = data.frame(Changein_MI_2070to2015/AGtoMI_CF[1])  #**put in while loop for differing conversion factors ?
Changein_AG_2150to2015 = data.frame(Changein_MI_2150to2015/AGtoMI_CF[1])
#Conversion factor of  0.72
Changein_AG_2070to2015[,2] = Changein_MI_2070to2015/AGtoMI_CF[2]  #output notation for 0.72 is a ".1" at the end of the column name i.e.MI_SA_2070.1
Changein_AG_2150to2015[,2] = Changein_MI_2150to2015/AGtoMI_CF[2]
#Conversion factor of 0.78
Changein_AG_2070to2015[,3] = Changein_MI_2070to2015/AGtoMI_CF[3]  #output notation for 0.78 is a ".2" at the end of the column name i.e.MI_SA_2070.2
Changein_AG_2150to2015[,3] = Changein_MI_2150to2015/AGtoMI_CF[3]
#BaseDemand <- data.frame(DWRSA_Table$MAX) #MAX AG WATER USE
BaseDemand <- data.frame(DWRSA_Table$AVG)    #OR AVG AG WATER USE
BaseDemand[20,] <- 0
AgBase2015 <- BaseDemand - MI_Same$X2015
#View(AgBase2015)
i=1
AG_2015 <- AgBase2015
AG_2070 <- data.frame(rep(1:20))
AG_2150 <- data.frame(rep(1:20))
while (i<=3) {
AG_2070[,i] <- data.frame(AgBase2015 - Changein_AG_2070to2015[,i])
AG_2150[,i] <- data.frame(AgBase2015 - Changein_AG_2150to2015[,i])
i=i+1
}
AG_2070[,1:3] <- replace(AG_2070[,1:3], AG_2070[,1:3] < 0, 0)
AG_2150[,1:3] <- replace(AG_2150[,1:3], AG_2150[,1:3] < 0, 0)
AG_2070<- AG_2070*1.05
AG_2150<- AG_2150*1.05
AG_2150<- AG_2150*1.08
MIandAg_Demand2015 <- data.frame(AG_2015[,1] + MI_2015[,1])
i=1
j=1
while (i<=ncol(MI_2015)) {
MIandAg_Demand2015[,j] <- AG_2015[,1] + MI_2015[,i]
i=i+1
j=j+1
}
#2070
MIandAg_Demand2070 <- data.frame(AG_2070[,1] + MI_2070[,1])
i=1
j=1
k=1
while (k<=3) {
while (i<=ncol(MI_2070)) {
MIandAg_Demand2070[,j] <- AG_2070[,k] + MI_2070[,i]
i=i+1
j=j+1
}
k=k+1
i=1
}
MIandAg_Demand2150 <- data.frame(AG_2150[,1] + MI_2150[,1])
i=1
j=1
k=1
while (k<=3) {
while (i<=ncol(MI_2150)) {
MIandAg_Demand2150[,j] <- AG_2150[,k] + MI_2150[,i]
i=i+1
j=j+1
}
k=k+1
i=1
}
MIandAg_Demand <- data.frame(c(MIandAg_Demand2015,MIandAg_Demand2070,MIandAg_Demand2150))
#write.xlsx(MIandAg_Demand,"MI_with_AG.xlsx")
write.csv(MIandAg_Demand,"MI_with_AG.csv")
#Tab---- Create Workbook-----------
#Input How Many Scenarios                  #### Nine 2015 Scenarios, Twenty-Seven 2070 Scenarios, and Twenty-Seven 2150 Scenarios
#### 63 Total MI plus Ag Scenarios ########
RunNumber <- 27
#Create Workbook
wb <- createWorkbook("Data")
#Create Worksheet for each Run
for(Num in 1:(RunNumber)) {
RunsString <- paste0("Trace",Num)
addWorksheet(wb, RunsString)
}
#Input Data
SAs<- c('SA1','SA2','SA3','SA4','SA5','SA6','SA7','SA8','SA9','SA10','SA11','SA12','SA13','SA14','SA15','SA16','SA17','SA18','SA19','SA20')
i=1
while (i<=RunNumber) {
writeData(wb,sheet = i, SAs,startCol = 1,startRow = 3)
i=i+1
}
i=1
while (i<=RunNumber) {
writeData(wb,sheet = i, MIandAg_Demand[,i],startCol = 2,startRow = 3)
i=i+1
}
saveWorkbook(wb,"MI+AG.xlsx",overwrite = TRUE)
#################################################################################################################################################################################################################################################################################################################################################################################################################################################
### Sum Data for plots ###
#################################################################################################################################################################################################################################################################################################################################################################################################################################################
#MIandAg_Demand Sums
#Create Data frame
MIandAG_Sums <- t(colnames(MIandAg_Demand))
i=1
while (i<=63) {
MIandAG_Sums[,i] <- sum(MIandAg_Demand[,i])
i=i+1
}
MIandAG_Sums<- data.frame(MIandAG_Sums)
Nms<-t(colnames(MIandAg_Demand))
names(MIandAG_Sums) <- c(Nms)
round(sum(MIandAg_Demand[,2]),7)
#Transpose Data
Tnsp_MIandAG_Sums <- data.frame(t(MIandAG_Sums))
#Name Column
names(Tnsp_MIandAG_Sums)[1] <- paste("MI + AG")
Year <- data.frame(rep(2015,9),rep(2070,27),rep(2150,27))
#View(Tnsp_MIandAG_Sums)
names <- data.frame(colnames(MIandAG_Sums))
#MI+Ag_Sums
SummedScenarios <- data.frame("Base","PCDec","PCDD","ETInc","PCDec_ETInc","PCDD_ETInc","ETDec","PCDec_ETDec","PCDD_ETDec")
#Sums
MIAG2015_Sums <- colSums(MIandAg_Demand2015,na.rm = F, dims = 1)
MIAG2015_Sums <- data.frame(MIAG2015_Sums)
MIAG2070_Sums <- colSums(MIandAg_Demand2070[,1:9],na.rm = F, dims = 1)
MIAG2070_Sums <- data.frame(MIAG2070_Sums)
MIAG2150_Sums <- colSums(MIandAg_Demand2150[,1:9],na.rm = F, dims = 1)
MIAG2150_Sums <- data.frame(MIAG2150_Sums)
SummedScenarios <- data.frame(c(MIAG2015_Sums,MIAG2070_Sums,MIAG2150_Sums))
RowNames <- c("Base","PCDec_ETSame","PCDrD_ETSame","PCBase_ETInc","PCDec_ETInc","PCDrD_ETInc","PCBase_ETDec","PCDec_ETDec","PCDrD_ETDec")
### Input data into one dataframe
MIAG<-MIAG2015_Sums
MIAG$MIAG2070_Sums<-MIAG2070_Sums$MIAG2070_Sums
MIAG$MIAG2150_Sums<-MIAG2150_Sums$MIAG2150_Sums
MIAG$Names_2015 <-names[1:9,]
MIAG$Names_2070 <- names[10:18,]
MIAG$Names_2150 <- names[37:45,]
MIAG$Year_2015 <- rep(2015,9)
MIAG$Year_2070 <- rep(2070,9)
MIAG$Year_2150 <- rep(2150,9)
MIAG$Ag_Conversion <- c(1:9)
View(AG_2015)
sum(AG_2015)
MIAG$Ag_Conversion_2015 <- c(rep(sum(AG_2015),9))
MIAG$Ag_Conversion_2015 <- c(rep(sum(AG_2015),9))
MIAG$Ag_Conversion_2070 <- c(rep(sum(AG_2070),9))
MIAG$Ag_Conversion_2150 <- c(rep(sum(AG_2150),9))
plot_ly(data = MIAG, x="Year 2015", y=MIAG$MIAG2015_Sums,type='scatter',mode='markers',name = MIAG$Names_2015,
size = MIAG$Ag_Conversion,shape=MIAG$PerCapita,color = MIAG$Ag_Conversion,colors = blues9)%>%
add_trace(x='Year 2070', y=MIAG$MIAG2070_Sums,name = MIAG$Names_2070)%>%
add_trace(x= 'Year 2150',y=MIAG$MIAG2150_Sums,name = MIAG$Names_2150)%>%
layout(yaxis = list(title ='M&I + AG Demand (acre-feet)',tickformat = '.1f',showticklabels=FALSE),showlegend = FALSE)
MIAG$Ag_Conversion<- c(1:9)
MIAG$PerCapita <-c(1:9)
# |  Part 0:
# |  PART 1:
# |  PART 2:
# |  PART 3:
# *-----------------------------------------------------------------
# | UPDATES:
# |
# |
# *------------------------------------------------------------------
### Clear any existing data or functions.
rm(list=ls())
library(readxl)
#Set Working Directory
#setwd("~/GitHub/WeberBasinVulnerability/WeberBasinVulnerability/1 - Scenario Processing/Annual Service Area Demand Scenarios/Input_Data")
#Store the current code directory so we can later return to it (0 - Code)
fCodeDir <- getwd()
#Move into the local input directory
setwd("../1 - Scenario Processing/Annual Service Area Demand Scenarios/Input_Data")
DWRSA_Table <- read_excel("DWRSA_Table.xlsx")
#Set New Working Directory
#Return to code directory
setwd(fCodeDir)
#Move into the local output directory
setwd("../1 - Scenario Processing/Annual Service Area Demand Scenarios/Output")
##Possible package installation necessary
#install.packages("RColorBrewer")
#install.packages("plotly")
#install.packages("readxl")
#install.packages("openxlsx")
library(readxl)
library(plotly)
library(RColorBrewer)
library(openxlsx)
library("tibble", lib.loc="~/R/win-library/3.5")
##Input Data###############
## DER - What data is being read in exactly? Population, water use, something else?
## Municipal and Industrial water use  MI_Same is the base case
setwd("~/GitHub/WeberBasinVulnerability/WeberBasinVulnerability/1 - Scenario Processing/Annual Service Area Demand Scenarios/Output")
#MI_Same <- read_excel("~/GitHub/WeberBasinVulnerability/WeberBasinVulnerability/1 - Scenario Processing/Annual Service Area Demand Scenarios/Output/MI_Same.xlsx")
MI_Same <- read_excel("MI_Same.xlsx")
MI_Same <- data.frame(MI_Same)
MI_Same[20,] <- 0
MI_2015<- read_excel("MI_2015.xlsx")
MI_2070<- read_excel("MI_2070.xlsx")
MI_2150<- read_excel("MI_2150.xlsx")
ddddMI <- read_excel("MI.xlsx")
##Calculation##############
AGtoMI_CF <- c(0.65,0.72,0.78) #Agriculture to Municipal Water Use Conversion Factor
#MI2070_SamePerCap - MI2015_SamePerCap = Changein_MI
Changein_MI_2070to2015 = MI_Same$X2070 - MI_Same$X2015
Changein_MI_2150to2015 = MI_Same$X2150 - MI_Same$X2015
#Conversion factor of  0.65
Changein_AG_2070to2015 = data.frame(Changein_MI_2070to2015/AGtoMI_CF[1])  #**put in while loop for differing conversion factors ?
Changein_AG_2150to2015 = data.frame(Changein_MI_2150to2015/AGtoMI_CF[1])
#Conversion factor of  0.72
Changein_AG_2070to2015[,2] = Changein_MI_2070to2015/AGtoMI_CF[2]  #output notation for 0.72 is a ".1" at the end of the column name i.e.MI_SA_2070.1
Changein_AG_2150to2015[,2] = Changein_MI_2150to2015/AGtoMI_CF[2]
#Conversion factor of 0.78
Changein_AG_2070to2015[,3] = Changein_MI_2070to2015/AGtoMI_CF[3]  #output notation for 0.78 is a ".2" at the end of the column name i.e.MI_SA_2070.2
Changein_AG_2150to2015[,3] = Changein_MI_2150to2015/AGtoMI_CF[3]
#BaseDemand <- data.frame(DWRSA_Table$MAX) #MAX AG WATER USE
BaseDemand <- data.frame(DWRSA_Table$AVG)    #OR AVG AG WATER USE
BaseDemand[20,] <- 0
AgBase2015 <- BaseDemand - MI_Same$X2015
AgBase2015 <- BaseDemand - MI_Same$X2015
#View(AgBase2015)
i=1
AG_2015 <- AgBase2015
AG_2070 <- data.frame(rep(1:20))
AG_2150 <- data.frame(rep(1:20))
while (i<=3) {
AG_2070[,i] <- data.frame(AgBase2015 - Changein_AG_2070to2015[,i])
AG_2150[,i] <- data.frame(AgBase2015 - Changein_AG_2150to2015[,i])
i=i+1
}
AG_2070[,1:3] <- replace(AG_2070[,1:3], AG_2070[,1:3] < 0, 0)
AG_2150[,1:3] <- replace(AG_2150[,1:3], AG_2150[,1:3] < 0, 0)
AG_2070<- AG_2070*1.05
AG_2150<- AG_2150*1.08
MIandAg_Demand2015 <- data.frame(AG_2015[,1] + MI_2015[,1])
i=1
j=1
while (i<=ncol(MI_2015)) {
MIandAg_Demand2015[,j] <- AG_2015[,1] + MI_2015[,i]
i=i+1
j=j+1
}
#2070
MIandAg_Demand2070 <- data.frame(AG_2070[,1] + MI_2070[,1])
i=1
j=1
k=1
while (k<=3) {
while (i<=ncol(MI_2070)) {
MIandAg_Demand2070[,j] <- AG_2070[,k] + MI_2070[,i]
i=i+1
j=j+1
}
k=k+1
i=1
}
MIandAg_Demand2150 <- data.frame(AG_2150[,1] + MI_2150[,1])
i=1
j=1
k=1
MIandAg_Demand <- data.frame(c(MIandAg_Demand2015,MIandAg_Demand2070,MIandAg_Demand2150))
while (k<=3) {
while (i<=ncol(MI_2150)) {
MIandAg_Demand2150[,j] <- AG_2150[,k] + MI_2150[,i]
i=i+1
j=j+1
}
k=k+1
i=1
}
#write.xlsx(MIandAg_Demand,"MI_with_AG.xlsx")
write.csv(MIandAg_Demand,"MI_with_AG.csv")
View(MIandAg_Demand2070)
#Tab---- Create Workbook-----------
#Input How Many Scenarios                  #### Nine 2015 Scenarios, Twenty-Seven 2070 Scenarios, and Twenty-Seven 2150 Scenarios
#### 63 Total MI plus Ag Scenarios ########
RunNumber <- 27
#Create Workbook
wb <- createWorkbook("Data")
#Create Worksheet for each Run
for(Num in 1:(RunNumber)) {
RunsString <- paste0("Trace",Num)
addWorksheet(wb, RunsString)
}
#Input Data
SAs<- c('SA1','SA2','SA3','SA4','SA5','SA6','SA7','SA8','SA9','SA10','SA11','SA12','SA13','SA14','SA15','SA16','SA17','SA18','SA19','SA20')
i=1
while (i<=RunNumber) {
writeData(wb,sheet = i, SAs,startCol = 1,startRow = 3)
i=i+1
}
i=1
while (i<=RunNumber) {
writeData(wb,sheet = i, MIandAg_Demand[,i],startCol = 2,startRow = 3)
i=i+1
}
saveWorkbook(wb,"MI+AG.xlsx",overwrite = TRUE)
#################################################################################################################################################################################################################################################################################################################################################################################################################################################
### Sum Data for plots ###
#################################################################################################################################################################################################################################################################################################################################################################################################################################################
#MIandAg_Demand Sums
#Create Data frame
MIandAG_Sums <- t(colnames(MIandAg_Demand))
i=1
while (i<=63) {
MIandAG_Sums[,i] <- sum(MIandAg_Demand[,i])
i=i+1
}
MIandAG_Sums<- data.frame(MIandAG_Sums)
Nms<-t(colnames(MIandAg_Demand))
names(MIandAG_Sums) <- c(Nms)
round(sum(MIandAg_Demand[,2]),7)
# |  Part 0:
# |  PART 1:
# |  PART 2:
# |  PART 3:
# *-----------------------------------------------------------------
# | UPDATES:
# |
# |
# *------------------------------------------------------------------
### Clear any existing data or functions.
rm(list=ls())
library(readxl)
#Set Working Directory
#setwd("~/GitHub/WeberBasinVulnerability/WeberBasinVulnerability/1 - Scenario Processing/Annual Service Area Demand Scenarios/Input_Data")
#Store the current code directory so we can later return to it (0 - Code)
fCodeDir <- getwd()
#Move into the local input directory
setwd("../1 - Scenario Processing/Annual Service Area Demand Scenarios/Input_Data")
setwd("~/GitHub/WeberBasinVulnerability/WeberBasinVulnerability/1 - Scenario Processing/Annual Service Area Demand Scenarios/Input_Data")
DWRSA_Table <- read_excel("DWRSA_Table.xlsx")
#Set New Working Directory
#Return to code directory
setwd(fCodeDir)
#Move into the local output directory
setwd("../1 - Scenario Processing/Annual Service Area Demand Scenarios/Output")
#Move into the local output directory
#setwd("../1 - Scenario Processing/Annual Service Area Demand Scenarios/Output")
setwd("~/GitHub/WeberBasinVulnerability/WeberBasinVulnerability/1 - Scenario Processing/Annual Service Area Demand Scenarios/Output")
##Possible package installation necessary
#install.packages("RColorBrewer")
#install.packages("plotly")
#install.packages("readxl")
#install.packages("openxlsx")
library(readxl)
library(plotly)
library(RColorBrewer)
library(openxlsx)
library("tibble", lib.loc="~/R/win-library/3.5")
##Input Data###############
## DER - What data is being read in exactly? Population, water use, something else?
## Municipal and Industrial water use  MI_Same is the base case
setwd("~/GitHub/WeberBasinVulnerability/WeberBasinVulnerability/1 - Scenario Processing/Annual Service Area Demand Scenarios/Output")
#MI_Same <- read_excel("~/GitHub/WeberBasinVulnerability/WeberBasinVulnerability/1 - Scenario Processing/Annual Service Area Demand Scenarios/Output/MI_Same.xlsx")
MI_Same <- read_excel("MI_Same.xlsx")
MI_Same <- data.frame(MI_Same)
MI_Same[20,] <- 0
MI_2015<- read_excel("MI_2015.xlsx")
MI_2070<- read_excel("MI_2070.xlsx")
MI_2150<- read_excel("MI_2150.xlsx")
ddddMI <- read_excel("MI.xlsx")
##Calculation##############
AGtoMI_CF <- c(0.65,0.72,0.78) #Agriculture to Municipal Water Use Conversion Factor
#MI2070_SamePerCap - MI2015_SamePerCap = Changein_MI
Changein_MI_2070to2015 = MI_Same$X2070 - MI_Same$X2015
Changein_MI_2150to2015 = MI_Same$X2150 - MI_Same$X2015
#Conversion factor of  0.65
Changein_AG_2070to2015 = data.frame(Changein_MI_2070to2015/AGtoMI_CF[1])  #**put in while loop for differing conversion factors ?
Changein_AG_2150to2015 = data.frame(Changein_MI_2150to2015/AGtoMI_CF[1])
#Conversion factor of  0.72
Changein_AG_2070to2015[,2] = Changein_MI_2070to2015/AGtoMI_CF[2]  #output notation for 0.72 is a ".1" at the end of the column name i.e.MI_SA_2070.1
Changein_AG_2150to2015[,2] = Changein_MI_2150to2015/AGtoMI_CF[2]
#Conversion factor of 0.78
Changein_AG_2070to2015[,3] = Changein_MI_2070to2015/AGtoMI_CF[3]  #output notation for 0.78 is a ".2" at the end of the column name i.e.MI_SA_2070.2
Changein_AG_2150to2015[,3] = Changein_MI_2150to2015/AGtoMI_CF[3]
#BaseDemand <- data.frame(DWRSA_Table$MAX) #MAX AG WATER USE
BaseDemand <- data.frame(DWRSA_Table$AVG)    #OR AVG AG WATER USE
BaseDemand[20,] <- 0
AgBase2015 <- BaseDemand - MI_Same$X2015
#View(AgBase2015)
i=1
AG_2015 <- AgBase2015
AG_2070 <- data.frame(rep(1:20))
AG_2150 <- data.frame(rep(1:20))
while (i<=3) {
AG_2070[,i] <- data.frame(AgBase2015 - Changein_AG_2070to2015[,i])
AG_2150[,i] <- data.frame(AgBase2015 - Changein_AG_2150to2015[,i])
i=i+1
}
AG_2070[,1:3] <- replace(AG_2070[,1:3], AG_2070[,1:3] < 0, 0)
AG_2150[,1:3] <- replace(AG_2150[,1:3], AG_2150[,1:3] < 0, 0)
AG_2070<- AG_2070*1.05
AG_2150<- AG_2150*1.08
MIandAg_Demand2015 <- data.frame(AG_2015[,1] + MI_2015[,1])
i=1
j=1
while (i<=ncol(MI_2015)) {
MIandAg_Demand2015[,j] <- AG_2015[,1] + MI_2015[,i]
i=i+1
j=j+1
}
#2070
MIandAg_Demand2070 <- data.frame(AG_2070[,1] + MI_2070[,1])
i=1
j=1
k=1
while (k<=3) {
while (i<=ncol(MI_2070)) {
MIandAg_Demand2070[,j] <- AG_2070[,k] + MI_2070[,i]
i=i+1
j=j+1
}
k=k+1
i=1
}
MIandAg_Demand2150 <- data.frame(AG_2150[,1] + MI_2150[,1])
i=1
j=1
k=1
while (k<=3) {
while (i<=ncol(MI_2150)) {
MIandAg_Demand2150[,j] <- AG_2150[,k] + MI_2150[,i]
i=i+1
j=j+1
}
k=k+1
i=1
}
MIandAg_Demand <- data.frame(c(MIandAg_Demand2015,MIandAg_Demand2070,MIandAg_Demand2150))
#write.xlsx(MIandAg_Demand,"MI_with_AG.xlsx")
write.csv(MIandAg_Demand,"MI_with_AG.csv")
#Tab---- Create Workbook-----------
#Input How Many Scenarios                  #### Nine 2015 Scenarios, Twenty-Seven 2070 Scenarios, and Twenty-Seven 2150 Scenarios
#### 63 Total MI plus Ag Scenarios ########
RunNumber <- 27
#Create Workbook
wb <- createWorkbook("Data")
#Create Worksheet for each Run
for(Num in 1:(RunNumber)) {
RunsString <- paste0("Trace",Num)
addWorksheet(wb, RunsString)
}
#Input Data
SAs<- c('SA1','SA2','SA3','SA4','SA5','SA6','SA7','SA8','SA9','SA10','SA11','SA12','SA13','SA14','SA15','SA16','SA17','SA18','SA19','SA20')
i=1
while (i<=RunNumber) {
writeData(wb,sheet = i, SAs,startCol = 1,startRow = 3)
i=i+1
}
i=1
while (i<=RunNumber) {
writeData(wb,sheet = i, MIandAg_Demand[,i],startCol = 2,startRow = 3)
i=i+1
}
saveWorkbook(wb,"MI+AG.xlsx",overwrite = TRUE)
View(wb)
View(MIandAg_Demand)
AllDemandData <- MIandAg_Demand
View(AG_2015)
