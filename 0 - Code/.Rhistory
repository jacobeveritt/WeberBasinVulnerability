Tot_Mnthly_Inflow$Years <- Years
#Add a Water year - The water year is designated by the calendar year in which it ends, so the 2010 water year (USGS) started on October 1, 2009 and ended on September 30, 2010
Tot_Mnthly_Inflow$WaterYear <- ifelse(Tot_Mnthly_Inflow$Months>= 10,Tot_Mnthly_Inflow$Years + 1, Tot_Mnthly_Inflow$Years)
WaterYear<-ifelse(Tot_Mnthly_Inflow$Months>= 10,Tot_Mnthly_Inflow$Years + 1, Tot_Mnthly_Inflow$Years)
#Transpose Data
Tot_Mnthly_Inflow_Transposed <- t(Tot_Mnthly_Inflow)
Tot_Mnthly_Inflow_Transposed <- data.frame(Tot_Mnthly_Inflow_Transposed)
#View(Tot_Mnthly_Inflow_Transposed)
#Stack Columns
Tot_Mnthly_Inflow_Stacked <- stack(Tot_Mnthly_Inflow_Transposed[1:108,1:359])
Tot_Mnthly_Inflow <- Tot_Mnthly_Inflow_Stacked$values
##Total Sedimentation Changes on Reservoir
setwd("~/GitHub/WeberBasinVulnerability/WeberBasinVulnerability/3 - Post Processing")
Tot_Sed <- read.csv("Sedimentation.csv")
Tot_Sed <- Tot_Sed[,2]
Tot_Mnthly_Sed <- rep(Tot_Sed,359)
#### Time Columns: Mnths, Years and Water Years #####
Mnths<-c(1:38772)
i=1
j=1
while (i<=359) {
Mnths[j:(i*108)]<-Months[i]
i=i+1
j=j+108
}
Yrs<-c(1:38772)
i=1
j=1
while (i<=359) {
Yrs[j:(i*108)]<-Years[i]
i=i+1
j=j+108
}
Wtr_Yrs<-c(1:38772)
i=1
j=1
while (i<=359) {
Wtr_Yrs[j:(i*108)]<-WaterYear[i]
i=i+1
j=j+108
}
##################   Compile Mnthly Input data    ##################################
#Create Data Frame
Inputs<- data.frame(Tot_Mnthly_Demand)
Inputs$Inflow <- Tot_Mnthly_Inflow
Inputs$Sedimentation <- Tot_Mnthly_Sed
Inputs$Trace_Notation <- Trace_Notation
Inputs$Month<-Mnths
Inputs$Years<-Yrs
Inputs$WaterYear<-Wtr_Yrs
#Number
Inputs$Number<-c(1:38772)
Inputs <- data.frame(Inputs)
##################################  - 2 - Output data ########################################################
setwd("~/GitHub/WeberBasinVulnerability/WeberBasinVulnerability/2 - RiverWare Modeling/Scenario")
Tot_Mnthly_Stor <- read.csv("Trace1,Trace1,Trace1/Total Storage_NO EVAP.csv")
Tot_Mnthly_Short <-read.csv("Trace1,Trace1,Trace1/Total Shortages.csv")
##### Total Storage #####
i=1
for(TTTNum in 1:TraceNumber){
for(TTNum in 1:TraceNumber1){
for(TNum in 1:TraceNumber2){
TraceDirectory <- paste0(",Trace",TNum)
TraceDirectory <-paste0 (TraceDirectory,"/Total Storage_NO EVAP.csv")
TraceNum1<- paste0(",Trace",TTNum)
TraceDirectory <- paste0(TraceNum1,TraceDirectory)
TraceNum2 <- paste0("Trace",TTTNum)
TraceDirectory <- paste0(TraceNum2,TraceDirectory)
Location <- TraceDirectory
Temp_Storage <- read.csv(Location)
Tot_Mnthly_Stor[,i] <- Temp_Storage[,5]
colnames(Tot_Mnthly_Stor)[i] <-  TraceDirectory
i=i+1
}
}
}
Tot_Mnthly_Stor <- data.frame(Tot_Mnthly_Stor)
#Transpose Data
Tot_Mnthly_Stor_Transposed <- t(Tot_Mnthly_Stor)
Tot_Mnthly_Stor_Transposed <- data.frame(Tot_Mnthly_Stor_Transposed)
#View(Tot_Mnthly_Inflow_Transposed)
#Stack Columns
Tot_Mnthly_Stor_Stacked <- stack(Tot_Mnthly_Stor_Transposed[1:108,1:359])
Tot_Mnthly_Stor <- Tot_Mnthly_Stor_Stacked$values
Tot_Mnthly_Stor <- data.frame(Tot_Mnthly_Stor)
##### Total Shortages #####
i=1
for(TTTNum in 1:TraceNumber){
for(TTNum in 1:TraceNumber1){
for(TNum in 1:TraceNumber2){
TraceDirectory <- paste0(",Trace",TNum)
TraceDirectory <-paste0 (TraceDirectory,"/Total Shortages.csv")
TraceNum1<- paste0(",Trace",TTNum)
TraceDirectory <- paste0(TraceNum1,TraceDirectory)
TraceNum2 <- paste0("Trace",TTTNum)
TraceDirectory <- paste0(TraceNum2,TraceDirectory)
Location <- TraceDirectory
Temp_Storage <- read.csv(Location)
Tot_Mnthly_Short[,i] <- Temp_Storage[,5]
colnames(Tot_Mnthly_Short)[i] <-  TraceDirectory
i=i+1
}
}
}
Tot_Mnthly_Short <- data.frame(Tot_Mnthly_Short)
#Transpose Data
Tot_Mnthly_Short_Transposed <- t(Tot_Mnthly_Short)
Tot_Mnthly_Short_Transposed <- data.frame(Tot_Mnthly_Short_Transposed)
#View(Tot_Mnthly_Inflow_Transposed)
#Stack Columns
Tot_Mnthly_Short_Stacked <- stack(Tot_Mnthly_Short_Transposed[1:108,1:359])
Tot_Mnthly_Short <- Tot_Mnthly_Short_Stacked$values
########################   Compile Output data   ###############################
Outputs <- Tot_Mnthly_Stor
Outputs$Shortage <- Tot_Mnthly_Short
# Add Trace Notation
#Outputs$Trace_Notation <-Trace_Notation
#Number
Outputs$Number<-c(1:38772)
Outputs<-data.frame(Outputs)
#########################  Merge  ---- AllData Dataframe########################
AllDataDF <- merge(Inputs,Outputs,by="Number")
AllData_MonthlyDF <- AllDataDF
#From Monthly Streamflows to Annual Streamflows
Annual_Inflows <-AllDataDF %>%
group_by(WaterYear,Trace_Notation) %>%
summarise_all(funs(sum(Inflow)))
Avg_Annual_Inflows <- Annual_Inflows %>%
group_by(Trace_Notation) %>%
summarise_all(funs(mean(Inflow)))
Avg_Annual_Inflow<-data.frame(Avg_Annual_Inflows$Inflow)
colnames(Avg_Annual_Inflow)<-"Annual Avg Inflow"
Avg_Annual_Inflow$Trace_Notation <-Trace_Notation
colnames(Avg_Annual_Inflow)[2]<-"Trace_Notation"
AllData <- full_join(AllDataDF,Avg_Annual_Inflow,by="Trace_Notation")
Data_J1<- filter(AllData,Month == 6)
Data_NoSed <- filter(Data_J1,Sedimentation==0)
Data_10Perc <- filter(Data_J1,Sedimentation==10)
Data_30Perc <- filter(Data_J1,Sedimentation==30)
#Data <- Data_NoSed
#Data <- Data_10Perc
Data <- Data_30Perc
###########################################################################################################
#################### Reliability  Metric for Storage ########################
###########################################################################################################
#  -- Metrics based on WBWCD - Drought Contigency Plan Drought Levels --  #
# See Table 3-2 : Hot/Dry Projected Drought for Drought Levels
# Moderate Total Basin Storage Drought Level 340K to 380K -- Yellow  ("Less than 380K")
# Severe Total Basin Storage Drought Level 280K to 340K -- Orange    ("Less than 340K")
# Extreme Total Basin Storage Drought Level less than 280K -- Red    ("Less than 280K")
ModerateLevel<- 380000
SevereLevel <- 340000
ExtremeLevel<-280000
Storage_Metrics <- data.frame(Data$Tot_Mnthly_Stor)
Storage_Rel_Metrics_Moderate <- data.frame(Data$Tot_Mnthly_Stor)
Storage_Rel_Metrics_Severe <- data.frame(Data$Tot_Mnthly_Stor)
Storage_Rel_Metrics_Extreme <- data.frame(Data$Tot_Mnthly_Stor)
#Monthly Storage Column Number (MSCN)
MSCN <-9
i=1
while (i<=1080) {
Storage_Rel_Metrics_Moderate[i,] <- ifelse(Data[i,MSCN]>ModerateLevel,1,0)
i=i+1
}
#Severe
i=1
while (i<=1080) {
Storage_Rel_Metrics_Severe[i,] <- ifelse(Data[i,MSCN]>SevereLevel,1,0)
i=i+1
}
#Extreme
i=1
while (i<=1080) {
Storage_Rel_Metrics_Extreme[i,] <- ifelse(Data[i,MSCN]>ExtremeLevel,1,0)
i=i+1
}
#input Metrics into Data Dataframe
Data$ModerateStorageR <-Storage_Rel_Metrics_Moderate$Data.Tot_Mnthly_Stor
Data$SevereStorageR <- Storage_Rel_Metrics_Severe$Data.Tot_Mnthly_Stor
Data$ExtremeStorageR<- Storage_Rel_Metrics_Extreme$Data.Tot_Mnthly_Stor
## Calculate Reliability
Stor_Rel_Moderate <- data.frame(1:36)
Stor_Rel_Severe <- data.frame(c(1:36))
Stor_Rel_Extreme <- data.frame(1:36)
#Moderate
Reliability_Data_Moderate <-Data %>%
group_by(Trace_Notation) %>%
summarise(ModPercent = mean(ModerateStorageR)*100)
#Severe
Reliability_Data_Severe <-Data %>%
group_by(Trace_Notation) %>%
summarise(SevPercent = mean(SevereStorageR)*100)
#Extreme
Reliability_Data_Extreme <-Data %>%
group_by(Trace_Notation) %>%
summarise(ExtPercent = mean(ExtremeStorageR)*100)
PlotData <- right_join(Reliability_Data_Moderate,Reliability_Data_Severe,by = 'Trace_Notation')
PlotData <- right_join(PlotData,Reliability_Data_Extreme,by = 'Trace_Notation')
PlotData <- left_join(PlotData,Data,by ='Trace_Notation') ####################### -- ISSUES  #############
Data <- PlotData
##################################################################################################
###PLOTS###
##################################################################################################
library(plotly)
#Axis assignment
x=Data$Demand
y=Data$`Annual Avg Inflow`
setwd("~/GitHub/WeberBasinVulnerability/WeberBasinVulnerability/3 - Post Processing/Output")
# Moderate Demand Level
z=Data$ModPercent
p1 <- plot_ly(
x = x,
y = y,
z = z , type = "contour",colors = c("yellow","white"))%>%
colorbar(title = "Fraction of\n Simulated Years")%>%
layout(title = "June 1st Storage Levels Reliability
Moderate Storage Level (380,000 Acre-Feet)",
xaxis = list(title ="Demand (Acre-Feet/Year)"),
yaxis = list(title = "Inflows (Acre-Feet/Year)"))
p1
#Severe Demand Level
z=Data$SevPercent
p2 <- plot_ly(
x = x,
y = y,
z = z, type = "contour",colors = c("orange","white"))%>%
colorbar(title = "Fraction of\n Simulated Years")%>%
layout(title = "June 1st Storage Levels Reliability
Severe Storage Level (340,000 Acre-Feet)",
xaxis = list(title ="Demand (Acre-Feet/Year)"),
yaxis = list(title = "Inflows (Acre-Feet/Year)"))
p2
#Extreme Demand Level
z=Data$ExtPercent
p3 <- plot_ly(
x = x,
y = y,
z = z, type = "contour",colors = c("red","white"))%>%
colorbar(title = "Fraction of\n Simulated Years")%>%
layout(title = "June 1st Storage Levels Reliability
Extreme Storage Level (280,000 Acre-Feet)",
xaxis = list(title ="Demand (Acre-Feet/Year)"),
yaxis = list(title = "Inflows (Acre-Feet/Year)"))
p3
s1 <- subplot(p1,p2,p3, plot_ly(),nrows = 3)#, margin = 0.04, heights = c(0.6,0.3,0.1))
s1
s1 <- subplot(p1,p2,p3, plot_ly())#, margin = 0.04, heights = c(0.6,0.3,0.1))
s1
s1 <- subplot(p1,p2,p3)#, margin = 0.04, heights = c(0.6,0.3,0.1))
s1
##################################################################################################
###PLOTS###
##################################################################################################
library(plotly)
#Axis assignment
x=Data$Demand
y=Data$`Annual Avg Inflow`
setwd("~/GitHub/WeberBasinVulnerability/WeberBasinVulnerability/3 - Post Processing/Output")
# Moderate Demand Level
z=Data$ModPercent
p1 <- plot_ly(
x = x,
y = y,
z = z , type = "contour",colors = c("yellow","white"))%>%
colorbar(title = "Fraction of\n Simulated Years")%>%
layout(title = "June 1st Storage Levels Reliability
Moderate Storage Level (380,000 Acre-Feet)",
xaxis = list(title ="Demand (Acre-Feet/Year)"),
yaxis = list(title = "Inflows (Acre-Feet/Year)"))
p1
#Severe Demand Level
z=Data$SevPercent
p2 <- plot_ly(
x = x,
y = y,
z = z, type = "contour",colors = c("orange","white"))%>%
colorbar(title = "Fraction of\n Simulated Years")%>%
layout(title = "June 1st Storage Levels Reliability
Severe Storage Level (340,000 Acre-Feet)",
xaxis = list(title ="Demand (Acre-Feet/Year)"),
yaxis = list(title = "Inflows (Acre-Feet/Year)"))
p2
#Extreme Demand Level
z=Data$ExtPercent
p3 <- plot_ly(
x = x,
y = y,
z = z, type = "contour",colors = c("red","white"))%>%
colorbar(title = "Fraction of\n Simulated Years")%>%
layout(title = "June 1st Storage Levels Reliability
Extreme Storage Level (280,000 Acre-Feet)",
xaxis = list(title ="Demand (Acre-Feet/Year)"),
yaxis = list(title = "Inflows (Acre-Feet/Year)"))
p3
s1 <- subplot(p1,p2,p3)#, margin = 0.04, heights = c(0.6,0.3,0.1))
Data <- Data_10Perc
###########################################################################################################
#################### Reliability  Metric for Storage ########################
###########################################################################################################
#  -- Metrics based on WBWCD - Drought Contigency Plan Drought Levels --  #
# See Table 3-2 : Hot/Dry Projected Drought for Drought Levels
# Moderate Total Basin Storage Drought Level 340K to 380K -- Yellow  ("Less than 380K")
# Severe Total Basin Storage Drought Level 280K to 340K -- Orange    ("Less than 340K")
# Extreme Total Basin Storage Drought Level less than 280K -- Red    ("Less than 280K")
ModerateLevel<- 380000
SevereLevel <- 340000
ExtremeLevel<-280000
Storage_Metrics <- data.frame(Data$Tot_Mnthly_Stor)
Storage_Rel_Metrics_Moderate <- data.frame(Data$Tot_Mnthly_Stor)
Storage_Rel_Metrics_Severe <- data.frame(Data$Tot_Mnthly_Stor)
Storage_Rel_Metrics_Extreme <- data.frame(Data$Tot_Mnthly_Stor)
#Monthly Storage Column Number (MSCN)
MSCN <-9
i=1
while (i<=1080) {
Storage_Rel_Metrics_Moderate[i,] <- ifelse(Data[i,MSCN]>ModerateLevel,1,0)
i=i+1
}
#Severe
i=1
while (i<=1080) {
Storage_Rel_Metrics_Severe[i,] <- ifelse(Data[i,MSCN]>SevereLevel,1,0)
i=i+1
}
#Extreme
i=1
while (i<=1080) {
Storage_Rel_Metrics_Extreme[i,] <- ifelse(Data[i,MSCN]>ExtremeLevel,1,0)
i=i+1
}
#input Metrics into Data Dataframe
Data$ModerateStorageR <-Storage_Rel_Metrics_Moderate$Data.Tot_Mnthly_Stor
Data$SevereStorageR <- Storage_Rel_Metrics_Severe$Data.Tot_Mnthly_Stor
Data$ExtremeStorageR<- Storage_Rel_Metrics_Extreme$Data.Tot_Mnthly_Stor
## Calculate Reliability
Stor_Rel_Moderate <- data.frame(1:36)
Stor_Rel_Severe <- data.frame(c(1:36))
Stor_Rel_Extreme <- data.frame(1:36)
#Moderate
Reliability_Data_Moderate <-Data %>%
group_by(Trace_Notation) %>%
summarise(ModPercent = mean(ModerateStorageR)*100)
#Severe
Reliability_Data_Severe <-Data %>%
group_by(Trace_Notation) %>%
summarise(SevPercent = mean(SevereStorageR)*100)
#Extreme
Reliability_Data_Extreme <-Data %>%
group_by(Trace_Notation) %>%
summarise(ExtPercent = mean(ExtremeStorageR)*100)
PlotData <- right_join(Reliability_Data_Moderate,Reliability_Data_Severe,by = 'Trace_Notation')
PlotData <- right_join(PlotData,Reliability_Data_Extreme,by = 'Trace_Notation')
PlotData <- left_join(PlotData,Data,by ='Trace_Notation')
Data <- PlotData
##################################################################################################
###PLOTS###
##################################################################################################
library(plotly)
#Axis assignment
x=Data$Demand
y=Data$`Annual Avg Inflow`
setwd("~/GitHub/WeberBasinVulnerability/WeberBasinVulnerability/3 - Post Processing/Output")
# Moderate Demand Level
z=Data$ModPercent
# Moderate Demand Level
z=Data$ModPercent
p11 <- plot_ly(
x = x,
y = y,
z = z , type = "contour",colors = c("yellow","white"))%>%
colorbar(title = "Fraction of\n Simulated Years")%>%
layout(title = "June 1st Storage Levels Reliability
Moderate Storage Level (380,000 Acre-Feet)",
xaxis = list(title ="Demand (Acre-Feet/Year)"),
yaxis = list(title = "Inflows (Acre-Feet/Year)"))
p11
#Severe Demand Level
z=Data$SevPercent
p21 <- plot_ly(
x = x,
y = y,
z = z, type = "contour",colors = c("orange","white"))%>%
colorbar(title = "Fraction of\n Simulated Years")%>%
layout(title = "June 1st Storage Levels Reliability
Severe Storage Level (340,000 Acre-Feet)",
xaxis = list(title ="Demand (Acre-Feet/Year)"),
yaxis = list(title = "Inflows (Acre-Feet/Year)"))
p21
#Extreme Demand Level
z=Data$ExtPercent
p31 <- plot_ly(
x = x,
y = y,
z = z, type = "contour",colors = c("red","white"))%>%
colorbar(title = "Fraction of\n Simulated Years")%>%
layout(title = "June 1st Storage Levels Reliability
Extreme Storage Level (280,000 Acre-Feet)",
xaxis = list(title ="Demand (Acre-Feet/Year)"),
yaxis = list(title = "Inflows (Acre-Feet/Year)"))
p31
s2 <- subplot(p11,p21,p31,nrows = 1)#, margin = 0.04, heights = c(0.6,0.3,0.1))
s2
Data_NoSed <- filter(Data_J1,Sedimentation==0)
Data <- Data_NoSed
###########################################################################################################
#################### Reliability  Metric for Storage ########################
###########################################################################################################
#  -- Metrics based on WBWCD - Drought Contigency Plan Drought Levels --  #
# See Table 3-2 : Hot/Dry Projected Drought for Drought Levels
# Moderate Total Basin Storage Drought Level 340K to 380K -- Yellow  ("Less than 380K")
# Severe Total Basin Storage Drought Level 280K to 340K -- Orange    ("Less than 340K")
# Extreme Total Basin Storage Drought Level less than 280K -- Red    ("Less than 280K")
ModerateLevel<- 380000
SevereLevel <- 340000
ExtremeLevel<-280000
Storage_Metrics <- data.frame(Data$Tot_Mnthly_Stor)
Storage_Rel_Metrics_Moderate <- data.frame(Data$Tot_Mnthly_Stor)
Storage_Rel_Metrics_Severe <- data.frame(Data$Tot_Mnthly_Stor)
Storage_Rel_Metrics_Extreme <- data.frame(Data$Tot_Mnthly_Stor)
#Monthly Storage Column Number (MSCN)
MSCN <-9
i=1
while (i<=1080) {
Storage_Rel_Metrics_Moderate[i,] <- ifelse(Data[i,MSCN]>ModerateLevel,1,0)
i=i+1
}
#Severe
i=1
while (i<=1080) {
Storage_Rel_Metrics_Severe[i,] <- ifelse(Data[i,MSCN]>SevereLevel,1,0)
i=i+1
}
#Extreme
i=1
while (i<=1080) {
Storage_Rel_Metrics_Extreme[i,] <- ifelse(Data[i,MSCN]>ExtremeLevel,1,0)
i=i+1
}
#input Metrics into Data Dataframe
Data$ModerateStorageR <-Storage_Rel_Metrics_Moderate$Data.Tot_Mnthly_Stor
Data$SevereStorageR <- Storage_Rel_Metrics_Severe$Data.Tot_Mnthly_Stor
Data$ExtremeStorageR<- Storage_Rel_Metrics_Extreme$Data.Tot_Mnthly_Stor
## Calculate Reliability
Stor_Rel_Moderate <- data.frame(1:36)
Stor_Rel_Severe <- data.frame(c(1:36))
Stor_Rel_Extreme <- data.frame(1:36)
#Moderate
Reliability_Data_Moderate <-Data %>%
group_by(Trace_Notation) %>%
summarise(ModPercent = mean(ModerateStorageR)*100)
#Severe
Reliability_Data_Severe <-Data %>%
group_by(Trace_Notation) %>%
summarise(SevPercent = mean(SevereStorageR)*100)
#Extreme
Reliability_Data_Extreme <-Data %>%
group_by(Trace_Notation) %>%
summarise(ExtPercent = mean(ExtremeStorageR)*100)
PlotData <- right_join(Reliability_Data_Moderate,Reliability_Data_Severe,by = 'Trace_Notation')
PlotData <- right_join(PlotData,Reliability_Data_Extreme,by = 'Trace_Notation')
PlotData <- left_join(PlotData,Data,by ='Trace_Notation')
Data <- PlotData
##################################################################################################
###PLOTS###
##################################################################################################
library(plotly)
#Axis assignment
x=Data$Demand
y=Data$`Annual Avg Inflow`
setwd("~/GitHub/WeberBasinVulnerability/WeberBasinVulnerability/3 - Post Processing/Output")
# Moderate Demand Level
z=Data$ModPercent
# Moderate Demand Level
z=Data$ModPercent
p12 <- plot_ly(
x = x,
y = y,
z = z , type = "contour",colors = c("yellow","white"))%>%
colorbar(title = "Fraction of\n Simulated Years")%>%
layout(title = "June 1st Storage Levels Reliability
Moderate Storage Level (380,000 Acre-Feet)",
xaxis = list(title ="Demand (Acre-Feet/Year)"),
yaxis = list(title = "Inflows (Acre-Feet/Year)"))
p12
#Severe Demand Level
z=Data$SevPercent
p22 <- plot_ly(
x = x,
y = y,
z = z, type = "contour",colors = c("orange","white"))%>%
colorbar(title = "Fraction of\n Simulated Years")%>%
layout(title = "June 1st Storage Levels Reliability
Severe Storage Level (340,000 Acre-Feet)",
xaxis = list(title ="Demand (Acre-Feet/Year)"),
yaxis = list(title = "Inflows (Acre-Feet/Year)"))
p22
#Extreme Demand Level
z=Data$ExtPercent
p32 <- plot_ly(
x = x,
y = y,
z = z, type = "contour",colors = c("red","white"))%>%
colorbar(title = "Fraction of\n Simulated Years")%>%
layout(title = "June 1st Storage Levels Reliability
Extreme Storage Level (280,000 Acre-Feet)",
xaxis = list(title ="Demand (Acre-Feet/Year)"),
yaxis = list(title = "Inflows (Acre-Feet/Year)"))
p32
s3 <- subplot(p12,p22,p32,nrows = 1)#, margin = 0.04, heights = c(0.6,0.3,0.1))
s3
p3x3 <- subplot(s3, s2, s1, nrows = 3)#, margin = 0.04, heights = c(0.6, 0.3, 0.1))
p3x3
