RPTS[(y:z),3] <- rep(i)
y= y+Change_per_Reservior_Size
z= z+Change_per_Reservior_Size
i=i-c
x=x+1
}
i=100
}
x=1
i=100
y=1
z=Change_per_Reservior_Size
#Row 3
while (x<= (Total_Number/Change_per_Reservior_Size)) {
while (i>=0) {
RPTS[(y:z),3] <- rep(i)
y= y+Change_per_Reservior_Size
z= z+Change_per_Reservior_Size
i=i-c
x=x+1
}
i=100
}
Percent_Change = 5
Change_per_Reservior_Size =1+(100/Percent_Change)
Total_Number= Change_per_Reservior_Size*Change_per_Reservior_Size*Change_per_Reservior_Size
RPTS <- data.frame(1:Total_Number)
x=1
i=100
c=Percent_Change
#Row 2
while (x<= Total_Number) {
while (i>=0) {
RPTS[x,2] <- i
i=i-c
x=x+1
}
i=100
}
x=1
i=100
y=1
z=Change_per_Reservior_Size
#Row 3
while (x<= (Total_Number/Change_per_Reservior_Size)) {
while (i>=0) {
RPTS[(y:z),3] <- rep(i)
y= y+Change_per_Reservior_Size
z= z+Change_per_Reservior_Size
i=i-c
x=x+1
}
i=100
}
x=1
i=100
y=1
z=Change_per_Reservior_Size*Change_per_Reservior_Size
#Row 4
while (x<= (Change_per_Reservior_Size)) {
while (i>=0) {
RPTS[(y:z),4] <- rep(i)
y= y+(Change_per_Reservior_Size*Change_per_Reservior_Size)
z= z+(Change_per_Reservior_Size*Change_per_Reservior_Size)
i=i-c
x=x+1
}
i=100
}
View(MinandMax_Reservoir_Storage)
library(dplyr)
filter_all(MinandMax_Reservoir_Storage,ReserviorSize = 0)
filter_all(MinandMax_Reservoir_Storage,ReserviorSize = "sm")
filter(MinandMax_Reservoir_Storage,'Reservior Size'=="sm")
Small_Reserviorsfilter<-(MinandMax_Reservoir_Storage,'Reservior Size'=="sm")
Small_Reserviors<-filter(MinandMax_Reservoir_Storage,'Reservior Size'=="sm")
View(Small_Reserviors)
Small_Reserviors<-filter(MinandMax_Reservoir_Storage,'Reservior Size'=="lg")
Small_Reserviors<-filter(MinandMax_Reservoir_Storage,MinandMax_Reservoir_Storage$`Reservior Size`=="lg")
Small_Reserviors<-filter(MinandMax_Reservoir_Storage,MinandMax_Reservoir_Storage$`Reservior Size`=="sm")
#Sum Small, medium and large reserviors and Total reserviors
Small_Reserviors<-filter(MinandMax_Reservoir_Storage,MinandMax_Reservoir_Storage$`Reservior Size`=="sm")
Medium_Reserviors<-filter(MinandMax_Reservoir_Storage,MinandMax_Reservoir_Storage$`Reservior Size`=="md")
#Sum Small, medium and large reserviors and Total reserviors
Small_Reserviors<-filter(MinandMax_Reservoir_Storage,MinandMax_Reservoir_Storage$`Reservior Size`=="sm")
Medium_Reserviors<-filter(MinandMax_Reservoir_Storage,MinandMax_Reservoir_Storage$`Reservior Size`=="md")
Large_Reserviors<-filter(MinandMax_Reservoir_Storage,MinandMax_Reservoir_Storage$`Reservior Size`=="lg")
sum(1,5,6)
Sum_Small_Reserviors<-sum(Small_Reserviors$`Max Volume (ac-ft)`)
Sum_Medium_Reserviors<-sum(Medium_Reserviors$`Max Volume (ac-ft)`)
Sum_Large_Reserviors<-sum(Large_Reserviors$`Max Volume (ac-ft)`)
sm<-Sum_Small_Reserviors
md<-Sum_Meduim_Reserviors
lg<-Sum_Large_Reserviors
sm<-Sum_Small_Reserviors
md<-Sum_Medium_Reserviors
lg<-Sum_Large_Reserviors
Tot<-sum(sm,md,lg)
colnames(RPTS)<-c("Number","sm","md","lg")
#Percent Iterations
Percent_Change = .05
Change_per_Reservior_Size =1+(1/Percent_Change)
Total_Number= Change_per_Reservior_Size*Change_per_Reservior_Size*Change_per_Reservior_Size
RPTS <- data.frame(1:Total_Number)
x=1
i=1
c=Percent_Change
#Row 2
while (x<= Total_Number) {
while (i>=0) {
RPTS[x,2] <- i
i=i-c
x=x+1
}
i=1
}
Change_per_Reservior_Size
#Percent Iterations
Percent_Change = .05
Change_per_Reservior_Size =(1/Percent_Change)
Total_Number= Change_per_Reservior_Size*Change_per_Reservior_Size*Change_per_Reservior_Size
RPTS <- data.frame(1:Total_Number)
x=1
i=1
c=Percent_Change
#Row 2
while (x<= Total_Number) {
while (i>=0) {
RPTS[x,2] <- i
i=i-c
x=x+1
}
i=1
}
###Percent Iterations
Percent_Change = .05
Change_per_Reservior_Size =1+(1/Percent_Change)
Total_Number= Change_per_Reservior_Size*Change_per_Reservior_Size*Change_per_Reservior_Size
RPTS <- data.frame(1:Total_Number)
x=1
i=1
c=Percent_Change
#Row 2
while (x<= Total_Number) {
while (i>=0) {
RPTS[x,2] <- i
i=i-c
x=x+1
}
i=1
}
#Row 2
while (x<= Total_Number) {
while (i>-.05) {
RPTS[x,2] <- i
i=i-c
x=x+1
}
i=1
}
RPTS <- data.frame(1:Total_Number)
x=1
i=1
c=Percent_Change
#Row 2
while (x<= Total_Number) {
while (i>-.05) {
RPTS[x,2] <- i
i=i-c
x=x+1
}
i=1
}
pt<-RPTS/100
View(pt)
#Percent Iterations
Percent_Change = 5
Change_per_Reservior_Size =1+(100/Percent_Change)
Total_Number= Change_per_Reservior_Size*Change_per_Reservior_Size*Change_per_Reservior_Size
RPTS <- data.frame(1:Total_Number)
x=1
i=100
c=Percent_Change
#Row 2
while (x<= Total_Number) {
while (i>=0) {
RPTS[x,2] <- i
i=i-c
x=x+1
}
i=100
}
x=1
i=100
y=1
z=Change_per_Reservior_Size
#Row 3
while (x<= (Total_Number/Change_per_Reservior_Size)) {
while (i>=0) {
RPTS[(y:z),3] <- rep(i)
y= y+Change_per_Reservior_Size
z= z+Change_per_Reservior_Size
i=i-c
x=x+1
}
i=100
}
x=1
i=100
y=1
z=Change_per_Reservior_Size*Change_per_Reservior_Size
#Row 4
while (x<= (Change_per_Reservior_Size)) {
while (i>=0) {
RPTS[(y:z),4] <- rep(i)
y= y+(Change_per_Reservior_Size*Change_per_Reservior_Size)
z= z+(Change_per_Reservior_Size*Change_per_Reservior_Size)
i=i-c
x=x+1
}
i=100
}
colnames(RPTS)<-c("Number","sm","md","lg")
pt<-RPTS/100
RPTS[,5] <- (sm*pt[,2])+(md*pt[,3])+(lg*pt[,4])/Tot
#Row 5
RPTS[,5] <- ((sm*pt[,2])+(md*pt[,3])+(lg*pt[,4]))/Tot
trace_0 <- RPTS[,2]
trace_1 <- RPTS[,3]
trace_2 <- RPTS[,4]
x <- RPTS[,5]
data <- data.frame(x, trace_0, trace_1, trace_2)
fig <- plot_ly(data, x = ~x, y = ~trace_0, name = 'Small', type = 'scatter', mode = 'markers')
fig <- fig %>% add_trace(y = ~trace_1, name = 'Medium', mode = 'markers')
library(plotly)
trace_0 <- RPTS[,2]
trace_1 <- RPTS[,3]
trace_2 <- RPTS[,4]
x <- RPTS[,5]
data <- data.frame(x, trace_0, trace_1, trace_2)
fig <- plot_ly(data, x = ~x, y = ~trace_0, name = 'Small', type = 'scatter', mode = 'markers')
fig <- fig %>% add_trace(y = ~trace_1, name = 'Medium', mode = 'markers')
fig <- fig %>% add_trace(y = ~trace_2, name = 'Large', mode = 'markers')
fig
trace_0 <- RPTS[,2]
trace_1 <- RPTS[,3]
trace_2 <- RPTS[,4]
x <- percent(RPTS[,5])
x <- (RPTS[,5])*100
data <- data.frame(x, trace_0, trace_1, trace_2)
fig <- plot_ly(data, x = ~x, y = ~trace_0, name = 'Small', type = 'scatter', mode = 'markers')
fig <- fig %>% add_trace(y = ~trace_1, name = 'Medium', mode = 'markers')
fig <- fig %>% add_trace(y = ~trace_2, name = 'Large', mode = 'markers')
# filter
trace_0 <- RPTS[,2]
trace_1 <- RPTS[,3]
trace_2 <- RPTS[,4]
x <- (RPTS[,5])*100
data <- data.frame(x, trace_0, trace_1, trace_2)
fig <- plot_ly(data, x = ~x, y = ~trace_0, name = 'Small', type = 'scatter', mode = 'markers')
fig <- fig %>% add_trace(y = ~trace_1, name = 'Medium', mode = 'markers')
fig <- fig %>% add_trace(y = ~trace_2, name = 'Large', mode = 'markers')
fig <- fig %>% layout(title = "Sedimentation Effect on Reservior Storage",
xaxis = list(title = "Percentage of All Reservoirs Lost"),
yaxis = list (title = "Percentage of Small, Medium and Large Reservoirs Lost"))
fig
library(plotly)
fig <- plot_ly(type = 'parcoords', line = list(color = 'blue'),
dimensions = list(
list(range = c(0,100),
constraintrange = c(0,30),
label = 'sm', values = trace_0,
list(range = c(0,100),
#tickvals = c(1.5,3,4.5),
label = 'md', values = trace_1,
list(range = c(0,100),
#tickvals = c(1,2,4,5),
label = 'lg', values = trace_2,
#ticktext = c('text 1', 'text 2', 'text 3', 'text 4')),
list(range = c(0,100),
label = 'Tot', values = X)
)
))))
fig <- plot_ly(type = 'parcoords', line = list(color = 'blue'),
dimensions = list(
list(range = c(0,100),
constraintrange = c(0,30),
label = 'sm', values = trace_0,
list(range = c(0,100),
#tickvals = c(1.5,3,4.5),
label = 'md', values = trace_1,
list(range = c(0,100),
#tickvals = c(1,2,4,5),
label = 'lg', values = trace_2,
#ticktext = c('text 1', 'text 2', 'text 3', 'text 4')),
list(range = c(0,100),
label = 'Tot', values = x)
)
))))
fig
fig <- plot_ly(type = 'parcoords', line = list(color = 'blue'),
dimensions = list(
list(range = c(0,100),
constraintrange = c(0,30),
label = 'sm', values = trace_0,
list(range = c(0,100),
tickvals = c(10,30,50),
label = 'md', values = trace_1,
list(range = c(0,100),
tickvals = c(10,30,50),
label = 'lg', values = trace_2,
list(range = c(0,100),
label = 'Tot', values = x)
)
))))
fig
fig <- plot_ly(type = 'parcoords', line = list(color = 'blue'),
dimensions = list(
list(range = c(0,100),
constraintrange = c(0,30),
label = 'sm', values = trace_0),
list(range = c(0,100),
tickvals = c(10,30,50),
label = 'md', values = trace_1),
list(range = c(0,100),
tickvals = c(10,30,50),
label = 'lg', values = trace_2),
list(range = c(0,100),
label = 'Tot', values = x)
)
)
fig
fig <- plot_ly(type = 'parcoords', line = list(color = 'blues9'),
dimensions = list(
list(range = c(0,100),
constraintrange = c(0,30),
label = 'sm', values = trace_0),
list(range = c(0,100),
tickvals = c(10,30,50),
label = 'md', values = trace_1),
list(range = c(0,100),
tickvals = c(10,30,50),
label = 'lg', values = trace_2),
list(range = c(0,100),
label = 'Tot', values = x)
)
)
fig
fig <- plot_ly(type = 'parcoords', line = list(color = 'blues9'),
dimensions = list(
list(range = c(0,100),
constraintrange = c(0,100),
label = 'sm', values = trace_0),
list(range = c(0,100),
constraintrange = c(0,50),
tickvals = c(10,30,50),
label = 'md', values = trace_1),
list(range = c(0,100),
constraintrange = c(0,10),
tickvals = c(10,30,50),
label = 'lg', values = trace_2),
list(range = c(0,100),
label = 'Tot', values = x)
)
)
fig
library(plotly)
fig <- plot_ly(type = 'parcoords', line = list(color = 'blues9'),
dimensions = list(
list(range = c(0,100),
constraintrange = c(0,100),
label = 'sm', values = trace_0),
list(range = c(0,100),
constraintrange = c(0,50),
tickvals = c(0,10,30,50),
label = 'md', values = trace_1),
list(range = c(0,100),
constraintrange = c(0,10),
tickvals = c(0,10,30),
label = 'lg', values = trace_2),
list(range = c(0,100),
label = 'Tot', values = x)
)
)
fig
fig <- plot_ly(type = 'parcoords', line = list(color = 'blues9'),
dimensions = list(
list(range = c(0,100),
constraintrange = c(0,100),
label = 'sm', values = trace_0),
list(range = c(0,100),
constraintrange = c(0,50),
tickvals = c(0,10,30,50),
label = 'md', values = trace_1),
list(range = c(0,100),
constraintrange = c(0,10),
tickvals = c(0,10,30),
label = 'lg', values = trace_2),
list(range = c(0,100),
label = 'Tot', values = x)
)
)
fig<- fig%>% layout(title = "Sedimentation Effect on Reservior Storage",
yaxis = list(title = "Percentage of All Reservoirs Lost"),
xaxis = list (title = "Percentage of Small, Medium and Large Reservoirs Lost"))
fig
fig <- plot_ly(type = 'parcoords', line = list(color = 'blues9'),
dimensions = list(
list(range = c(0,100),
constraintrange = c(0,100),
label = 'sm', values = trace_0),
list(range = c(0,100),
constraintrange = c(0,50),
label = 'md', values = trace_1),
list(range = c(0,100),
constraintrange = c(0,10),
label = 'lg', values = trace_2),
list(range = c(0,100),
label = 'Tot', values = x)
)
)
fig<- fig%>% layout(title = "Sedimentation Effect on Reservior Storage",
yaxis = list(title = "Percentage of All Reservoirs Lost"),
xaxis = list (title = "Percentage of Small, Medium and Large Reservoirs Lost"))
fig
library(plotly)
fig <- plot_ly(type = 'parcoords', line = list(color = 'blues9'),
dimensions = list(
list(range = c(0,100),
constraintrange = c(0,100),
label = 'Small Reserviors', values = trace_0),
list(range = c(0,100),
constraintrange = c(0,50),
label = 'Medium Reserviors', values = trace_1),
list(range = c(0,100),
constraintrange = c(0,10),
label = 'Large Reserviors', values = trace_2),
list(range = c(0,100),
label = 'Tot', values = x)
)
)
fig<- fig%>% layout(title = "Percent Storage Lost due to Sedimentation in Weber Basin Reserviors",
yaxis = list(title = "Percentage of All Reservoirs Lost"),
xaxis = list (title = "Percentage of Small, Medium and Large Reservoirs Lost"))
fig
library(gridExtra)
pdf("Reserviors.pdf", height=18, width=33)
grid.table(MinandMax_Reservoir_Storage)
View(MinandMax_Reservoir_Storage)
Summary(MinandMax_Reservoir_Storage)
summarise(MinandMax_Reservoir_Storage)
View(Large_Reserviors)
View(Small_Reserviors)
View(Medium_Reserviors)
fig <- plot_ly(type = 'parcoords', line = list(color = 'blues9'),
dimensions = list(
list(range = c(0,100),
constraintrange = c(0,100),
label = 'Small Reserviors (0 - 20K ac-ft)', values = trace_0),
list(range = c(0,100),
constraintrange = c(0,50),
label = 'Medium Reserviors (20K - 100K ac-ft)', values = trace_1),
list(range = c(0,100),
constraintrange = c(0,10),
label = 'Large Reserviors (100K ac-ft +) ', values = trace_2),
list(range = c(0,100),
label = 'Tot', values = x)
)
)
fig<- fig%>% layout(title = "Percent Storage Lost due to Sedimentation in Weber Basin Reserviors",
yaxis = list(title = "Percentage of All Reservoirs Lost"),
xaxis = list (title = "Percentage of Small, Medium and Large Reservoirs Lost"))
fig
fig <- plot_ly(type = 'parcoords', line = list(color = 'blues9'),
dimensions = list(
list(range = c(0,100),
constraintrange = c(0,100),
label = 'Small (0 - 20K ac-ft)', values = trace_0),
list(range = c(0,100),
constraintrange = c(0,50),
label = 'Medium Reserviors (20K - 100K ac-ft)', values = trace_1),
list(range = c(0,100),
constraintrange = c(0,10),
label = 'Large Reserviors (100K ac-ft +) ', values = trace_2),
list(range = c(0,100),
label = 'Total', values = x)
)
)
fig<- fig%>% layout(title = "Percent Storage Lost due to Sedimentation in Weber Basin Reserviors",
yaxis = list(title = "Percentage of All Reservoirs Lost"),
xaxis = list (title = "Percentage of Small, Medium and Large Reservoirs Lost"))
fig
library(plotly)
fig <- plot_ly(type = 'parcoords', line = list(color = 'blues9'),
dimensions = list(
list(range = c(0,100),
constraintrange = c(0,100),
label = 'Small (0 - 20K ac-ft)', values = trace_0),
list(range = c(0,100),
constraintrange = c(0,50),
label = 'Medium (20K - 100K ac-ft)', values = trace_1),
list(range = c(0,100),
constraintrange = c(0,10),
label = 'Large (100K ac-ft +) ', values = trace_2),
list(range = c(0,100),
label = 'Total', values = x)
)
)
fig<- fig%>% layout(title = "Percent Storage Lost due to Sedimentation in Weber Basin Reserviors",
yaxis = list(title = "Percentage of All Reservoirs Lost"),
xaxis = list (title = "Percentage of Small, Medium and Large Reservoirs Lost"))
fig
