MIAG2015_Sums
MIAG2070_Sums
#MIAG2015_Sums$AGConversionFactor <- c(rep('65%'))
#MIAG2015_Sums$ET <-  c(rep('SameET',3),rep('DecreaseET',3),rep('IncreaseET',3))
#MIAG2015_Sums$PC <-  rep(c('SamePC','DecreasePC','DrasticDecreasePC'),3)
#MIAG2015_Sums$NUMPC <-  rep(c(3000,2000,1000),3)
#2070 Sums only taking into account 65% Conversion Factor
MIAG2070_Sums <- colSums(MIandAg_Demand2070[1:9,],na.rm = F, dims = 1)
MIAG2070_Sums <- data.frame(MIAG2070_Sums)
MIAG2070_Sums
colSums(MIandAg_Demand2070[1:9,])
colSums(MIandAg_Demand2070[,1:9])
#MIAG2015_Sums$AGConversionFactor <- c(rep('65%'))
#MIAG2015_Sums$ET <-  c(rep('SameET',3),rep('DecreaseET',3),rep('IncreaseET',3))
#MIAG2015_Sums$PC <-  rep(c('SamePC','DecreasePC','DrasticDecreasePC'),3)
#MIAG2015_Sums$NUMPC <-  rep(c(3000,2000,1000),3)
#2070 Sums only taking into account 65% Conversion Factor
MIAG2070_Sums <- colSums(MIandAg_Demand2070[,1:9],na.rm = F, dims = 1)
MIAG2070_Sums <- data.frame(MIAG2070_Sums)
#MIAG2070_Sums$AGConversionFactor <- c(rep('65%',9),rep('72%',9),rep('78%',9))
#MIAG2070_Sums$ET <- rep(c(rep('SameET',3),rep('DecreaseET',3),rep('IncreaseET',3)),3)
#MIAG2070_Sums$PC <- rep(rep(c('SamePC','DecreasePC','DrasticDecreasePC'),3),3)
#MIAG2070_Sums$NUMPC <- rep(rep(c(3000,2000,1000),3),3)
#2150 Sums only taking into account 65% Conversion Factor
MIAG2150_Sums <- colSums(MIandAg_Demand2150[,1:9],na.rm = F, dims = 1)
MIAG2150_Sums <- data.frame(MIAG2150_Sums)
SummedScenarios <- data.frame(c(MIAG2015_Sums,MIAG2070_Sums,MIAG2150_Sums))
#row.names(SummedScenarios) <- c("Base","PCDec","PCDD","ETInc","PCDec_ETInc","PCDD_ETInc","ETDec","PCDec_ETDec","PCDD_ETDec")
RowNames <- c("Base","PCDec","PCDD","ETInc","PCDec_ETInc","PCDD_ETInc","ETDec","PCDec_ETDec","PCDD_ETDec")
plot_ly(data=SummedScenarios,x=RowNames, y= ~ MIAG2015_Sums ,type = 'bar',name = "2015") %>%
add_trace(x=RowNames, y= ~ MIAG2070_Sums,name = "2070") %>%
add_trace(x=RowNames,y = ~ MIAG2150_Sums, name = "2150") %>%
layout(yaxis=list(title = 'M&I + AG Demand (acre-feet)',barmode = 'group'))
setwd("~/GitHub/WeberBasinVulnerability/WeberBasinVulnerability/2 - RiverWare Modeling/Scenario")
RunNumber <- 6  # number of traces considered,  possibly write a code to count
for(Num in 1:(RunNumber)) {
TraceDirectory1 <- paste0("Trace",Num)
TraceDirectory2 <- paste0(",Trace",Num)
}
TraceDirectory1
for(Num in 1:(RunNumber)) {
TraceDirectory1 <- paste0("Trace",Num)
TraceDirectory2 <- paste(paste0(",Trace",Num),Num)
read.csv("TraceDirectory2,Reservoir Elevations.csv")
}
concatenate
library(readr)
Reservoir_Elevations <- read_csv("Trace3,Trace5,RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Reservoir Elevations.csv")
View(Reservoir_Elevations)
for(Num in 1:(RunNumber)) {
TraceDirectory <- paste(paste0("Trace",Num),Num)
TraceDirectory
}
TraceDirectory
TraceDirectory <- paste0(TraceDirectory,"Trace",Num)
for(Num in 1:(RunNumber)) {
TraceDirectory <- paste0("Trace",Num)
TraceDirectory <- paste0(TraceDirectory,"Trace",Num)
}
TraceDirectory
for(Num in 1:(RunNumber)) {
TraceDirectory0 <- paste0("Trace",Num)
for(Num in 1:(RunNumber)) {
TraceDirectory <- paste0(TraceDirectory0,",Trace",Num)
}
}
TraceDirectory
for(Num in 1:(RunNumber)) {
TraceDirectory0 <- paste0("Trace1",Num)
for(Num in 1:(RunNumber)) {
TraceDirectory <- paste0(TraceDirectory0,",Trace",Num)
}
}
TraceDirectory
for(Num in 1:(RunNumber)) {
TraceDirectory0 <- paste0("Trace",Num)
for(Num in 1:(RunNumber)) {
TraceDirectory <- paste0(TraceDirectory0,",Trace",Num)
TraceDirectory <-paste0 (TraceDirectory,",RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Reservoir Elevations.csv")
}
}
TraceDirectory
for(Num in 1:(RunNumber)) {
TraceDirectory0 <- paste0("Trace",Num)
for(Num in 1:(RunNumber)) {
TraceDirectory <- paste0(TraceDirectory0,",Trace",Num)
TraceDirectory <-paste0 (TraceDirectory,",RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Reservoir Elevations.csv")
Reservoir_Elevations <- read.csv(TraceDirectory)
}
}
Reservoir_Elevations
DWRSA_Table
DWRSA_Table[,1]
for(Num in 1:(RunNumber)) {
TraceDirectory0 <- paste0("Trace",Num)
for(Num in 1:(RunNumber)) {
TraceDirectory <- paste0(TraceDirectory0,",Trace",Num)
TraceDirectory <-paste0 (TraceDirectory,",RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Reservoir Elevations.csv")
R_E <- read.csv(TraceDirectory)
Reservoir_Elevations[,Num] <- R_E
}
}
warnings()
for(Num in 1:(RunNumber)) {
TraceDirectory0 <- paste0("Trace",Num)
for(Num in 1:(RunNumber)) {
TraceDirectory <- paste0(TraceDirectory0,",Trace",Num)
TraceDirectory <-paste0 (TraceDirectory,",RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Reservoir Elevations.csv")
R_E <- data.frame(read.csv(TraceDirectory))
Reservoir_Elevations[,Num] <- R_E
}
}
warnings()
R_E
Reservoir_Elevations
R_E <- read.csv("Trace1,Trace1,RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Reservoir Elevations.csv")
R_E
TraceNumber <- 6  # number of traces considered,  possibly write a code to count
TraceNumber1 <- 6  # number of traces considered,  possibly write a code to count
TotalTraces <- TraceNumber*TraceNumber1
for(TTNum in 1:(TotalTraces)){
for(TNum in 1:(TraceNumber)) {
TraceDirectory0 <- paste0("Trace",Num)
for(TNum1 in 1:(TraceNumber1)) {
TraceDirectory <- paste0(TraceDirectory0,",Trace",TNum1)
TraceDirectory <-paste0 (TraceDirectory,",RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Reservoir Elevations.csv")
R_E <- read.csv(TraceDirectory)
Reservoir_Elevations[,TTN] <- R_E
}
}
}
TraceNumber <- 6  # number of traces considered,  possibly write a code to count
TraceNumber1 <- 6  # number of traces considered,  possibly write a code to count
TotalTraces <- TraceNumber*TraceNumber1
for(TTNum in 1:(TotalTraces)){
for(TNum in 1:(TraceNumber)) {
TraceDirectory0 <- paste0("Trace",Num)
for(TNum1 in 1:(TraceNumber1)) {
TraceDirectory <- paste0(TraceDirectory0,",Trace",TNum1)
TraceDirectory <-paste0 (TraceDirectory,",RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Reservoir Elevations.csv")
R_E <- read.csv(TraceDirectory)
Reservoir_Elevations[,TTNum] <- R_E
}
}
}
View(Reservoir_Elevations)
warnings()
TraceDirectory
TraceDirectory1
TraceDirectory2
TraceDirectory
TraceDirectory
TraceDirectory
R_E
Reservoir_Elevations
TraceDirectory
"Trace1,Trace1,RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Reservoir Elevations.csv")
R<-read.csv("Trace1,Trace1,RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Reservoir Elevations.csv")
R
R[,5]
R_E<- read.csv(TraceDirectory)
R_E
View(R_E)
TraceNumber <- 6  # number of traces considered,  possibly write a code to count
TraceNumber1 <- 6  # number of traces considered,  possibly write a code to count
TotalTraces <- TraceNumber*TraceNumber1
for(TTNum in 1:(TotalTraces)){
for(TNum in 1:(TraceNumber)) {
TraceDirectory0 <- paste0("Trace",Num)
for(TNum1 in 1:(TraceNumber1)) {
TraceDirectory <- paste0(TraceDirectory0,",Trace",TNum1)
TraceDirectory <-paste0 (TraceDirectory,",RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Reservoir Elevations.csv")
R_E <- read.csv(TraceDirectory)
Reservoir_Elevations[,TTNum] <- R_E[,5]
}
}
}
TraceNumber <- 6  # number of traces considered,  possibly write a code to count
TraceNumber1 <- 6  # number of traces considered,  possibly write a code to count
TotalTraces <- TraceNumber*TraceNumber1
for(TTNum in 1:(TotalTraces)){
for(TNum in 1:(TraceNumber)) {
TraceDirectory0 <- paste0("Trace",Num)
for(TNum1 in 1:(TraceNumber1)) {
TraceDirectory <- paste0(TraceDirectory0,",Trace",TNum1)
TraceDirectory <-paste0 (TraceDirectory,",RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Reservoir Elevations.csv")
R_E <- read.csv(TraceDirectory)
Reservoir_Elevations[,TTNum] <- R_E[,5]
}
}
}
View(Reservoir_Elevations)
View(R_E)
R_E
R_E[,5]
Reservoir_Elevations[,5]
Reservoir_Elevations[,1] <- R_E[,5]
Reservoir_Elevations <- R_E
Reservoir_Elevations[,5]
TraceNumber <- 6  # number of traces considered,  possibly write a code to count
TraceNumber1 <- 6  # number of traces considered,  possibly write a code to count
TotalTraces <- TraceNumber*TraceNumber1
for(TTNum in 1:(TotalTraces)){
for(TNum in 1:(TraceNumber)) {
TraceDirectory0 <- paste0("Trace",Num)
for(TNum1 in 1:(TraceNumber1)) {
TraceDirectory <- paste0(TraceDirectory0,",Trace",TNum1)
TraceDirectory <-paste0 (TraceDirectory,",RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Reservoir Elevations.csv")
R_E <- read.csv(TraceDirectory)
Reservoir_Elevations[,TTNum] <- R_E[,5]
}
}
}
View(Reservoir_Elevations)
#Format for Reservoir_Elevations output file
Reservoir_Elevations <- read.csv("Trace1,Trace,RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Reservoir Elevations.csv")
TraceNumber <- 6  # number of traces considered,  possibly write a code to count
TraceNumber1 <- 6  # number of traces considered,  possibly write a code to count
TotalTraces <- TraceNumber*TraceNumber1
#Format for Reservoir_Elevations output file
Reservoir_Elevations <- read.csv("Trace1,Trace1,RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Reservoir Elevations.csv")
TraceNumber <- 6  # number of traces considered,  possibly write a code to count
TraceNumber1 <- 6  # number of traces considered,  possibly write a code to count
TotalTraces <- TraceNumber*TraceNumber1
for(TTNum in 1:(TotalTraces)){
for(TNum in 1:(TraceNumber)) {
TraceDirectory0 <- paste0("Trace",Num)
for(TNum1 in 1:(TraceNumber1)) {
TraceDirectory <- paste0(TraceDirectory0,",Trace",TNum1)
TraceDirectory <-paste0 (TraceDirectory,",RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Reservoir Elevations.csv")
R_E <- read.csv(TraceDirectory)
Reservoir_Elevations[,TTNum] <- R_E[,5]
}
}
}
View(Reservoir_Elevations)
setwd("~/GitHub/WeberBasinVulnerability/WeberBasinVulnerability/2 - RiverWare Modeling/Scenario")
#Format for Reservoir_Elevations output file
Reservoir_Elevations <- read.csv("Trace1,Trace1,RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Reservoir Elevations.csv")
TraceNumber <- 6  # number of traces considered,  possibly write a code to count
TraceNumber1 <- 6  # number of traces considered,  possibly write a code to count
TotalTraces <- TraceNumber*TraceNumber1
for(TTNum in 1:(TotalTraces)){
for(TNum in 1:(TraceNumber)) {
TraceDirectory0 <- paste0("Trace",Num)
for(TNum1 in 1:(TraceNumber1)) {
TraceDirectory <- paste0(TraceDirectory0,",Trace",TNum1)
TraceDirectory <-paste0 (TraceDirectory,",RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Reservoir Elevations.csv")
R_E <- read.csv(TraceDirectory)
Reservoir_Elevations[,TTNum] <- R_E[,5]
}
}
}
View(Reservoir_Elevations)
setwd("~/GitHub/WeberBasinVulnerability/WeberBasinVulnerability/2 - RiverWare Modeling/Scenario")
#Format for Reservoir_Elevations output file
Reservoir_Elevations <- read.csv("Trace1,Trace1,RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Reservoir Elevations.csv")
Annual_Demands <- read.csv("Trace1,Trace1,RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Annual Demands.csv")
TraceNumber <- 6  # number of traces considered,  possibly write a code to count
TraceNumber1 <- 6  # number of traces considered,  possibly write a code to count
TotalTraces <- TraceNumber*TraceNumber1
for(TTNum in 1:(TotalTraces)){
for(TNum in 1:(TraceNumber)) {
TraceDirectory0 <- paste0("Trace",Num)
for(TNum1 in 1:(TraceNumber1)) {
TraceDirectory <- paste0(TraceDirectory0,",Trace",TNum1)
TraceDirectory <-paste0 (TraceDirectory,",RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Reservoir Elevations.csv")
R_E <- read.csv(TraceDirectory)
Reservoir_Elevations[,TTNum] <- R_E[,5]
}
}
}
for(TTNum in 1:(TotalTraces)){
for(TNum in 1:(TraceNumber)) {
TraceDirectory0 <- paste0("Trace",Num)
for(TNum1 in 1:(TraceNumber1)) {
TraceDirectory <- paste0(TraceDirectory0,",Trace",TNum1)
TraceDirectory <-paste0 (TraceDirectory,",RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Annual Demands.csv")
A_D <- read.csv(TraceDirectory)
Annual_Demands[,TTNum] <- R_E[,5]
}
}
}
View(Annual_Demands)
TraceNumber <- 6  # number of traces considered,  possibly write a code to count
TraceNumber1 <- 6  # number of traces considered,  possibly write a code to count
TotalTraces <- TraceNumber*TraceNumber1
for(TTNum in 1:(TotalTraces)){
for(TNum in 1:(TraceNumber)) {
TraceDirectory0 <- paste0("Trace",Num)
for(TNum1 in 1:(TraceNumber1)) {
TraceDirectory <- paste0(TraceDirectory0,",Trace",TNum1)
TraceDirectory <-paste0 (TraceDirectory,",RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Annual Demands.csv")
A_D <- read.csv(TraceDirectory)
Annual_Demands[,TTNum] <- R_E[,5]
}
}
}
Annual_Demands <- read.csv("Trace1,Trace1,RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Annual Demands.csv")
### Clear any existing data or functions.
rm(list=ls())
Annual_Demands <- read.csv("Trace1,Trace2,RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Annual Demands.csv")
TraceNumber <- 6  # number of traces considered,  possibly write a code to count
Annual_Demands <- read.csv("Trace1,Trace2,RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Annual Demands.csv")
setwd("~/GitHub/WeberBasinVulnerability/WeberBasinVulnerability/2 - RiverWare Modeling/Scenario")
#Format for Reservoir_Elevations output file
Reservoir_Elevations <- read.csv("Trace1,Trace1,RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Reservoir Elevations.csv")
Annual_Demands <- read.csv("Trace1,Trace2,RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Annual Demands.csv")
TraceNumber <- 6  # number of traces considered,  possibly write a code to count
TraceNumber1 <- 6  # number of traces considered,  possibly write a code to count
TotalTraces <- TraceNumber*TraceNumber1
for(TTNum in 1:(TotalTraces)){
for(TNum in 1:(TraceNumber)) {
TraceDirectory0 <- paste0("Trace",Num)
for(TNum1 in 1:(TraceNumber1)) {
TraceDirectory <- paste0(TraceDirectory0,",Trace",TNum1)
TraceDirectory <-paste0 (TraceDirectory,",RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Reservoir Elevations.csv")
R_E <- read.csv(TraceDirectory)
Reservoir_Elevations[,TTNum] <- R_E[,5]
}
}
}
TraceNumber <- 6  # number of traces considered,  possibly write a code to count
TraceNumber1 <- 6  # number of traces considered,  possibly write a code to count
TotalTraces <- TraceNumber*TraceNumber1
for(TTNum in 1:(TotalTraces)){
for(TNum in 1:(TraceNumber)) {
TraceDirectory0 <- paste0("Trace",Num)
for(TNum1 in 1:(TraceNumber1)) {
TraceDirectory <- paste0(TraceDirectory0,",Trace",TNum1)
TraceDirectory <-paste0 (TraceDirectory,",RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Annual Demands.csv")
A_D <- read.csv(TraceDirectory)
Annual_Demands[,TTNum] <- R_E[,5]
}
}
}
View(Annual_Demands)
setwd("~/GitHub/WeberBasinVulnerability/WeberBasinVulnerability/2 - RiverWare Modeling/Scenario")
setwd("~/GitHub/WeberBasinVulnerability/WeberBasinVulnerability/2 - RiverWare Modeling/Scenario")
#Format for Reservoir_Elevations output file
Reservoir_Elevations <- read.csv("Trace1,Trace1,RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Reservoir Elevations.csv")
Annual_Demands <- read.csv("Trace1,Trace2,RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Annual Demands.csv")
TraceNumber <- 6  # number of traces considered,  possibly write a code to count
TraceNumber1 <- 6  # number of traces considered,  possibly write a code to count
TotalTraces <- TraceNumber*TraceNumber1
for(TTNum in 1:(TotalTraces)){
for(TNum in 1:(TraceNumber)) {
TraceDirectory0 <- paste0("Trace",TraceNumber)
for(TNum1 in 1:(TraceNumber1)) {
TraceDirectory <- paste0(TraceDirectory0,",Trace",TNum1)
TraceDirectory <-paste0 (TraceDirectory,",RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Reservoir Elevations.csv")
R_E <- read.csv(TraceDirectory)
Reservoir_Elevations[,TTNum] <- R_E[,5]
}
}
}
TraceNumber <- 6  # number of traces considered,  possibly write a code to count
TraceNumber1 <- 6  # number of traces considered,  possibly write a code to count
TotalTraces <- TraceNumber*TraceNumber1
for(TTNum in 1:(TotalTraces)){
for(TNum in 1:(TraceNumber)) {
TraceDirectory0 <- paste0("Trace",TraceNumber)
for(TNum1 in 1:(TraceNumber1)) {
TraceDirectory <- paste0(TraceDirectory0,",Trace",TNum1)
TraceDirectory <-paste0 (TraceDirectory,",RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Annual Demands.csv")
A_D <- read.csv(TraceDirectory)
Annual_Demands[,TTNum] <- R_E[,5]
}
}
}
Ann_Dem <- read.csv("Trace1,Trace2,RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Annual Demands.csv")
### Clear any existing data or functions.
rm(list=ls())
setwd("~/GitHub/WeberBasinVulnerability/WeberBasinVulnerability/2 - RiverWare Modeling/Scenario")
#Format for Reservoir_Elevations output file
Reservoir_Elevations <- read.csv("Trace1,Trace1,RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Reservoir Elevations.csv")
Ann_Dem <- read.csv("Trace1,Trace2,RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Annual Demands.csv")
Annual_Demands <- Ann_Dem[,5]
TraceNumber <- 6  # number of traces considered,  possibly write a code to count
TraceNumber1 <- 6  # number of traces considered,  possibly write a code to count
TotalTraces <- TraceNumber*TraceNumber1
for(TTNum in 1:(TotalTraces)){
for(TNum in 1:(TraceNumber)) {
TraceDirectory0 <- paste0("Trace",TraceNumber)
for(TNum1 in 1:(TraceNumber1)) {
TraceDirectory <- paste0(TraceDirectory0,",Trace",TNum1)
TraceDirectory <-paste0 (TraceDirectory,",RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Reservoir Elevations.csv")
R_E <- read.csv(TraceDirectory)
Reservoir_Elevations[,TTNum] <- R_E[,5]
}
}
}
TraceNumber <- 6  # number of traces considered,  possibly write a code to count
TraceNumber1 <- 6  # number of traces considered,  possibly write a code to count
TotalTraces <- TraceNumber*TraceNumber1
for(TTNum in 1:(TotalTraces)){
for(TNum in 1:(TraceNumber)) {
TraceDirectory0 <- paste0("Trace",TraceNumber)
for(TNum1 in 1:(TraceNumber1)) {
TraceDirectory <- paste0(TraceDirectory0,",Trace",TNum1)
TraceDirectory <-paste0 (TraceDirectory,",RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Annual Demands.csv")
A_D <- read.csv(TraceDirectory)
Annual_Demands[,TTNum] <- R_E[,5]
}
}
}
View(Annual_Demands)
R_E
View(R_E)
Annual_Demands <- read.csv("Trace1,Trace2,RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Annual Demands.csv")
Annual_Demands <- read.csv("Trace1,Trace2,RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Annual Demands.csv")
### Clear any existing data or functions.
rm(list=ls())
setwd("~/GitHub/WeberBasinVulnerability/WeberBasinVulnerability/2 - RiverWare Modeling/Scenario")
#Format for Reservoir_Elevations output file
Reservoir_Elevations <- read.csv("Trace1,Trace1,RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Reservoir Elevations.csv")
Annual_Demands <- read.csv("Trace1,Trace2,RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Annual Demands.csv")
Annual_Demands <- c(1:2872)
TraceNumber <- 6  # number of traces considered,  possibly write a code to count
TraceNumber1 <- 6  # number of traces considered,  possibly write a code to count
TotalTraces <- TraceNumber*TraceNumber1
for(TTNum in 1:(TotalTraces)){
for(TNum in 1:(TraceNumber)) {
TraceDirectory0 <- paste0("Trace",TraceNumber)
for(TNum1 in 1:(TraceNumber1)) {
TraceDirectory <- paste0(TraceDirectory0,",Trace",TNum1)
TraceDirectory <-paste0 (TraceDirectory,",RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Reservoir Elevations.csv")
R_E <- read.csv(TraceDirectory)
Reservoir_Elevations[,TTNum] <- R_E[,5]
}
}
}
TraceNumber <- 6  # number of traces considered,  possibly write a code to count
TraceNumber1 <- 6  # number of traces considered,  possibly write a code to count
TotalTraces <- TraceNumber*TraceNumber1
for(TTNum in 1:(TotalTraces)){
for(TNum in 1:(TraceNumber)) {
TraceDirectory0 <- paste0("Trace",TraceNumber)
for(TNum1 in 1:(TraceNumber1)) {
TraceDirectory <- paste0(TraceDirectory0,",Trace",TNum1)
TraceDirectory <-paste0 (TraceDirectory,",RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Annual Demands.csv")
A_D <- read.csv(TraceDirectory)
Annual_Demands[,TTNum] <- R_E[,5]
}
}
}
View(Annual_Demands)
Annual_Demands <- read.csv("Trace1,Trace1,RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Reservoir Elevations.csv")
TraceNumber <- 6  # number of traces considered,  possibly write a code to count
TraceNumber1 <- 6  # number of traces considered,  possibly write a code to count
TotalTraces <- TraceNumber*TraceNumber1
for(TTNum in 1:(TotalTraces)){
for(TNum in 1:(TraceNumber)) {
TraceDirectory0 <- paste0("Trace",TraceNumber)
for(TNum1 in 1:(TraceNumber1)) {
TraceDirectory <- paste0(TraceDirectory0,",Trace",TNum1)
TraceDirectory <-paste0 (TraceDirectory,",RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Reservoir Elevations.csv")
R_E <- read.csv(TraceDirectory)
Reservoir_Elevations[,TTNum] <- R_E[,5]
}
}
}
TraceNumber <- 6  # number of traces considered,  possibly write a code to count
TraceNumber1 <- 6  # number of traces considered,  possibly write a code to count
TotalTraces <- TraceNumber*TraceNumber1
for(TTNum in 1:(TotalTraces)){
for(TNum in 1:(TraceNumber)) {
TraceDirectory0 <- paste0("Trace",TraceNumber)
for(TNum1 in 1:(TraceNumber1)) {
TraceDirectory <- paste0(TraceDirectory0,",Trace",TNum1)
TraceDirectory <-paste0 (TraceDirectory,",RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Annual Demands.csv")
A_D <- read.csv(TraceDirectory)
Annual_Demands[,TTNum] <- R_E[,5]
}
}
}
View(Annual_Demands)
### Clear any existing data or functions.
rm(list=ls())
setwd("~/GitHub/WeberBasinVulnerability/WeberBasinVulnerability/2 - RiverWare Modeling/Scenario")
#Format for Reservoir_Elevations output file
Reservoir_Elevations <- read.csv("Trace1,Trace1,RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Reservoir Elevations.csv")
Annual_Demands <- read.csv("Trace1,Trace1,RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Reservoir Elevations.csv")
TraceNumber <- 4  # number of traces considered,  possibly write a code to count
TraceNumber1 <- 4  # number of traces considered,  possibly write a code to count
TotalTraces <- TraceNumber*TraceNumber1
for(TTNum in 1:(TotalTraces)){
for(TNum in 1:(TraceNumber)) {
TraceDirectory0 <- paste0("Trace",TraceNumber)
for(TNum1 in 1:(TraceNumber1)) {
TraceDirectory <- paste0(TraceDirectory0,",Trace",TNum1)
TraceDirectory <-paste0 (TraceDirectory,",RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Reservoir Elevations.csv")
R_E <- read.csv(TraceDirectory)
Reservoir_Elevations[,TTNum] <- R_E[,5]
}
}
}
TraceNumber <- 4  # number of traces considered,  possibly write a code to count
TraceNumber1 <- 4  # number of traces considered,  possibly write a code to count
TotalTraces <- TraceNumber*TraceNumber1
for(TTNum in 1:(TotalTraces)){
for(TNum in 1:(TraceNumber)) {
TraceDirectory0 <- paste0("Trace",TraceNumber)
for(TNum1 in 1:(TraceNumber1)) {
TraceDirectory <- paste0(TraceDirectory0,",Trace",TNum1)
TraceDirectory <-paste0 (TraceDirectory,",RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Annual Demands.csv")
A_D <- read.csv(TraceDirectory)
Annual_Demands[,TTNum] <- R_E[,5]
}
}
}
View(Annual_Demands)
