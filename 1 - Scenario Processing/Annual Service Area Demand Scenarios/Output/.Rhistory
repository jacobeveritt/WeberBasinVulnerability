i=1
DWRSA_Table$Counties <- c(Demand_County[year,1],Demand_County[year,5],Demand_County[year,5],Demand_County[year,4],Demand_County[year,4],Demand_County[year,4],Demand_County[year,5],Demand_County[year,4],Demand_County[year,4],Demand_County[year,3],Demand_County[year,3],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6])
while (i<=19) {
Demand_SA[i,3] <- DWRSA_Table[i,8]*(DWRSA_Table[i,4]/DWRSA_Table[i,7])
i=i+1
}
MIDemand_SAbyPopulation <- Demand_SA
SC = 4 # Decrease
#2015
i=2
while (i<=6) {D2015ET_Decrease[i,4]<-D2015ET_Decrease[i,4]-(D2015ET_Decrease[i,4]*ScenarioSA_PCntChanges[1,SC])
i=i+1
}
#2070
i=2
while (i<=6) {D2070ET_Decrease[i,4]<-D2070ET_Decrease[i,4]-(D2070ET_Decrease[i,4]*ScenarioSA_PCntChanges[1,SC])
i=i+1
}
#2150
i=2
while (i<=6) {D2150ET_Decrease[i,4]<-D2150ET_Decrease[i,4]-(D2150ET_Decrease[i,4]*ScenarioSA_PCntChanges[1,SC])
i=i+1
}
#Decrease the Secondary Use by 34% to make total PerCapita reduction 25%
#2015
i=2
while (i<=6) {D2015ET_Decrease[i,5]<-D2015ET_Decrease[i,5]-(D2015ET_Decrease[i,5]*ScenarioSA_PCntChanges[2,SC])
i=i+1
}
#2070
i=2
while (i<=6) {D2070ET_Decrease[i,5]<-D2070ET_Decrease[i,5]-(D2070ET_Decrease[i,5]*ScenarioSA_PCntChanges[2,SC])
i=i+1
}
#2150
i=2
while (i<=6) {D2150ET_Decrease[i,5]<-D2150ET_Decrease[i,5]-(D2150ET_Decrease[i,5]*ScenarioSA_PCntChanges[2,SC])
i=i+1
}
#Create DataFrame
i=1
Demand_County <- data.frame(Utah= c(rep(NA)),Box_Elder = c(rep(NA)),Davis = c(rep(NA)), Morgan = c(rep(NA)),Summit = c(rep(NA)), Weber= c(rep(NA)),Dates = c(2015,2070,2150))
#2015
while (i<=6) {
Demand_County[1,i] <- D2015ET_Decrease[i,3]*D2015ET_Decrease[i,4] +D2015ET_Decrease[i,3]*D2015ET_Decrease[i,5]
i=i+1}
#2070
i=1
while (i<=6) {
Demand_County[2,i] <- D2070ET_Decrease[i,3]*D2070ET_Decrease[i,4] +D2070ET_Decrease[i,3]*D2070ET_Decrease[i,5]
i=i+1}
#2150
i=1
while (i<=6) {
Demand_County[3,i] <- D2150ET_Decrease[i,3]*D2150ET_Decrease[i,4] +D2150ET_Decrease[i,3]*D2150ET_Decrease[i,5]
i=i+1}
Demand_County
Demand_County <- Demand_County*0.0000030688832459704*365
Demand_County[1:3,7]<-c(2015,2070,2150)
Demand_County
Demand_County[1:3,1] <- c(rep(35500))
Demand_County
#Input Calculated Total County Demand
DWRSA_Table$Counties <- c(Demand_County[1,1],Demand_County[1,5],Demand_County[1,5],Demand_County[1,4],Demand_County[1,4],Demand_County[1,4],Demand_County[1,5],Demand_County[1,4],Demand_County[1,4],Demand_County[1,3],Demand_County[1,3],Demand_County[1,6],Demand_County[1,6],Demand_County[1,6],Demand_County[1,6],Demand_County[1,6],Demand_County[1,6],Demand_County[1,6],Demand_County[1,6])
#Create a New Dataframe for Demand by Service Area
Demand_SA_D <- data.frame('2015' = c(1:19),'2070' = c(1:19),'2150' = c(1:19))
#2015
i=1
while (i<=19) {
Demand_SA_D[i,1] <- DWRSA_Table[i,8]*(DWRSA_Table[i,4]/DWRSA_Table[i,7])
i=i+1
}
#2070
i=1
year=2
DWRSA_Table$Counties <- c(Demand_County[year,1],Demand_County[year,5],Demand_County[year,5],Demand_County[year,4],Demand_County[year,4],Demand_County[year,4],Demand_County[year,5],Demand_County[year,4],Demand_County[year,4],Demand_County[year,3],Demand_County[year,3],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6])
while (i<=19) {
Demand_SA_D[i,2] <- DWRSA_Table[i,8]*(DWRSA_Table[i,4]/DWRSA_Table[i,7])
i=i+1
}
#2150
year=3
i=1
DWRSA_Table$Counties <- c(Demand_County[year,1],Demand_County[year,5],Demand_County[year,5],Demand_County[year,4],Demand_County[year,4],Demand_County[year,4],Demand_County[year,5],Demand_County[year,4],Demand_County[year,4],Demand_County[year,3],Demand_County[year,3],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6])
while (i<=19) {
Demand_SA_D[i,3] <- DWRSA_Table[i,8]*(DWRSA_Table[i,4]/DWRSA_Table[i,7])
i=i+1
}
D2015ET_Decrease <- D2015
D2015ET_Decrease$Secondary.Use <- D2015ET_Decrease$Secondary.Use * ChangeinUsage_ET_DecreaseFactor
D2070ET_Decrease <- D2070
D2070ET_Decrease$Secondary.Use <- D2070ET_Decrease$Secondary.Use * ChangeinUsage_ET_DecreaseFactor
D2150ET_Decrease <- D2150
D2150ET_Decrease$Secondary.Use <- D2150ET_Decrease$Secondary.Use * ChangeinUsage_ET_DecreaseFactor
SC = 6 #Drastic Decrease
#2015
i=2
while (i<=6) {D2015ET_Decrease[i,4]<-D2015ET_Decrease[i,4]-(D2015ET_Decrease[i,4]*ScenarioSA_PCntChanges[1,SC])
i=i+1
}
#2070
i=2
while (i<=6) {D2070ET_Decrease[i,4]<-D2070ET_Decrease[i,4]-(D2070ET_Decrease[i,4]*ScenarioSA_PCntChanges[1,SC])
i=i+1
}
#2150
i=2
while (i<=6) {D2150ET_Decrease[i,4]<-D2150ET_Decrease[i,4]-(D2150ET_Decrease[i,4]*ScenarioSA_PCntChanges[1,SC])
i=i+1
}
#Decrease the Secondary Use by 44%
#2015
i=2
while (i<=6) {D2015ET_Decrease[i,5]<-D2015ET_Decrease[i,5]-(D2015ET_Decrease[i,5]*ScenarioSA_PCntChanges[2,SC])
i=i+1
}
#2070
i=2
while (i<=6) {D2070ET_Decrease[i,5]<-D2070ET_Decrease[i,5]-(D2070ET_Decrease[i,5]*ScenarioSA_PCntChanges[2,SC])
i=i+1
}
#2150
i=2
while (i<=6) {D2150ET_Decrease[i,5]<-D2150ET_Decrease[i,5]-(D2150ET_Decrease[i,5]*ScenarioSA_PCntChanges[2,SC])
i=i+1
}
#Create DataFrame
i=1
Demand_County <- data.frame(Utah= c(rep(NA)),Box_Elder = c(rep(NA)),Davis = c(rep(NA)), Morgan = c(rep(NA)),Summit = c(rep(NA)), Weber= c(rep(NA)),Dates = c(2015,2070,2150))
#2015
while (i<=6) {
Demand_County[1,i] <- D2015ET_Decrease[i,3]*D2015ET_Decrease[i,4] +D2015ET_Decrease[i,3]*D2015ET_Decrease[i,5]
i=i+1}
#2070
i=1
while (i<=6) {
Demand_County[2,i] <- D2070ET_Decrease[i,3]*D2070ET_Decrease[i,4] +D2070ET_Decrease[i,3]*D2070ET_Decrease[i,5]
i=i+1}
#2150
i=1
while (i<=6) {
Demand_County[3,i] <- D2150ET_Decrease[i,3]*D2150ET_Decrease[i,4] +D2150ET_Decrease[i,3]*D2150ET_Decrease[i,5]
i=i+1}
Demand_County
Demand_County <- Demand_County*0.0000030688832459704*365
Demand_County[1:3,7]<-c(2015,2070,2150)
Demand_County
Demand_County[1:3,1] <- c(rep(35500))
Demand_County
#Input Calculated Total County Demand
DWRSA_Table$Counties <- c(Demand_County[1,1],Demand_County[1,5],Demand_County[1,5],Demand_County[1,4],Demand_County[1,4],Demand_County[1,4],Demand_County[1,5],Demand_County[1,4],Demand_County[1,4],Demand_County[1,3],Demand_County[1,3],Demand_County[1,6],Demand_County[1,6],Demand_County[1,6],Demand_County[1,6],Demand_County[1,6],Demand_County[1,6],Demand_County[1,6],Demand_County[1,6])
#Create a New Dataframe for Demand by Service Area
Demand_SA_DD <- data.frame('2015' = c(1:19),'2070' = c(1:19),'2150' = c(1:19))
#2015
i=1
while (i<=19) {
Demand_SA_DD[i,1] <- DWRSA_Table[i,8]*(DWRSA_Table[i,4]/DWRSA_Table[i,7])
i=i+1
}
#2070
i=1
year=2
DWRSA_Table$Counties <- c(Demand_County[year,1],Demand_County[year,5],Demand_County[year,5],Demand_County[year,4],Demand_County[year,4],Demand_County[year,4],Demand_County[year,5],Demand_County[year,4],Demand_County[year,4],Demand_County[year,3],Demand_County[year,3],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6])
while (i<=19) {
Demand_SA_DD[i,2] <- DWRSA_Table[i,8]*(DWRSA_Table[i,4]/DWRSA_Table[i,7])
i=i+1
}
#2150
year=3
i=1
DWRSA_Table$Counties <- c(Demand_County[year,1],Demand_County[year,5],Demand_County[year,5],Demand_County[year,4],Demand_County[year,4],Demand_County[year,4],Demand_County[year,5],Demand_County[year,4],Demand_County[year,4],Demand_County[year,3],Demand_County[year,3],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6])
DWRSA_Table
View(DWRSA_Table)
while (i<=19) {
Demand_SA_DD[i,3] <- DWRSA_Table[i,8]*(DWRSA_Table[i,4]/DWRSA_Table[i,7])
i=i+1
}
#Outputs
Demand_SA_ET_Decrease <- Demand_SA
Demand_SA_D_ET_Decrease <- Demand_SA_D
Demand_SA_DD_ET_Decrease <- Demand_SA_DD
#View Data
#Scenarios
S0<-  Demand_SA_ET_Same
S1<-  Demand_SA_D_ET_Same
S2<-  Demand_SA_DD_ET_Same
S3<-  Demand_SA_ET_Decrease
S4<-  Demand_SA_D_ET_Decrease
S5<-  Demand_SA_DD_ET_Decrease
S6<-  Demand_SA_ET_Increase
S7<-  Demand_SA_D_ET_Increase
S8<-  Demand_SA_DD_ET_Increase
Scenarios <- data.frame(S0,S1,S2,S3,S4,S5,S6,S7,S8)
#Add a row to the Scenarios dataframe for SA20 values are 0
Scenarios[20,] = c(rep(0))
View(Scenarios)
#MI_Sums
SS0<-  colSums(Demand_SA_ET_Same)
SS1<-  colSums(Demand_SA_D_ET_Same)
SS2<-  colSums(Demand_SA_DD_ET_Same)
SS3<-  colSums(Demand_SA_ET_Decrease)
SS4<-  colSums(Demand_SA_D_ET_Decrease)
SS5<-  colSums(Demand_SA_DD_ET_Decrease)
SS6<-  colSums(Demand_SA_ET_Increase)
SS7<-  colSums(Demand_SA_D_ET_Increase)
SS8<-  colSums(Demand_SA_DD_ET_Increase)
SummedScenarios <- data.frame(SS0,SS1,SS2,SS3,SS4,SS5,SS6,SS7,SS8)
SummedScenarios
LabelSA = DWRSA_Table$Description
plot_ly(data =Demand_SA,labels = LabelSA, values=Demand_SA$X2015 ,type = "pie",domain = list(x =c(0,1/3),y=c(0,1))) %>%
add_trace(data =Demand_SA ,labels = LabelSA, values=Demand_SA$X2070,type = "pie",domain =list(x=c(1/3,2/3),y=c(0,1)))%>%
add_trace(data =Demand_SA ,labels = LabelSA, values=Demand_SA$X2150,type = "pie",domain =list(x=c(2/3,1),y=c(0,1)))
Dates <- c("2015", "2070", "2150")
plot_ly(data = SummedScenarios,x = ~Dates,y= ~SS0 ,type = 'bar', name = 'SS0' ) %>%
add_trace(y = ~SummedScenarios$SS1,name = 'SS1') %>%
add_trace(y = ~SummedScenarios$SS2,name = 'SS2') %>%
add_trace(y = ~SummedScenarios$SS3,name = 'SS3') %>%
add_trace(y = ~SummedScenarios$SS4,name = 'SS4') %>%
add_trace(y = ~SummedScenarios$SS5,name = 'SS5') %>%
add_trace(y = ~SummedScenarios$SS6,name = 'SS6') %>%
add_trace(y = ~SummedScenarios$SS7,name = 'SS7') %>%
add_trace(y = ~SummedScenarios$SS8,name = 'SS8') %>%
layout(yaxis=list(title = 'M&I Demand (acre-feet)',barmode = 'group'))
setwd("~/GitHub/WeberBasinVulnerability/WeberBasinVulnerability/1 - Scenario Processing/Annual Service Area Demand Scenarios/Input_Data")
MIAg2015 <- read_excel("MIAG2015.xlsx")
MIAG_2015Summed <- colSums(MIAg2015)
xnotation <-  c("SameET 2015","SameET D2015","SameET DD2015","DecET 2015","DecET D2015","DecET DD2015","IncET 2015","IncET D2015","IncET DD2015")
xnotation <-  c("SS0","SS1","SS2","SS3","SS4","SS5","SS6","SS7","SS8")
MIAg2015Summed <- data.frame(xnotation,MIAG_2015Summed)
plot_ly(data = MIAg2015Summed,x =xnotation,y= MIAG_2015Summed ,type = 'bar', name = '2015') %>%
layout(yaxis = list(barmode = 'group'))
setwd("~/GitHub/WeberBasinVulnerability/WeberBasinVulnerability/1 - Scenario Processing/Annual Service Area Demand Scenarios/Output")
RunNumber <- 27
wb <- createWorkbook("Data")
for(Num in 0:(RunNumber-1)) {
RunsString <- paste0("Run",Num)
addWorksheet(wb, RunsString)
}
#writeData
i=1
while (i<=RunNumber) {
writeData(wb,sheet = i, Scenarios[,i])
i=i+1
}
##Save workbook
saveWorkbook(wb,"MI.xlsx",overwrite = TRUE)
###Save Scenarios###
write.xlsx(Scenarios,"Scenarios.xlsx")
# |  Part 0:
# |  PART 1:
# |  PART 2:
# |  PART 3:
# *-----------------------------------------------------------------
# | UPDATES:
# |
# |
# *------------------------------------------------------------------
### Clear any existing data or functions.
rm(list=ls())
#Set Working Directory
library(readxl)
setwd("~/GitHub/WeberBasinVulnerability/WeberBasinVulnerability/1 - Scenario Processing/Annual Service Area Demand Scenarios/Input_Data")
DWRSA_Table <- read_excel("DWRSA_Table.xlsx")
#Set Working Directory
setwd("~/GitHub/WeberBasinVulnerability/WeberBasinVulnerability/1 - Scenario Processing/Annual Service Area Demand Scenarios/Output")
##Possible package installation necessary
#install.packages("RColorBrewer")
#install.packages("plotly")
#install.packages("readxl")
#install.packages("openxlsx")
library(readxl)
library(plotly)
library(RColorBrewer)
library(openxlsx)
library("tibble", lib.loc="~/R/win-library/3.5")
##Input Data###############
MI_Same <- read_excel("MI_Same.xlsx")
MI_Same <- data.frame(MI_Same)
MI_Same[20,] <- 0
MI_2015<- read_excel("MI_2015.xlsx")
MI_2070<- read_excel("MI_2070.xlsx")
MI_2150<- read_excel("MI_2150.xlsx")
ddddMI <- read_excel("MI.xlsx")
##Calculation##############
AGtoMI_CF <- c(0.65,0.72,0.78) #Agriculture to Municipal Water Use Conversion Factor
#MI2070_SamePerCap - MI2015_SamePerCap = Changein_MI
Changein_MI_2070to2015 = MI_Same$X2070 - MI_Same$X2015
Changein_MI_2150to2015 = MI_Same$X2150 - MI_Same$X2015
#Conversion factor of  0.65
Changein_AG_2070to2015 = data.frame(Changein_MI_2070to2015/AGtoMI_CF[1])  #**put in while loop for differing conversion factors ?
Changein_AG_2150to2015 = data.frame(Changein_MI_2150to2015/AGtoMI_CF[1])
#Conversion factor of  0.72
Changein_AG_2070to2015[,2] = Changein_MI_2070to2015/AGtoMI_CF[2]  #output notation for 0.72 is a ".1" at the end of the column name i.e.MI_SA_2070.1
Changein_AG_2150to2015[,2] = Changein_MI_2150to2015/AGtoMI_CF[2]
#Conversion factor of 0.78
Changein_AG_2070to2015[,3] = Changein_MI_2070to2015/AGtoMI_CF[3]  #output notation for 0.78 is a ".2" at the end of the column name i.e.MI_SA_2070.2
Changein_AG_2150to2015[,3] = Changein_MI_2150to2015/AGtoMI_CF[3]
#BaseDemand <- data.frame(DWRSA_Table$MAX) #MAX AG WATER USE
BaseDemand <- data.frame(DWRSA_Table$AVG)    #OR AVG AG WATER USE
BaseDemand[20,] <- 0
AgBase2015 <- BaseDemand - MI_Same$X2015
#View(AgBase2015)
i=1
AG_2015 <- AgBase2015
AG_2070 <- data.frame(rep(1:20))
AG_2150 <- data.frame(rep(1:20))
while (i<=3) {
AG_2070[,i] <- data.frame(AgBase2015 - Changein_AG_2070to2015[,i])
AG_2150[,i] <- data.frame(AgBase2015 - Changein_AG_2150to2015[,i])
i=i+1
}
AG_2070[,1:3] <- replace(AG_2070[,1:3], AG_2070[,1:3] < 0, 0)
AG_2150[,1:3] <- replace(AG_2150[,1:3], AG_2150[,1:3] < 0, 0)
AG_2070<- AG_2070*1.05
AG_2150<- AG_2150*1.05
MIandAg_Demand2015 <- data.frame(AG_2015[,1] + MI_2015[,1])
i=1
j=1
while (i<=ncol(MI_2015)) {
MIandAg_Demand2015[,j] <- AG_2015[,1] + MI_2015[,i]
i=i+1
j=j+1
}
#2070
MIandAg_Demand2070 <- data.frame(AG_2070[,1] + MI_2070[,1])
i=1
j=1
k=1
while (k<=3) {
while (i<=ncol(MI_2070)) {
MIandAg_Demand2070[,j] <- AG_2070[,k] + MI_2070[,i]
i=i+1
j=j+1
}
k=k+1
i=1
}
MIandAg_Demand2150 <- data.frame(AG_2150[,1] + MI_2150[,1])
i=1
j=1
k=1
while (k<=3) {
while (i<=ncol(MI_2150)) {
MIandAg_Demand2150[,j] <- AG_2150[,k] + MI_2150[,i]
i=i+1
j=j+1
}
k=k+1
i=1
}
MIandAg_Demand <- data.frame(c(MIandAg_Demand2015,MIandAg_Demand2070,MIandAg_Demand2150))
#write.xlsx(MIandAg_Demand,"MI_with_AG.xlsx")
write.csv(MIandAg_Demand,"MI_with_AG.csv")
#Tab---- Create Workbook-----------
#Input How Many Scenarios                  #### Nine 2015 Scenarios, Twenty-Seven 2070 Scenarios, and Twenty-Seven 2150 Scenarios
#### 63 Total MI plus Ag Scenarios ########
RunNumber <- 27
#Create Workbook
wb <- createWorkbook("Data")
#Create Worksheet for each Run
for(Num in 1:(RunNumber)) {
RunsString <- paste0("Trace",Num)
addWorksheet(wb, RunsString)
}
#Input Data
SAs<- c('SA1','SA2','SA3','SA4','SA5','SA6','SA7','SA8','SA9','SA10','SA11','SA12','SA13','SA14','SA15','SA16','SA17','SA18','SA19','SA20')
i=1
while (i<=RunNumber) {
writeData(wb,sheet = i, SAs,startCol = 1,startRow = 3)
i=i+1
}
i=1
while (i<=RunNumber) {
writeData(wb,sheet = i, MIandAg_Demand[,i],startCol = 2,startRow = 3)
i=i+1
}
saveWorkbook(wb,"MI+AG.xlsx",overwrite = TRUE)
#################################################################################################################################################################################################################################################################################################################################################################################################################################################
### Sum Data for plots ###
#################################################################################################################################################################################################################################################################################################################################################################################################################################################
#MIandAg_Demand Sums
#Create Data frame
MIandAG_Sums <- t(colnames(MIandAg_Demand))
i=1
while (i<=63) {
MIandAG_Sums[,i] <- sum(MIandAg_Demand[,i])
i=i+1
}
MIandAG_Sums<- data.frame(MIandAG_Sums)
Nms<-t(colnames(MIandAg_Demand))
names(MIandAG_Sums) <- c(Nms)
round(sum(MIandAg_Demand[,2]),7)
#Transpose Data
Tnsp_MIandAG_Sums <- data.frame(t(MIandAG_Sums))
#Name Column
names(Tnsp_MIandAG_Sums)[1] <- paste("MI + AG")
Year <- data.frame(rep(2015,9),rep(2070,27),rep(2150,27))
##MIandAG_Sums Plots##################################################################
##4d plots
names <- data.frame(colnames(MIandAG_Sums))
plot_ly(data = MIandAG_Sums, x="Year 2015", y=Tnsp_MIandAG_Sums[1:9,],type='scatter',mode='markers',name = names[1:9,])%>%
add_trace(x='Year 2070', y=Tnsp_MIandAG_Sums[10:36,],name = names[10:36,])%>%
add_trace(x= 'Year 2150',y=Tnsp_MIandAG_Sums[37:63,],name = names[37:63,])%>%
layout(yaxis = list(title ='M&I + AG Demand (acre-feet)',tickformat = '.1f',showticklabels=FALSE),showlegend = FALSE)
View(MIandAG_Sums)
View(MIandAg_Demand)
round(sum(MIandAg_Demand[,2]),7)
round(sum(MIandAg_Demand),7)
round(sum(MIandAg_Demand[2,]),7)
Tnsp_MIandAG_Sums
MIandAg_Demand2015
plot_ly(data = MIandAG_Sums, x="Year 2015", y=MIandAg_Demand2015,type='scatter',mode='markers', color = 'red')%>%
add_trace(x='Year 2070', y=MIandAg_Demand2070, color = 'yellow')%>%
add_trace(x= 'Year 2150',y=MIandAg_Demand2150,color = 'green')%>%
layout(yaxis = list(title ='M&I + AG Demand (acre-feet)',tickformat = '.1f',showticklabels=FALSE),showlegend = FALSE)
plot_ly(data = MIandAG_Sums, x="Year 2015", y=MIandAg_Demand2015,type='scatter',mode='markers', color = 'red')%>%
add_trace(x='Year 2070', y=MIandAg_Demand2070, color = 'yellow')%>%
add_trace(x= 'Year 2150',y=MIandAg_Demand2150,color = 'green')%>%
layout(yaxis = list(title ='M&I + AG Demand (acre-feet)',tickformat = '.1f',showticklabels=FALSE),showlegend = FALSE)
plot_ly(data = MIandAG_Sums, x="Year 2015", y=MIandAg_Demand2015,type='scatter',mode='markers', color = 'red')
average(1+2+3)
mean(1+2+3)
mean(2+2+2+2)
average(1+2+2)
mean(1+2)
mean(1+2+3)
mean(1,2,3)
mean(1,10,2)
mean(9,2,6,8,5,1)
mean(1,100,1122,555,2)
mean(c(1,100,112,5))
#################################################################################################################################################################################################################################################################################################################################################################################################################################################
### Avg (Mean) Data for plots ###
#################################################################################################################################################################################################################################################################################################################################################################################################################################################
#MIandAg_Demand Avg
#Create Data frame
MIandAG_Avg <- t(colnames(MIandAg_Demand))
i=1
while (i<=63) {
MIandAG_Avg[,i] <- mean((MIandAg_Demand[,i]))
i=i+1
}
i=1
while (i<=63) {
MIandAG_Avg[,i] <- mean((MIandAg_Demand[,i]))
i=i+1
}
MIandAG_Avg<- data.frame(MIandAG_Avg)
Nms<-t(colnames(MIandAg_Demand))
names(MIandAG_Avg) <- c(Nms)
#Transpose Data
Tnsp_MIandAG_Avg <- data.frame(t(MIandAG_Avg))
#Name Column
names(Tnsp_MIandAG_Avg)[1] <- paste("MI + AG")
Year <- data.frame(rep(2015,9),rep(2070,27),rep(2150,27))
View(Tnsp_MIandAG_Avg)
##MIandAG_Avg Plots##################################################################
##4d plots
names <- data.frame(colnames(MIandAG_Avg))
plot_ly(data = MIandAG_Avg, x="Year 2015", y=Tnsp_MIandAG_Avg[1:9,],type='scatter',mode='markers',name = names[1:9,])%>%
add_trace(x='Year 2070', y=Tnsp_MIandAG_Avg[10:36,],name = names[10:36,])%>%
add_trace(x= 'Year 2150',y=Tnsp_MIandAG_Avg[37:63,],name = names[37:63,])%>%
layout(yaxis = list(title ='M&I + AG Demand (acre-feet)',tickformat = '.1f',showticklabels=FALSE),showlegend = FALSE)
p <- plot_ly(MIandAG_Sums, x = "Year 2015", y = Tnsp_MIandAG_Sums[1:9], text = rownames(Tnsp_MIandAG_Sums{1:9})) %>%
add_markers() %>%
add_text(textfont = t, textposition = "top right") %>%
layout(xaxis = list(range = c(1.6, 3.2)),
showlegend = FALSE)
p <- plot_ly(MIandAG_Sums, x = "Year 2015", y = Tnsp_MIandAG_Sums[1:9], text = rownames(Tnsp_MIandAG_Sums[1:9])) %>%
add_markers() %>%
add_text(textfont = t, textposition = "top right") %>%
layout(xaxis = list(range = c(1.6, 3.2)),
showlegend = FALSE)
p <- plot_ly(MIandAG_Sums, x = "Year 2015", y = Tnsp_MIandAG_Sums[1:9,], text = rownames(Tnsp_MIandAG_Sums[1:9])) %>%
add_markers() %>%
add_text(textfont = t, textposition = "top right") %>%
layout(xaxis = list(range = c(1.6, 3.2)),
showlegend = FALSE)
p <- plot_ly(MIandAG_Sums, x = "Year 2015", y = Tnsp_MIandAG_Sums[1:9,], text = rownames(Tnsp_MIandAG_Sums[1:9,])) %>%
add_markers() %>%
add_text(textfont = t, textposition = "top right") %>%
layout(xaxis = list(range = c(1.6, 3.2)),
showlegend = FALSE)
t <- list(
family = "sans serif",
size = 14,
color = toRGB("grey50"))
p <- plot_ly(MIandAG_Sums, x = "Year 2015", y = Tnsp_MIandAG_Sums[1:9,], text = rownames(Tnsp_MIandAG_Sums[1:9,])) %>%
add_markers() %>%
add_text(textfont = t, textposition = "top right") %>%
layout(xaxis = list(range = c(1.6, 3.2)),
showlegend = FALSE)
p <- plot_ly(data = MIandAG_Sums, x="Year 2015", y=Tnsp_MIandAG_Sums[1:9,],type='scatter',
mode='markers', text = rownames(Tnsp_MIandAG_Sums[1:9,])) %>%
add_markers() %>%
add_text(textfont = t, textposition = "top right") #%>%
p
Tnsp_MIandAG_Sums[1:9,]
rownames(Tnsp_MIandAG_Sums)
rownames(Tnsp_MIandAG_Sums[1:9,])
c(rep("Year 2015",10),rep("Year 2070",10),rep("Year 2150",10))
c(rep("Year 2015",9),rep("Year 2070",27),rep("Year 2150",27))
x<-c(rep("Year 2015",9),rep("Year 2070",27),rep("Year 2150",27))
p <- plot_ly(data = MIandAG_Sums, x=x, y=Tnsp_MIandAG_Sums[1:9,],type='scatter',
mode='markers', text = rownames(Tnsp_MIandAG_Sums[1:9,])) %>%
add_markers() %>%
add_text(textfont = t, textposition = "top right") #%>%
p <- plot_ly(data = MIandAG_Sums, x=x, y=Tnsp_MIandAG_Sums,type='scatter',
mode='markers', text = rownames(Tnsp_MIandAG_Sums)) %>%
add_markers() %>%
add_text(textfont = t, textposition = "top right") #%>%
p
