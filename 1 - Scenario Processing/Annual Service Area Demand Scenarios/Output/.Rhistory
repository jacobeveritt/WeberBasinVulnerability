year=2
DWRSA_Table$Counties <- c(Demand_County[year,1],Demand_County[year,5],Demand_County[year,5],Demand_County[year,4],Demand_County[year,4],Demand_County[year,4],Demand_County[year,5],Demand_County[year,4],Demand_County[year,4],Demand_County[year,3],Demand_County[year,3],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6])
while (i<=19) {
Demand_SA[i,2] <- DWRSA_Table[i,8]*(DWRSA_Table[i,4]/DWRSA_Table[i,7])
i=i+1
}
#2150
year=3
i=1
DWRSA_Table$Counties <- c(Demand_County[year,1],Demand_County[year,5],Demand_County[year,5],Demand_County[year,4],Demand_County[year,4],Demand_County[year,4],Demand_County[year,5],Demand_County[year,4],Demand_County[year,4],Demand_County[year,3],Demand_County[year,3],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6])
while (i<=19) {
Demand_SA[i,3] <- DWRSA_Table[i,8]*(DWRSA_Table[i,4]/DWRSA_Table[i,7])
i=i+1
}
MIDemand_SAbyPopulation <- Demand_SA
#View(MIDemand_SAbyPopulation)
## #With PerCapita Percent Changes (Decrease Scenario)#####################################################################################################################################################################################
#Change The Input by ScenarioSA_PcntChanges
#Decrease the Potable Use by 10%
#SC = Scenario Column (e.i. Same, Decrease, Increase, Drastic Decrease, Drastic Increase)
SC = 4 # Decrease
#2015
i=2
while (i<=6) {D2015ET_Decrease[i,4]<-D2015ET_Decrease[i,4]-(D2015ET_Decrease[i,4]*ScenarioSA_PCntChanges[1,SC])
i=i+1
}
#2070
i=2
while (i<=6) {D2070ET_Decrease[i,4]<-D2070ET_Decrease[i,4]-(D2070ET_Decrease[i,4]*ScenarioSA_PCntChanges[1,SC])
i=i+1
}
#2150
i=2
while (i<=6) {D2150ET_Decrease[i,4]<-D2150ET_Decrease[i,4]-(D2150ET_Decrease[i,4]*ScenarioSA_PCntChanges[1,SC])
i=i+1
}
#Decrease the Secondary Use by 34% to make total PerCapita reduction 25%
#2015
i=2
while (i<=6) {D2015ET_Decrease[i,5]<-D2015ET_Decrease[i,5]-(D2015ET_Decrease[i,5]*ScenarioSA_PCntChanges[2,SC])
i=i+1
}
#2070
i=2
while (i<=6) {D2070ET_Decrease[i,5]<-D2070ET_Decrease[i,5]-(D2070ET_Decrease[i,5]*ScenarioSA_PCntChanges[2,SC])
i=i+1
}
#2150
i=2
while (i<=6) {D2150ET_Decrease[i,5]<-D2150ET_Decrease[i,5]-(D2150ET_Decrease[i,5]*ScenarioSA_PCntChanges[2,SC])
i=i+1
}
##Calculate Per-Capita Demand Initial values
#Create DataFrame
i=1
Demand_County <- data.frame(Utah= c(rep(NA)),Box_Elder = c(rep(NA)),Davis = c(rep(NA)), Morgan = c(rep(NA)),Summit = c(rep(NA)), Weber= c(rep(NA)),Dates = c(2015,2070,2150))
#Calculate Demand by County For 2015, 2070 and 2150
#2015
while (i<=6) {
Demand_County[1,i] <- D2015ET_Decrease[i,3]*D2015ET_Decrease[i,4] +D2015ET_Decrease[i,3]*D2015ET_Decrease[i,5]
i=i+1}
#2070
i=1
while (i<=6) {
Demand_County[2,i] <- D2070ET_Decrease[i,3]*D2070ET_Decrease[i,4] +D2070ET_Decrease[i,3]*D2070ET_Decrease[i,5]
i=i+1}
#2150
i=1
while (i<=6) {
Demand_County[3,i] <- D2150ET_Decrease[i,3]*D2150ET_Decrease[i,4] +D2150ET_Decrease[i,3]*D2150ET_Decrease[i,5]
i=i+1}
Demand_County
#Conversion from Gallons per day to Acre-feet per year
Demand_County <- Demand_County*0.0000030688832459704*365
Demand_County[1:3,7]<-c(2015,2070,2150)
Demand_County
#Input Base Utah County Values
Demand_County[1:3,1] <- c(rep(35500))
Demand_County
#Input Calculated Total County Demand
DWRSA_Table$Counties <- c(Demand_County[1,1],Demand_County[1,5],Demand_County[1,5],Demand_County[1,4],Demand_County[1,4],Demand_County[1,4],Demand_County[1,5],Demand_County[1,4],Demand_County[1,4],Demand_County[1,3],Demand_County[1,3],Demand_County[1,6],Demand_County[1,6],Demand_County[1,6],Demand_County[1,6],Demand_County[1,6],Demand_County[1,6],Demand_County[1,6],Demand_County[1,6])
#Create a New Dataframe for Demand by Service Area
Demand_SA_D <- data.frame('2015' = c(1:19),'2070' = c(1:19),'2150' = c(1:19))
#Allocating Demand from County Demand to Service Area Proportionally From DWRSA_Table
#2015
i=1
while (i<=19) {
Demand_SA_D[i,1] <- DWRSA_Table[i,8]*(DWRSA_Table[i,4]/DWRSA_Table[i,7])
i=i+1
}
#2070
i=1
year=2
DWRSA_Table$Counties <- c(Demand_County[year,1],Demand_County[year,5],Demand_County[year,5],Demand_County[year,4],Demand_County[year,4],Demand_County[year,4],Demand_County[year,5],Demand_County[year,4],Demand_County[year,4],Demand_County[year,3],Demand_County[year,3],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6])
while (i<=19) {
Demand_SA_D[i,2] <- DWRSA_Table[i,8]*(DWRSA_Table[i,4]/DWRSA_Table[i,7])
i=i+1
}
#2150
year=3
i=1
DWRSA_Table$Counties <- c(Demand_County[year,1],Demand_County[year,5],Demand_County[year,5],Demand_County[year,4],Demand_County[year,4],Demand_County[year,4],Demand_County[year,5],Demand_County[year,4],Demand_County[year,4],Demand_County[year,3],Demand_County[year,3],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6])
while (i<=19) {
Demand_SA_D[i,3] <- DWRSA_Table[i,8]*(DWRSA_Table[i,4]/DWRSA_Table[i,7])
i=i+1
}
#Demand_SA_D
###With Per Capita Percent Changes  (Drastic Decrease (DD))###########################################################################################################################################################################################################################################################
#Change The Input by ScenarioSA_PcntChanges
#Reset Values
#1 & #2 Inputs By County and Year
D2015ET_Decrease <- D2015
D2015ET_Decrease$Secondary.Use <- D2015ET_Decrease$Secondary.Use * ChangeinUsage_ET_DecreaseFactor
D2070ET_Decrease <- D2070
D2070ET_Decrease$Secondary.Use <- D2070ET_Decrease$Secondary.Use * ChangeinUsage_ET_DecreaseFactor
D2150ET_Decrease <- D2150
D2150ET_Decrease$Secondary.Use <- D2150ET_Decrease$Secondary.Use * ChangeinUsage_ET_DecreaseFactor
#SC = Scenario Column (e.i. Same, Decrease, Increase, Drastic Decrease, Drastic Increase)
SC = 6 #Drastic Decrease
#Decrease the Potable Use by 20%
#2015
i=2
while (i<=6) {D2015ET_Decrease[i,4]<-D2015ET_Decrease[i,4]-(D2015ET_Decrease[i,4]*ScenarioSA_PCntChanges[1,SC])
i=i+1
}
#2070
i=2
while (i<=6) {D2070ET_Decrease[i,4]<-D2070ET_Decrease[i,4]-(D2070ET_Decrease[i,4]*ScenarioSA_PCntChanges[1,SC])
i=i+1
}
#2150
i=2
while (i<=6) {D2150ET_Decrease[i,4]<-D2150ET_Decrease[i,4]-(D2150ET_Decrease[i,4]*ScenarioSA_PCntChanges[1,SC])
i=i+1
}
#Decrease the Secondary Use by 44%
#2015
i=2
while (i<=6) {D2015ET_Decrease[i,5]<-D2015ET_Decrease[i,5]-(D2015ET_Decrease[i,5]*ScenarioSA_PCntChanges[2,SC])
i=i+1
}
#2070
i=2
while (i<=6) {D2070ET_Decrease[i,5]<-D2070ET_Decrease[i,5]-(D2070ET_Decrease[i,5]*ScenarioSA_PCntChanges[2,SC])
i=i+1
}
#2150
i=2
while (i<=6) {D2150ET_Decrease[i,5]<-D2150ET_Decrease[i,5]-(D2150ET_Decrease[i,5]*ScenarioSA_PCntChanges[2,SC])
i=i+1
}
##Calculate Per-Capita Demand Initial values
#Create DataFrame
i=1
Demand_County <- data.frame(Utah= c(rep(NA)),Box_Elder = c(rep(NA)),Davis = c(rep(NA)), Morgan = c(rep(NA)),Summit = c(rep(NA)), Weber= c(rep(NA)),Dates = c(2015,2070,2150))
#Calculate Demand by County For 2015, 2070 and 2150
#2015
while (i<=6) {
Demand_County[1,i] <- D2015ET_Decrease[i,3]*D2015ET_Decrease[i,4] +D2015ET_Decrease[i,3]*D2015ET_Decrease[i,5]
i=i+1}
#2070
i=1
while (i<=6) {
Demand_County[2,i] <- D2070ET_Decrease[i,3]*D2070ET_Decrease[i,4] +D2070ET_Decrease[i,3]*D2070ET_Decrease[i,5]
i=i+1}
#2150
i=1
while (i<=6) {
Demand_County[3,i] <- D2150ET_Decrease[i,3]*D2150ET_Decrease[i,4] +D2150ET_Decrease[i,3]*D2150ET_Decrease[i,5]
i=i+1}
Demand_County
#Conversion from Gallons per day to Acre-feet per year
Demand_County <- Demand_County*0.0000030688832459704*365
Demand_County[1:3,7]<-c(2015,2070,2150)
Demand_County
#Input Base Utah County Values
Demand_County[1:3,1] <- c(rep(35500))
Demand_County
#Input Calculated Total County Demand
DWRSA_Table$Counties <- c(Demand_County[1,1],Demand_County[1,5],Demand_County[1,5],Demand_County[1,4],Demand_County[1,4],Demand_County[1,4],Demand_County[1,5],Demand_County[1,4],Demand_County[1,4],Demand_County[1,3],Demand_County[1,3],Demand_County[1,6],Demand_County[1,6],Demand_County[1,6],Demand_County[1,6],Demand_County[1,6],Demand_County[1,6],Demand_County[1,6],Demand_County[1,6])
#Create a New Dataframe for Demand by Service Area
Demand_SA_DD <- data.frame('2015' = c(1:19),'2070' = c(1:19),'2150' = c(1:19))
#Allocating Demand from County Demand to Service Area Proportionally From DWRSA_Table
#2015
i=1
while (i<=19) {
Demand_SA_DD[i,1] <- DWRSA_Table[i,8]*(DWRSA_Table[i,4]/DWRSA_Table[i,7])
i=i+1
}
#2070
i=1
year=2
DWRSA_Table$Counties <- c(Demand_County[year,1],Demand_County[year,5],Demand_County[year,5],Demand_County[year,4],Demand_County[year,4],Demand_County[year,4],Demand_County[year,5],Demand_County[year,4],Demand_County[year,4],Demand_County[year,3],Demand_County[year,3],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6])
while (i<=19) {
Demand_SA_DD[i,2] <- DWRSA_Table[i,8]*(DWRSA_Table[i,4]/DWRSA_Table[i,7])
i=i+1
}
#2150
year=3
i=1
DWRSA_Table$Counties <- c(Demand_County[year,1],Demand_County[year,5],Demand_County[year,5],Demand_County[year,4],Demand_County[year,4],Demand_County[year,4],Demand_County[year,5],Demand_County[year,4],Demand_County[year,4],Demand_County[year,3],Demand_County[year,3],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6],Demand_County[year,6])
while (i<=19) {
Demand_SA_DD[i,3] <- DWRSA_Table[i,8]*(DWRSA_Table[i,4]/DWRSA_Table[i,7])
i=i+1
}
#Outputs
Demand_SA_ET_Decrease <- Demand_SA
Demand_SA_D_ET_Decrease <- Demand_SA_D
Demand_SA_DD_ET_Decrease <- Demand_SA_DD
#################################################################################################################################################################################################################################################################################################################################################################################################################################################
### Compilation of MI Data ###
#################################################################################################################################################################################################################################################################################################################################################################################################################################################
#View Data
#Scenarios
S0<-  Demand_SA_ET_Same
S1<-  Demand_SA_D_ET_Same
S2<-  Demand_SA_DD_ET_Same
S3<-  Demand_SA_ET_Decrease
S4<-  Demand_SA_D_ET_Decrease
S5<-  Demand_SA_DD_ET_Decrease
S6<-  Demand_SA_ET_Increase
S7<-  Demand_SA_D_ET_Increase
S8<-  Demand_SA_DD_ET_Increase
Scenarios <- data.frame(S0,S1,S2,S3,S4,S5,S6,S7,S8)
#Add a row to the Scenarios dataframe for SA20 values are 0
Scenarios[20,] = c(rep(0))
#MI_Sums
SS0<-  colSums(Demand_SA_ET_Same)
SS1<-  colSums(Demand_SA_D_ET_Same)
SS2<-  colSums(Demand_SA_DD_ET_Same)
SS3<-  colSums(Demand_SA_ET_Decrease)
SS4<-  colSums(Demand_SA_D_ET_Decrease)
SS5<-  colSums(Demand_SA_DD_ET_Decrease)
SS6<-  colSums(Demand_SA_ET_Increase)
SS7<-  colSums(Demand_SA_D_ET_Increase)
SS8<-  colSums(Demand_SA_DD_ET_Increase)
SummedScenarios <- data.frame(SS0,SS1,SS2,SS3,SS4,SS5,SS6,SS7,SS8)
SummedScenarios
#################################################################################################################################################################################################################################################################################################################################################################################################################################################
### Plots ###
#################################################################################################################################################################################################################################################################################################################################################################################################################################################
#Pie
LabelSA = DWRSA_Table$Description
plot_ly(data =Demand_SA,labels = LabelSA, values=Demand_SA$X2015 ,type = "pie",domain = list(x =c(0,1/3),y=c(0,1))) %>%
add_trace(data =Demand_SA ,labels = LabelSA, values=Demand_SA$X2070,type = "pie",domain =list(x=c(1/3,2/3),y=c(0,1)))%>%
add_trace(data =Demand_SA ,labels = LabelSA, values=Demand_SA$X2150,type = "pie",domain =list(x=c(2/3,1),y=c(0,1)))
## BarPlots without Agriculture
Dates <- c("2015", "2070", "2150")
plot_ly(data = SummedScenarios,x = ~Dates,y= ~SS0 ,type = 'bar', name = 'SS0' ) %>%
add_trace(y = ~SummedScenarios$SS1,name = 'SS1') %>%
add_trace(y = ~SummedScenarios$SS2,name = 'SS2') %>%
add_trace(y = ~SummedScenarios$SS3,name = 'SS3') %>%
add_trace(y = ~SummedScenarios$SS4,name = 'SS4') %>%
add_trace(y = ~SummedScenarios$SS5,name = 'SS5') %>%
add_trace(y = ~SummedScenarios$SS6,name = 'SS6') %>%
add_trace(y = ~SummedScenarios$SS7,name = 'SS7') %>%
add_trace(y = ~SummedScenarios$SS8,name = 'SS8') %>%
layout(yaxis=list(title = 'M&I Demand (acre-feet)',barmode = 'group'))
##BarPlots with Agriculture  -- Only 2015 So Far #
MIAg2015 <- read_excel("MIAG2015.xlsx")
MIAG_2015Summed <- colSums(MIAg2015)
xnotation <-  c("SameET 2015","SameET D2015","SameET DD2015","DecET 2015","DecET D2015","DecET DD2015","IncET 2015","IncET D2015","IncET DD2015")
xnotation <-  c("SS0","SS1","SS2","SS3","SS4","SS5","SS6","SS7","SS8")
MIAg2015Summed <- data.frame(xnotation,MIAG_2015Summed)
plot_ly(data = MIAg2015Summed,x =xnotation,y= MIAG_2015Summed ,type = 'bar', name = '2015') %>%
layout(yaxis = list(barmode = 'group'))
###############################################################################################################################################
## Output Municipal Demand
###############################################################################################################################################
# Reset Working Directory to Output File
setwd("~/GitHub/WeberBasinVulnerability/WeberBasinVulnerablity/Scenario Processing/Annual Service Area Demand Scenarios/Output")
#Input How Many Scenarios
RunNumber <- 27
#Create Workbook
wb <- createWorkbook("Data")
#Create Worksheet for each Run
for(Num in 0:(RunNumber-1)) {
RunsString <- paste0("Run",Num)
addWorksheet(wb, RunsString)
}
#Input Data
i=1
while (i<=RunNumber) {
writeData(wb,sheet = i, Scenarios[,i])
i=i+1
}
##Save workbook
saveWorkbook(wb,"MI.xlsx",overwrite = TRUE)
###Save Scenarios###
write.xlsx(Scenarios,"Scenarios.xlsx")
# *------------------------------------------------------------------
# | PROGRAM NAME: Approximated Agricultural Demand
# | FILE NAME: Demand_CalcbyServicaArea--Agricultural
# | DATE: 06/05/19
# | CREATED BY:  Jacob Everitt
# *----------------------------------------------------------------
# | PURPOSE:  Develop Approximate Demand Range of usage Agriculture for the Weber
# |Conservancy District.
# |
# |
# *------------------------------------------------------------------
# | STEPS:
# |  0:
# |  1:
# |  2:
# |  3:
# |  4:
# |  5:
# |  6:
# |  7:
# |  8:
# |  9:
# |  10:
# |
# |*------------------------------------------------------------------.
# | DATA USED:
# |
# |https://water.utah.gov/2015WaterData.pdf, December 21, 2018.
# |
# |https://water.utah.gov/OtherReports/MUNICIPAL%20AND%20INDUSTRIAL%20WATER%20USE%20in%20UTAH.pdf, December 21, 2018.
# |
# |https://conservewater.utah.gov/pdf/SamplePlans/WBWCD2013.pdf, December 21, 2018.
# |
# |https://weberbasin.com/, December 21, 2018
# |*------------------------------------------------------------------
# | CONTENTS:
# |  Part 0:
# |  PART 1:
# |  PART 2:
# |  PART 3:
# *-----------------------------------------------------------------
# | UPDATES:
# |
# |
# *------------------------------------------------------------------
#Set Working Directory
library(readxl)
setwd("~/GitHub/WeberBasinVulnerability/WeberBasinVulnerablity/Scenario Processing/Annual Service Area Demand Scenarios/Input_Data")
DWRSA_Table <- read_excel("DWRSA_Table.xlsx")
#Set Working Directory
setwd("~/GitHub/WeberBasinVulnerability/WeberBasinVulnerablity/Scenario Processing/Annual Service Area Demand Scenarios/Output")
### Clear any existing data or functions.
#rm(list=ls())
#or not if run directly after Demand_Calc_byServiceArea--Municipal
##Possible package installation necessary
#install.packages("RColorBrewer")
#install.packages("plotly")
#install.packages("readxl")
#install.packages("openxlsx")
library(readxl)
library(plotly)
library(RColorBrewer)
library(openxlsx)
library("tibble", lib.loc="~/R/win-library/3.5")
##Input Data###############
MI_Same <- read_excel("MI_Same.xlsx")
MI_Same <- data.frame(MI_Same)
MI_Same[20,] <- 0
Scenarios <- read_excel("Scenarios.xlsx")
##Calculation##############
AGtoMI_CF <- c(0.65,0.72,0.78) #Agriculture to Municipal Water Use Conversion Factor
#-Change in Agriculture----------------------
#MI2070_SamePerCap - MI2015_SamePerCap = Changein_MI
Changein_MI_2070to2015 = MI_Same$X2070 - MI_Same$X2015
Changein_MI_2150to2015 = MI_Same$X2150 - MI_Same$X2015
##Changein_MI = Changein_AG "0.65AF = 1AF"
##Changein_AG = (Changein_MI/0.65)
#Conversion factor of  0.65
Changein_AG_2070to2015 = data.frame(Changein_MI_2070to2015/AGtoMI_CF[1])  #**put in while loop for differing conversion factors ?
Changein_AG_2150to2015 = data.frame(Changein_MI_2150to2015/AGtoMI_CF[1])
#Conversion factor of  0.72
Changein_AG_2070to2015[,2] = Changein_MI_2070to2015/AGtoMI_CF[2]
Changein_AG_2150to2015[,2] = Changein_MI_2150to2015/AGtoMI_CF[2]
#Conversion factor of 0.78
Changein_AG_2070to2015[,3] = Changein_MI_2070to2015/AGtoMI_CF[3]
Changein_AG_2150to2015[,3] = Changein_MI_2150to2015/AGtoMI_CF[3]
#Agricultural Base Usage--------
#BaseDemand <- data.frame(DWRSA_Table$MAX) #MAX AG WATER USE
BaseDemand <- data.frame(DWRSA_Table$AVG)    #OR AVG AG WATER USE
BaseDemand[20,] <- 0
AgBase2015 <- BaseDemand - MI_Same$X2015
#View(AgBase2015)
i=1
AG_2015 <- AgBase2015
AG_2070 <- data.frame(rep(1:20))
AG_2150 <- data.frame(rep(1:20))
while (i<=3) {
AG_2070[,i] <- data.frame(AgBase2015 - Changein_AG_2070to2015[,i])
AG_2150[,i] <- data.frame(AgBase2015 - Changein_AG_2150to2015[,i])
i=i+1
}
#ADD AG to MI ###############################
#MI + Base Ag
MIandAg_Demand <- data.frame(Scenarios)
#2015 BaseDemand
i=1
while (i<=ncol(Scenarios)) {
MIandAg_Demand[,i] <- AG_2015[,1] + Scenarios[,i]
i=i+3
}
MIandAg_Demand2015 <- data.frame(AG_2015[,1] + Scenarios[,1])
i=1
j=1
k=1
while (k<=3) {
while (i<=ncol(Scenarios)) {
MIandAg_Demand2015[,j] <- AG_2015[,1] + Scenarios[,i]
i=i+3
j=j+1
}
k=k+1
i=1
j=1
}
#View(MIandAg_Demand2015)
#2070
i=2
while (i<=ncol(Scenarios)) {
MIandAg_Demand[,i] <- AG_2070[,1] + Scenarios[,i]
i=i+3
}
MIandAg_Demand2070 <- data.frame(AG_2070[,1] + Scenarios[,2])
i=2
j=1
k=1
while (k<=3) {
while (i<=ncol(Scenarios)) {
MIandAg_Demand2070[,j] <- AG_2070[,k] + Scenarios[,i]
i=i+3
j=j+1
}
k=k+1
i=2
}
#View(MIandAg_Demand2070)
#2150
i=3
while (i<=ncol(Scenarios)) {
MIandAg_Demand[,i] <- AG_2150[,1] + Scenarios[,i]
i=i+3
}
MIandAg_Demand2150 <- data.frame(AG_2150[,1] + Scenarios[,3])
i=3
j=1
k=1
while (k<=3) {
while (i<=ncol(Scenarios)) {
MIandAg_Demand2150[,j] <- AG_2150[,k] + Scenarios[,i]
i=i+3
j=j+1
}
k=k+1
i=3
}
#View(MIandAg_Demand2150)
##Output Data############################################
write.xlsx(MIandAg_Demand,"Scenarios_with_AG.xlsx")
#write.csv(MIandAg_Demand,"Scenarios_with_AG.csv")
#Tab----Workbook-----------
#Input How Many Scenarios                  #### Nine 2015 Scenarios, Twenty-Seven 2070 Scenarios, and Twenty-Seven 2150 Scenarios
#MI+Ag_Sums
MIAGSums <- colSums(MIandAg_Demand,na.rm=F,dims = 1)
MIAGSums
MIAGSums <-data.frame(MIAGSums)
a=1
b=3
for(Num in 0:8) {
a=1+(Num*3)
b=(Num+1)*3
assign(paste0("SS",Num), MIAGSums[a:b,])
}
SummedScenarios <- data.frame(SS0,SS1,SS2,SS3,SS4,SS5,SS6,SS7,SS8)
#2015 Sums
MIAG2015_Sums <- colSums(MIandAg_Demand2015,na.rm = F, dims = 1)
MIAG2015_Sums <- data.frame(MIAG2015_Sums)
MIAG2015_Sums$AGConversionFactor <- c(rep('65%'))
MIAG2015_Sums$ET <-  c(rep('SameET',3),rep('DecreaseET',3),rep('IncreaseET',3))
MIAG2015_Sums$PC <-  rep(c('SamePC','DecreasePC','DrasticDecreasePC'),3)
MIAG2015_Sums$NUMPC <-  rep(c(3000,2000,1000),3)
#2070 Sums
MIAG2070_Sums <- colSums(MIandAg_Demand2070,na.rm = F, dims = 1)
MIAG2070_Sums <- data.frame(MIAG2070_Sums)
MIAG2070_Sums$AGConversionFactor <- c(rep('65%',9),rep('72%',9),rep('78%',9))
MIAG2070_Sums$ET <- rep(c(rep('SameET',3),rep('DecreaseET',3),rep('IncreaseET',3)),3)
MIAG2070_Sums$PC <- rep(rep(c('SamePC','DecreasePC','DrasticDecreasePC'),3),3)
MIAG2070_Sums$NUMPC <- rep(rep(c(3000,2000,1000),3),3)
#2150 Sums
MIAG2150_Sums <- colSums(MIandAg_Demand2150,na.rm = F, dims = 1)
MIAG2150_Sums <- data.frame(MIAG2150_Sums)
MIAG2150_Sums$AGConversionFactor <- c(rep('65%',9),rep('72%',9),rep('78%',9))
MIAG2150_Sums$ET <- rep(c(rep('SameET',3),rep('DecreaseET',3),rep('IncreaseET',3)),3)
MIAG2150_Sums$PC <- rep(rep(c('SamePC','DecreasePC','DrasticDecreasePC'),3),3)
MIAG2150_Sums$NUMPC <- rep(rep(c(3000,2000,1000),3),3)
MIAGSums
plot_ly(data = SummedScenarios,x = ~Dates,y= ~SS0 ,type = 'scatter', name = '(PerCapita:Same)(ET:Same)' ) %>%
add_trace(y = ~SummedScenarios$SS1,name = '(PerCapita:Decrease)(ET:Same)') %>%
add_trace(y = ~SummedScenarios$SS2,name = '(PerCapita:DrasticDecrease)(ET:Same)') %>%
add_trace(y = ~SummedScenarios$SS3,name = '(PerCapita:Same)(ET:Decrease)') %>%
add_trace(y = ~SummedScenarios$SS4,name = '(PerCapita:Decrease)(ET:Decrease)') %>%
add_trace(y = ~SummedScenarios$SS5,name = '(PerCapita:DrasticDecrease)(ET:Decrease)') %>%
add_trace(y = ~SummedScenarios$SS6,name = '(PerCapita:Same)(ET:Increase)') %>%
add_trace(y = ~SummedScenarios$SS7,name = '(PerCapita:Decrease)(ET:Increase)') %>%
add_trace(y = ~SummedScenarios$SS8,name = '(PerCapita:DrasticDecrease)(ET:Increase)') %>%
layout( title = 'Municipal and Agricultural Demands',yaxis=list(title = 'M&I + AG Demand (acre-feet)',barmode = 'group'))
#4 dimensions #########################################################################
# Fix/double check the quantities of and remove legend
#Fix
#double check everything
plot_ly(data = MIAG2015_Sums,x = 'Year 2015',y= MIAG2015_Sums$MIAG2015_Sums ,type = 'scatter', mode = 'markers',symbol = MIAG2015_Sums$ET,symbols = c('circle','x','o'), color = MIAG2015_Sums$AGConversionFactor,colors = c("dark red","blue","purple"),name = '65 %',size = MIAG2015_Sums$NUMPC)%>%
add_trace(x = 'Year 2070',y= MIAG2070_Sums$MIAG2070_Sums ,type = 'scatter', mode = 'markers',symbol = MIAG2070_Sums$ET,symbols = c('circle','x','o'), color = MIAG2070_Sums$AGConversionFactor,colors = c("dark red","blue","purple"),name = '72 %',size = MIAG2070_Sums$NUMPC)%>%
add_trace(x = 'Year 2150',y= MIAG2150_Sums$MIAG2150_Sums ,type = 'scatter', mode = 'markers',symbol = MIAG2150_Sums$ET,symbols = c('circle','x','o'), color = MIAG2150_Sums$AGConversionFactor,colors = c("dark red","blue","purple"),name = '78 %',size = MIAG2150_Sums$NUMPC)%>%
layout( title = 'Municipal and Agricultural Demands',yaxis=list(title = 'M&I + AG Demand (acre-feet)',barmode = 'group'))
