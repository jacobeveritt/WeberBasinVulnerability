#Output Data Compilation

### Clear any existing data or functions.
rm(list=ls())
## Linear Average looking forward

###Total Storage Compilation#--------------------------------------------------------------------------------#

setwd("~/GitHub/WeberBasinVulnerability/WeberBasinVulnerability/2 - RiverWare Modeling/Scenario")
library(readr)

Total_Storage_NO_EVAP <- read_csv("Trace5,Trace3,RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Total Storage_NO EVAP.csv")
#View(Total_Storage_NO_EVAP)

#Plots
####-----------------------------Line Plots--------------------------------------------------
#library(plotly)
#x<-c(1:359)
#y<- Total_Storage_NO_EVAP[,5]
#data <- data.frame(x,y)
#p<- plot_ly(data,x=~x,y=~Slot.Value,type = 'scatter', mode = 'lines') %>%
 # layout(yaxis = list(title = 'Total Storage'))
#p

#Create a loop
  #input data
TraceNumber <- 6
TraceNumber1 <-6
Tot_TraceNum <- TraceNumber*TraceNumber1

Tot_Stor <- read.csv("Trace1,Trace1,RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Total Storage_NO EVAP.csv")
Tot_Inflow <-read.csv("Trace1,Trace1,RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Total Inflows.csv")

  #Create TraceFolder Naming lookup for Values with No Evap.

### Total Storage
 i=1
  for(TTNum in 1:TraceNumber){
    for(TNum in 1:TraceNumber1){

    TraceDirectory <- paste0(",Trace",TTNum)
    TraceDirectory <-paste0 (TraceDirectory,",RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Total Storage_NO EVAP.csv")
    TraceNum1<- paste0("Trace",TNum)
    TraceDirectory <- paste0(TraceNum1,TraceDirectory)
    Location <- TraceDirectory

    Temp_Storage <- read_csv(Location)

    Tot_Stor[,i] <- Temp_Storage[,5]
    i=i+1
  }
  }
  Tot_Stor <- data.frame(Tot_Stor)


  ### Total Inflows
  i=1
  for(TTNum in 1:TraceNumber){
    for(TNum in 1:TraceNumber1){

      TraceDirectory <- paste0(",Trace",TTNum)
      TraceDirectory <-paste0 (TraceDirectory,",RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Total Inflows.csv")
      TraceNum1<- paste0("Trace",TNum)
      TraceDirectory <- paste0(TraceNum1,TraceDirectory)
      Location <- TraceDirectory

      Temp_Storage <- read_csv(Location)

      Tot_Inflow[,i] <- Temp_Storage[,5]
      i=i+1
    }
  }
  Tot_Inflow <- data.frame(Tot_Inflow)


  ####----------Rename Columns--------------------####

#rename columns

### Total Storage ###
  i=1
  TTNum <- 1
  TNum <- 1
while (i<=Tot_TraceNum) {

  TraceNum1 <- paste0("Trace",TNum)
  TraceNum2<- paste0(",Trace",TTNum)
  TraceDirectory <- paste0(TraceNum1,TraceNum2)

  colnames(Tot_Stor)[i] <-  TraceDirectory

  #Tot_Stor[,i] <- setNames(Tot_Stor[,i], TraceDirectory)

i=i+1
if(TTNum > (TraceNumber-1)){
  TNum = TNum +1
} else {
  TNum = TNum
}

if(TTNum > (TraceNumber1-1)){
  TTNum = 1
} else {
  TTNum = TTNum + 1
}
}

#add Date column
  Tot_Stor$Date <- seq.Date(as.Date("0000/11/30"),by ="month",length=359)
  #View(Tot_Stor)


 ### Total Inflows ###
  i=1
  TTNum <- 1
  TNum <- 1
  Tot_TraceNum =36
  while (i<=Tot_TraceNum) {

    TraceNum1 <- paste0("Trace",TNum)
    TraceNum2<- paste0(",Trace",TTNum)
    TraceDirectory <- paste0(TraceNum1,TraceNum2)

    colnames(Tot_Inflow)[i] <-  TraceDirectory

      i=i+1
    if(TTNum > (TraceNumber-1)){
      TNum = TNum +1
    } else {
      TNum = TNum
    }

    if(TTNum > (TraceNumber1-1)){
      TTNum = 1
    } else {
      TTNum = TTNum + 1
    }
  }

  #add Date column
  Tot_Inflow$Date <- seq.Date(as.Date("0000/11/30"),by ="month",length=359)

  #View(Tot_Inflow)

#############################################################################################
#Annual Totals
#############################################################################################

  ## Annual Storage ### By Water Year November to October
  Tot_Stor_Annual <-1:30
  Tot_Stor_Annual <- data.frame(Tot_Stor_Annual)

  k=1
  while (k<=36) {
    i=1
    j=12
    while (i<=30) {
      Tot_Stor_Annual[i,k] <- sum(na.omit(Tot_Stor[(j-11):j,k]))
      i=i+1
      j=j+12
    }
    k=k+1
  }

  #View(Tot_Stor_Annual)

  #rename columns
  i=1
  TTNum <- 1
  TNum <- 1
  while (i<=Tot_TraceNum) {

    TraceNum1 <- paste0("Trace",TNum)
    TraceNum2<- paste0(",Trace",TTNum)
    TraceDirectory <- paste0(TraceNum1,TraceNum2)

    colnames(Tot_Stor_Annual)[i] <-  TraceDirectory

    i=i+1
    if(TTNum > (TraceNumber-1)){
      TNum = TNum +1
    } else {
      TNum = TNum
    }

    if(TTNum > (TraceNumber1-1)){
      TTNum = 1
    } else {
      TTNum = TTNum + 1
    }
  }

####-----------------------------------ANNUAL INFLOWS -----------------------------------------------

  ## Average Annual Storage ### By Water Year November to October
  Tot_Inflow_Annual <-1:30
  Tot_Inflow_Annual <- data.frame(Tot_Inflow_Annual)

  k=1
  while (k<=36) {
    i=1
    j=12
    while (i<=30) {
      Tot_Inflow_Annual[i,k] <- sum(na.omit(Tot_Inflow[(j-11):j,k]))
      i=i+1
      j=j+12
    }
    k=k+1
  }

  #View(Tot_Inflow_Annual)

  #rename columns
  i=1
  TTNum <- 1
  TNum <- 1
  Tot_TraceNum =36
  while (i<=Tot_TraceNum) {

    TraceNum1 <- paste0("Trace",TNum)
    TraceNum2<- paste0(",Trace",TTNum)
    TraceDirectory <- paste0(TraceNum1,TraceNum2)

    colnames(Tot_Inflow_Annual)[i] <-  TraceDirectory

    i=i+1
    if(TTNum > (TraceNumber-1)){
      TNum = TNum +1
    } else {
      TNum = TNum
    }

    if(TTNum > (TraceNumber1-1)){
      TTNum = 1
    } else {
      TTNum = TTNum + 1
    }
  }

  #########-----------------------Annual Demands----------------------------------------------------------

  setwd("~/GitHub/WeberBasinVulnerability/WeberBasinVulnerability/3 - Post Processing")

  library(readr)
  SumMIandAG <- read_csv("SumMIandAG.csv")
  #View(SumMIandAG)

  SumMIandAG <- data.frame(SumMIandAG$SummedMIandAG)

  Tot_Demand_Annual_Step1 <- c(rep(SumMIandAG$SumMIandAG.SummedMIandAG,6))
  Tot_Demand_Annual_Step1 <- data.frame(Tot_Demand_Annual_Step1)

  View(Tot_Demand_Annual_Step2)


i=1
j=1
while (j<=36) {
  i=1
while (i<=30){
    Tot_Demand_Annual[i,j] <- Tot_Demand_Annual_Step1[j,1]
i=i+1
}
j=j+1
}
View(Tot_Demand_Annual)

#rename columns
i=1
TTNum <- 1
TNum <- 1
Tot_TraceNum =36
while (i<=Tot_TraceNum) {
  TraceNum1 <- paste0("Trace",TNum)
  TraceNum2<- paste0(",Trace",TTNum)
  TraceDirectory <- paste0(TraceNum1,TraceNum2)

  colnames(Tot_Demand_Annual)[i] <-  TraceDirectory

  i=i+1
  if(TTNum > (TraceNumber-1)){
    TNum = TNum +1
  } else {
    TNum = TNum
  }

  if(TTNum > (TraceNumber1-1)){
    TTNum = 1
  } else {
    TTNum = TTNum + 1
  }
}
View(Tot_Demand_Annual)

#Compile all data into one data.frame

    #Total_Annual_Data <- merge(Tot_Stor_Annual,Tot_Inflow_Annual)
  #Total_Annual_Data <- merge(Tot_Inflow_Annual,Tot_Demand_Annual)

  #View(Total_Annual_Data)


##################################################################################################
##PLOTS
##################################################################################################
library(plotly)
##??
p<- plot_ly(Tot_Stor_Annual, x = Tot_Stor_Annual$`Trace1,Trace1`, name = 'T', type = 'scatter', mode = 'markers') %>%
  layout(title = " TITLE",
         xaxis = list(title ="Demand"),
         yaxis = list(title = "Inflow"))
??
for(trace in colnames(Tot_Inflow_Annual)){
  p <- p %>% plotly::add_trace(y = as.formula(paste0("~`",trace,"`")),name = trace)
}
p
??

p <- plot_ly(Tot_Demand_Annual,x =Tot_Demand_Annual$`Trace1,Trace1`,y = Tot_Inflow_Annual$`Trace1,Trace1`,
        type = 'scatter',mode = 'markers',color = Tot_Stor_Annual$`Trace1,Trace1`)

p <- p %>% plot_ly::add_trace(x =Tot_Demand_Annual$`Trace2,Trace2`,y = Tot_Inflow_Annual$`Trace2,Trace2`,
             type = 'scatter',mode = 'markers',color = Tot_Stor_Annual$`Trace2,Trace2`)

plot_ly(Tot_Demand_Annual,x=Tot_Demand_Annual_Step2,y=Tot_Inflow_Annual$`Trace1,Trace1`)

p <- plot_ly(Tot_Demand_Annual,x =1,y=Tot_Inflow_Annual$`Trace1,Trace1`)%>%
add_trace(x=2, y=Tot_Inflow_Annual$`Trace1,Trace1`)%>%
  add_trace(x=3, y=Tot_Inflow_Annual$`Trace1,Trace2`)%>%
  add_trace(x=4, y=Tot_Inflow_Annual$`Trace1,Trace3`)%>%
  add_trace(x=5, y=Tot_Inflow_Annual$`Trace2,Trace4`)%>%
  add_trace(x=6, y=Tot_Inflow_Annual$`Trace4,Trace5`)%>%
  add_trace(x=7, y=Tot_Inflow_Annual$`Trace5,Trace6`)%>%
  add_trace(x=8, y=Tot_Inflow_Annual$`Trace6,Trace1`)%>%
  add_trace(x=9, y=Tot_Inflow_Annual$`Trace3,Trace2`)
p



p <- plot_ly(Tot_Demand_Annual,x =Tot_Demand_Annual_Step2,y=Tot_Inflow_Annual$`Trace1,Trace1`)

for(trace in colnames(Tot_Demand_Annual)){
  p <- p %>% plotly::add_trace(y = as.formula(paste0("~`",trace,"`")),name = trace)
}
p




#######plot storage data##---------------------------------------------------------------------------------

#Line plots
  #Loop                   #Get rid of Alpha line??
  #different Colors
  library(plotly)

  p<- plot_ly(Tot_Stor, x = Tot_Stor$Date, name = 'Base', type = 'scatter', mode = 'lines',
              line = list(color = colors(distinct = F), width = 2)) %>%
    layout(title = "Monthly Storage",
      xaxis = list(title ="Time"),
      yaxis = list(title = "Storage (Acre-Feet)"))

  for(trace in colnames(Tot_Stor)){
    p <- p %>% plotly::add_trace(y = as.formula(paste0("~`",trace,"`")),name = trace)
  }
  p


## Average Annual Storage ### By Water Year November to October
  Tot_Stor_Avg_Annual <-1:30
  Tot_Stor_Avg_Annual <- data.frame(Tot_Stor_Avg_Annual)

  k=1
  while (k<=36) {
    i=1
    j=12
    while (i<=30) {
      Tot_Stor_Avg_Annual[i,k] <- mean(na.omit(Tot_Stor[(j-11):j,k]))
      i=i+1
      j=j+12
    }
    k=k+1
  }

View(Tot_Stor_Avg_Annual)

#rename columns
i=1
TTNum <- 1
TNum <- 1
while (i<=Tot_TraceNum) {

  TraceNum1 <- paste0("Trace",TNum)
  TraceNum2<- paste0(",Trace",TTNum)
  TraceDirectory <- paste0(TraceNum1,TraceNum2)

  colnames(Tot_Stor_Avg_Annual)[i] <-  TraceDirectory

  i=i+1
  if(TTNum > (TraceNumber-1)){
    TNum = TNum +1
  } else {
    TNum = TNum
  }

  if(TTNum > (TraceNumber1-1)){
    TTNum = 1
  } else {
    TTNum = TTNum + 1
  }
}

#add Date column
Tot_Stor_Avg_Annual$Year <- seq.Date(as.Date("0000/11/30"),by ="year",length=30)

#Multiline plot Average Annual Storage

#Line plot
#Loop                   #Get rid of Base line??
#different Colors
library(plotly)

p<- plot_ly(Tot_Stor_Avg_Annual, x = Tot_Stor_Avg_Annual$Year, name = 'Base', type = 'scatter', mode = 'lines',
            line = list(color = colors(distinct = F), width = 2)) %>%
  layout(title = "Average Annual Storage",
    xaxis = list(title ="Time"),
    yaxis = list(title = "Storage (Acre-Feet)"))

for(trace in colnames(Tot_Stor_Avg_Annual)){
  p <- p %>% plotly::add_trace(y = as.formula(paste0("~`",trace,"`")),name = trace)
}
p

    #Parallel plots
  df <- Tot_Stor

  Pp <-df %>%
    plot_ly(type = 'parcoords', x=
            dimensions = list(
              list(range =c(1000,5000)),
              label = 'Storage', values = Storage_Combined
            )
    )

# Output Data
  setwd("~/GitHub/WeberBasinVulnerability/WeberBasinVulnerability/3 - Post Processing")
  write.xlsx(Tot_Stor,"Tot_Stor.xlsx")

