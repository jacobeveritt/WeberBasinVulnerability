#Output Data Compilation

### Clear any existing data or functions.
rm(list=ls())
## Linear Average looking forward

#Read in Compiled CSV

setwd("~/GitHub/WeberBasinVulnerability/WeberBasinVulnerability/2 - RiverWare Modeling/ScenarioSet/D M")

Reservoir_Elevations_Combined <- read.csv("Combined CSV Reservoir Elevations.csv")
i=1
j=2872


Res_Elev <- data.frame(c(1:2872))

while (i<=TotalTraces) {
  Res_Elev[,i] <- Reservoir_Elevations_Combined[(j-2871):j,5]
  i=i+1
  j=2872*i
}

View(Res_Elev)

#Plots

###----------------------------Parallel Plots------------------------------------------------
library(plotly)

Res_Elev[,37:38] <- Reservoir_Elevations_Combined[1:2872,3:4]

df <-Res_Elev

p <- df %>%
  plot_ly(type = 'parcoords',
            dimensions = list(
            list(range = c(1000,10000),
                 label = 'Res Elev 1', values = Res_Elev[,10]),
            list(range = c(4,8),
                 constraintrange = c(1000,10000),
                 label = 'Res_Elev 2', values = Res_Elev[,15]),
            list(range = c(1000,10000),
                 label = 'Res_Elev 3', values = Res_Elev[,17]),
            list(range = c(1000,10000),
                 label = 'Res_Elev 4', values = Res_Elev[,19])
          )
  )
p

##------ CSV combiled outside or RiverWare (Has problems) --------------------------------------------------


#Input data from RiverWare Outputs

#setwd("~/GitHub/WeberBasinVulnerability/WeberBasinVulnerability/2 - RiverWare Modeling/Scenario")

#File Folder Directory lookup

#Trace1,Trace1,RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy

#Format for output file
#Reservoir_Elevations <- read.csv("Trace1,Trace1,RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Reservoir Elevations.csv")

#Annual_Demands <- read.csv("Trace1,Trace1,RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Reservoir Elevations.csv")

#Create TraceFolder Naming lookup

#TraceNumber <- 6  # number of traces considered,  possibly write a code to count
#TraceNumber1 <- 6  # number of traces considered,  possibly write a code to count
#TotalTraces <- TraceNumber*TraceNumber1

#for(TTNum in 1:(TotalTraces)){
 # for(TNum in 1:(TraceNumber)) {

  #  TraceDirectory0 <- paste0("Trace",TraceNumber)

   # for(TNum1 in 1:(TraceNumber1)) {
    #  TraceDirectory <- paste0(TraceDirectory0,",Trace",TNum1)
    #  TraceDirectory <-paste0 (TraceDirectory,",RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Reservoir Elevations.csv")
     # R_E <- read.csv(TraceDirectory)
    #  Reservoir_Elevations[,TTNum] <- R_E[,5]
    #}
  #}
#}
#View(Reservoir_Elevations)

#TraceNumber <- 4  # number of traces considered,  possibly write a code to count
#TraceNumber1 <- 4  # number of traces considered,  possibly write a code to count
#TotalTraces <- TraceNumber*TraceNumber1

#for(TTNum in 1:(TotalTraces)){
 # for(TNum in 1:(TraceNumber)) {

  #  TraceDirectory0 <- paste0("Trace",TraceNumber)

   # for(TNum1 in 1:(TraceNumber1)) {
    #  TraceDirectory <- paste0(TraceDirectory0,",Trace",TNum1)
     # TraceDirectory <-paste0 (TraceDirectory,",RiverWare MRM,Weber Basin RiverWare Model,RiverWare Policy/Annual Demands.csv")
      #A_D <- read.csv(TraceDirectory)
      #Annual_Demands[,TTNum] <- R_E[,5]
  #  }
#  }
#}

#View(Annual_Demands)


#Clean up Data (Delete Zeros)
