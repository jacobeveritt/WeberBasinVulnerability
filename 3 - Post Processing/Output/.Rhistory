Shortage_Rel_Metrics_NoSed[i,] <- ifelse(J1Data_NoSed[i,5]>0,1,0)
i=i+3
}
## Calculate Reliability
Shortage_Rel_NoSed <- data.frame(c(1:1080))
i=1
while (i<=1080) {
Shortage_Rel_NoSed[(i:(i+29)),] <- rep(round(sum((Shortage_Rel_Metrics_NoSed[(i:(i+29)),]/30)*100),1),30)
i=i+30
}
p <- plot_ly(
x = J1Data_NoSed$Demand,
y = J1Data_NoSed$Inflows,
z = Shortage_Rel_NoSed$c.1.1080., type = "contour",
#colors = c("red","orange","yellow","white"),
#contours = list(coloring = 'heatmap',colors = c("red","orange","yellow","white")),
autocontour = F,contours = list(
start = 0,
end = 100,
size = 25 ) )%>%
layout(title = "Shortage Reliability Metric",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
View(J1Data_NoSed)
i=1
while (i<=1080) {
Shortage_Rel_Metrics_NoSed[i,] <- ifelse(J1Data_NoSed[i,5]>0,1,0)
i=i+1
}
library("dplyr", lib.loc="~/R/win-library/3.5")
Shortage_Rel_Metrics <- data.frame(J1Data[,5])
i=1
while (i<=(3240/3)) {
Shortage_Rel_Metrics[i,] <- ifelse(J1Data[i,5]>0,1,0)
i=i+1
}
## Calculate Reliability
Shortage_Rel <- data.frame(J1Data[,5])
i=1
while (i<=(3240/3)) {
Shortage_Rel[(i:(i+89)),] <- rep(round(sum((Shortage_Rel_Metrics[(i:(i+89)),]/30)*100),1),30)
i=i+30
}
p <- plot_ly(
x = J1Data$Demand,
y = J1Data$Inflows,
z = Shortage_Rel$J1Data...5., type = "contour",
#colors = c("red","orange","yellow","white"),
#contours = list(coloring = 'heatmap',colors = c("red","orange","yellow","white")),
autocontour = F,contours = list(
start = 0,
end = 100,
size = 25 ) )%>%
layout(title = "Annual Average Shortage Reliability Metric",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
##########################################################################################
#Without Sedimentation
##########################################################################################
Shortage_Rel_Metrics_NoSed <- data.frame(J1Data_NoSed$Shortage)
i=1
while (i<=1080) {
Shortage_Rel_Metrics_NoSed[i,] <- ifelse(J1Data_NoSed[i,5]>0,1,0)
i=i+1
}
## Calculate Reliability
Shortage_Rel_NoSed <- data.frame(c(1:1080))
i=1
while (i<=1080) {
Shortage_Rel_NoSed[(i:(i+29)),] <- rep(round(sum((Shortage_Rel_Metrics_NoSed[(i:(i+29)),]/30)*100),1),30)
i=i+30
}
p <- plot_ly(
x = J1Data_NoSed$Demand,
y = J1Data_NoSed$Inflows,
z = Shortage_Rel_NoSed$c.1.1080., type = "contour",
#colors = c("red","orange","yellow","white"),
#contours = list(coloring = 'heatmap',colors = c("red","orange","yellow","white")),
autocontour = F,contours = list(
start = 0,
end = 100,
size = 25 ) )%>%
layout(title = "Shortage Reliability Metric",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
p <- plot_ly(
x = J1Data_NoSed$Demand,
y = J1Data_NoSed$Inflows,
z = Shortage_Rel_NoSed$c.1.1080., type = "contour",
#colors = c("red","orange","yellow","white"),
#contours = list(coloring = 'heatmap',colors = c("red","orange","yellow","white")),
autocontour = F,contours = list(
start = 0,
end = 100,
size = 25 ) )%>%
layout(title = "Shortage Reliability Metric",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
p <- plot_ly(
x = J1Data_NoSed$Demand,
y = J1Data_NoSed$Inflows,
z = Shortage_Rel_NoSed$c.1.1080., type = "contour",
#colors = c("red","orange","yellow","white"),
#contours = list(coloring = 'heatmap',colors = c("red","orange","yellow","white")),
autocontour = F,contours = list(
start = 0,
end = 100,
size = 25 ) )%>%
layout(title = "Shortage Reliability Metric",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
# 0 Percent Reservoir Volume
p <- plot_ly(
x = J1Data_NoSed$Demand,
y = J1Data_NoSed$Inflows,
z = Shortage_Rel_NoSed$c.1.1080., type = "contour",
#colors = c("red","orange","yellow","white"),
#contours = list(coloring = 'heatmap',colors = c("red","orange","yellow","white")),
autocontour = F,contours = list(
start = 0,
end = 100,
size = 25 ) )%>%
layout(title = "Shortage Reliability Metric",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
#10 Percent Reservoir Lost
p <- plot_ly(
x = J1Data_NoSed$Demand,
y = J1Data_NoSed$Inflows,
z = Shortage_Rel_NoSed$c.1.1080., type = "contour",
#colors = c("red","orange","yellow","white"),
#contours = list(coloring = 'heatmap',colors = c("red","orange","yellow","white")),
autocontour = F,contours = list(
start = 0,
end = 100,
size = 25 ) )%>%
layout(title = "Shortage Reliability Metric",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
library("dplyr", lib.loc="~/R/win-library/3.5")
#################### Reliability  Metric for Storage ########################
#  -- Metrics based on WBWCD - Drought Contigency Plan Drought Levels --  #
# See Table 3-2 : Hot/Dry Projected Drought for Drought Levels
# Moderate Total Basin Storage Drought Level 340K to 380K -- Yellow  ("Less than 380K")
# Severe Total Basin Storage Drought Level 280K to 340K -- Orange    ("Less than 340K")
# Extreme Total Basin Storage Drought Level less than 280K -- Red    ("Less than 280K")
ModerateLevel<- 380000
SevereLevel <- 340000
ExtremeLevel<-280000
Storage_Metrics <- data.frame(J1Data[,4])
Storage_Rel_Metrics_Moderate <- data.frame(J1Data[,4])
Storage_Rel_Metrics_Severe <- data.frame(J1Data[,4])
Storage_Rel_Metrics_Extreme <- data.frame(J1Data[,4])
#Moderate
i=1
View(J1Data)
while (i<=3240) {
Storage_Rel_Metrics_Moderate[i,] <- ifelse(J1Data[i,4]>ModerateLevel,1,0)
i=i+1
}
while (i<=3240) {
Storage_Rel_Metrics_Severe[i,] <- ifelse(J1Data[i,4]>SevereLevel,1,0)
i=i+1
}
while (i<=3240) {
Storage_Rel_Metrics_Extreme[i,] <- ifelse(J1Data[i,4]>ExtremeLevel,1,0)
i=i+1
}
#Extreme
i=1
while (i<=3240) {
Storage_Rel_Metrics_Extreme[i,] <- ifelse(J1Data[i,4]>ExtremeLevel,1,0)
i=i+1
}
## Calculate Reliability
Stor_Rel_Moderate <- data.frame(J1Data[,4])
Stor_Rel_Severe <- data.frame(J1Data[,4])
Stor_Rel_Extreme <- data.frame(J1Data[,4])
i=1
while (i<=3240) {
Stor_Rel_Moderate[(i:(i+29)),] <- rep(round(sum((Storage_Rel_Metrics_Moderate[(i:(i+29)),]/30)*100),1),30)
i=i+30
}
while (i<=3240) {
Stor_Rel_Severe[(i:(i+29)),] <- rep(round(sum((Storage_Rel_Metrics_Severe[(i:(i+29)),]/30)*100),1),30)
i=i+30
}
while (i<=3240) {
Stor_Rel_Extreme[(i:(i+29)),] <- rep(round(sum((Storage_Rel_Metrics_Extreme[(i:(i+29)),]/30)*100),1),30)
i=i+30
}
# Moderate Demand Level
p <- plot_ly(
x = J1Data_$Demand,
y = J1Data$Inflows,
z = Stor_Rel_Moderate$J1Data...4. , type = "contour")%>%
layout(title = "Moderate Storage Level by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
# Moderate Demand Level
p <- plot_ly(
x = J1Data$Demand,
y = J1Data$Inflows,
z = Stor_Rel_Moderate$J1Data...4. , type = "contour")%>%
layout(title = "Moderate Storage Level by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
#Severe Demand Level
p <- plot_ly(
x = J1Data$Demand,
y = J1Data$Inflows,
z = Stor_Rel_Severe$J1Data...4., type = "contour")%>%
layout(title = "Severe Storage by Level Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
#Extreme Demand Level
p <- plot_ly(
x = J1Data$Demand,
y = J1Data$Inflows,
z = Stor_Rel_Extreme$J1Data...4., type = "contour")%>%
layout(title = "Extreme Storage by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
# Moderate Demand Level
p <- plot_ly(
x = J1Data$Demand,
y = J1Data$Inflows,
z = Stor_Rel_Moderate$J1Data...4. , type = "contour")%>%
layout(title = "Moderate Storage Level by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
i=1
while (i<=3240) {
Stor_Rel_Moderate[(i:(i+29)),] <- rep(round(sum((Storage_Rel_Metrics_Moderate[(i:(i+29)),]/30)*100),1),30)
i=i+30
}
i=1
while (i<=3240) {
Stor_Rel_Moderate[(i:(i+29)),] <- rep(round(sum((Storage_Rel_Metrics_Moderate[(i:(i+29)),]/30)*100),1),30)
i=i+30
}
# Moderate Demand Level
p <- plot_ly(
x = J1Data$Demand,
y = J1Data$Inflows,
z = Stor_Rel_Moderate$J1Data...4. , type = "contour")%>%
layout(title = "Moderate Storage Level by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
#######################################################################################
######## No Sedimentation #########
#######################################################################################
J1Data_NoSed <- c(1:3240)
J1Data_NoSed <- data.frame(J1Data_NoSed)
View(J1Data_NoSed)
J1Data_NoSed <- filter(J1Data,Sedimentation==0)
J1Data_10Perc <- filter(J1Data,Sedimentation==10)
J1Data_30Perc <- filter(J1Data,Sedimentation==30)
ModerateLevel<- 380000
SevereLevel <- 340000
ExtremeLevel<-280000
Storage_Metrics <- data.frame(c(1:1080))
Storage_Rel_Metrics_Moderate <- data.frame(c(1:1080))
Storage_Rel_Metrics_Severe <- data.frame(c(1:1080))
Storage_Rel_Metrics_Extreme <- data.frame(c(1:1080))
#Moderate
i=1
#Moderate
i=1
while (i<=1080) {
Storage_Rel_Metrics_Moderate[i,] <- ifelse(J1Data_NoSed[i,4]>ModerateLevel,1,0)
i=i+1
}
#Severe
i=1
while (i<=1080) {
Storage_Rel_Metrics_Severe[i,] <- ifelse(J1Data_NoSed[i,4]>SevereLevel,1,0)
i=i+1
}
#Extreme
i=1
while (i<=1080) {
Storage_Rel_Metrics_Extreme[i,] <- ifelse(J1Data_NoSed[i,4]>ExtremeLevel,1,0)
i=i+1
}
## Calculate Reliability
Stor_Rel_Severe <- data.frame(c(1:1080))
Stor_Rel_Extreme <- data.frame(c(1:1080))
## Calculate Reliability
Stor_Rel_Moderate <- data.frame(c(1:1080))
Stor_Rel_Severe <- data.frame(c(1:1080))
Stor_Rel_Extreme <- data.frame(c(1:1080))
i=1
while (i<=3240) {
Stor_Rel_Moderate[(i:(i+29)),] <- rep(round(sum((Storage_Rel_Metrics_Moderate[(i:(i+29)),]/30)*100),1),30)
i=i+30
}
while (i<=3240) {
Stor_Rel_Severe[(i:(i+29)),] <- rep(round(sum((Storage_Rel_Metrics_Severe[(i:(i+29)),]/30)*100),1),30)
i=i+30
}
i=1
i=1
while (i<=3240) {
Stor_Rel_Severe[(i:(i+29)),] <- rep(round(sum((Storage_Rel_Metrics_Severe[(i:(i+29)),]/30)*100),1),30)
i=i+30
}
i=1
while (i<=3240) {
Stor_Rel_Extreme[(i:(i+29)),] <- rep(round(sum((Storage_Rel_Metrics_Extreme[(i:(i+29)),]/30)*100),1),30)
i=i+30
}
# Moderate Demand Level
p <- plot_ly(
x = J1Data_NoSed$Demand,
y = J1Data_NoSed$Inflows,
z = Stor_Rel_Moderate$c.1..97200.3.. , type = "contour")%>%
layout(title = "Moderate Storage Level by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
# Moderate Demand Level
p <- plot_ly(
x = J1Data_NoSed$Demand,
y = J1Data_NoSed$Inflows,
z = Stor_Rel_Moderate$c.1.1080., type = "contour")%>%
layout(title = "Moderate Storage Level by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
#Severe Demand Level
p <- plot_ly(
x = J1Data_NoSed$Demand,
y = J1Data_NoSed$Inflows,
z = Stor_Rel_Severe$c.1..97200.3.., type = "contour")%>%
layout(title = "Severe Storage by Level Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
#Severe Demand Level
p <- plot_ly(
x = J1Data_NoSed$Demand,
y = J1Data_NoSed$Inflows,
z = Stor_Rel_Severe$c.1.1080., type = "contour")%>%
layout(title = "Severe Storage by Level Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
#Extreme Demand Level
p <- plot_ly(
x = J1Data_NoSed$Demand,
y = J1Data_NoSed$Inflows,
z = Stor_Rel_Extreme$c.1.1080., type = "contour")%>%
layout(title = "Extreme Storage by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
Storage_Metrics <- data.frame(c(1:1080))
Storage_Rel_Metrics_Moderate <- data.frame(c(1:1080))
Storage_Rel_Metrics_Severe <- data.frame(c(1:1080))
Storage_Rel_Metrics_Extreme <- data.frame(c(1:1080))
#Moderate
i=1
#Moderate
i=1
while (i<=1080) {
Storage_Rel_Metrics_Moderate[i,] <- ifelse(J1Data_10Perc[i,4]>ModerateLevel,1,0)
i=i+1
}
#Severe
i=1
while (i<=1080) {
Storage_Rel_Metrics_Severe[i,] <- ifelse(J1Data_10Perc[i,4]>SevereLevel,1,0)
i=i+1
}
#Extreme
i=1
while (i<=1080) {
Storage_Rel_Metrics_Extreme[i,] <- ifelse(J1Data_10Perc[i,4]>ExtremeLevel,1,0)
i=i+1
}
## Calculate Reliability
Stor_Rel_Moderate <- data.frame(c(1:1080))
Stor_Rel_Severe <- data.frame(c(1:1080))
Stor_Rel_Extreme <- data.frame(c(1:1080))
i=1
while (i<=3240) {
Stor_Rel_Moderate[(i:(i+29)),] <- rep(round(sum((Storage_Rel_Metrics_Moderate[(i:(i+29)),]/30)*100),1),30)
i=i+30
}
i=1
while (i<=3240) {
Stor_Rel_Severe[(i:(i+29)),] <- rep(round(sum((Storage_Rel_Metrics_Severe[(i:(i+29)),]/30)*100),1),30)
i=i+30
}
i=1
while (i<=3240) {
Stor_Rel_Extreme[(i:(i+29)),] <- rep(round(sum((Storage_Rel_Metrics_Extreme[(i:(i+29)),]/30)*100),1),30)
i=i+30
}
# Moderate Demand Level
p <- plot_ly(
x = J1Data_NoSed$Demand,
y = J1Data_NoSed$Inflows,
z = Stor_Rel_Moderate$c.1.1080., type = "contour")%>%
layout(title = "Moderate Storage Level by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
# Moderate Demand Level
p <- plot_ly(
x = J1Data_10Perc$Demand,
y = J1Data_10Perc$Inflows,
z = Stor_Rel_Moderate$c.1.1080., type = "contour")%>%
layout(title = "Moderate Storage Level by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
#Severe Demand Level
p <- plot_ly(
x = J1Data_10Perc$Demand,
y = J1Data_10Perc$Inflows,
z = Stor_Rel_Severe$c.1.1080., type = "contour")%>%
layout(title = "Severe Storage by Level Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
#Extreme Demand Level
p <- plot_ly(
x = J1Data_10Perc$Demand,
y = J1Data_10Perc$Inflows,
z = Stor_Rel_Extreme$c.1.1080., type = "contour")%>%
layout(title = "Extreme Storage by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
Storage_Metrics <- data.frame(c(1:1080))
Storage_Rel_Metrics_Moderate <- data.frame(c(1:1080))
Storage_Rel_Metrics_Severe <- data.frame(c(1:1080))
Storage_Rel_Metrics_Extreme <- data.frame(c(1:1080))
#Moderate
i=1
while (i<=1080) {
Storage_Rel_Metrics_Moderate[i,] <- ifelse(J1Data_30Perc[i,4]>ModerateLevel,1,0)
i=i+1
}
#Severe
i=1
while (i<=1080) {
Storage_Rel_Metrics_Severe[i,] <- ifelse(J1Data_30Perc[i,4]>SevereLevel,1,0)
i=i+1
}
#Extreme
i=1
while (i<=1080) {
Storage_Rel_Metrics_Extreme[i,] <- ifelse(J1Data_30Perc[i,4]>ExtremeLevel,1,0)
i=i+1
}
## Calculate Reliability
Stor_Rel_Moderate <- data.frame(c(1:1080))
Stor_Rel_Severe <- data.frame(c(1:1080))
Stor_Rel_Extreme <- data.frame(c(1:1080))
i=1
while (i<=3240) {
Stor_Rel_Moderate[(i:(i+29)),] <- rep(round(sum((Storage_Rel_Metrics_Moderate[(i:(i+29)),]/30)*100),1),30)
i=i+30
}
i=1
while (i<=3240) {
Stor_Rel_Severe[(i:(i+29)),] <- rep(round(sum((Storage_Rel_Metrics_Severe[(i:(i+29)),]/30)*100),1),30)
i=i+30
}
i=1
while (i<=3240) {
Stor_Rel_Extreme[(i:(i+29)),] <- rep(round(sum((Storage_Rel_Metrics_Extreme[(i:(i+29)),]/30)*100),1),30)
i=i+30
}
# Moderate Demand Level
p <- plot_ly(
x = J1Data_30Perc$Demand,
y = J1Data_30Perc$Inflows,
z = Stor_Rel_Moderate$c.1.1080., type = "contour")%>%
layout(title = "Moderate Storage Level by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
#Severe Demand Level
p <- plot_ly(
x = J1Data_30Perc$Demand,
y = J1Data_30Perc$Inflows,
z = Stor_Rel_Severe$c.1.1080., type = "contour")%>%
layout(title = "Severe Storage by Level Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
#Extreme Demand Level
p <- plot_ly(
x = J1Data_30Perc$Demand,
y = J1Data_30Perc$Inflows,
z = Stor_Rel_Extreme$c.1.1080., type = "contour")%>%
layout(title = "Extreme Storage by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
