names(Data)[1] <- paste("Demand")
names(Data)[2] <- paste("Inflows")
names(Data)[3] <- paste("Storage")
names(Data)[4] <- paste("Shortages")
Data$Sedimentation<- Tot_Sedimentation$`Total Sedimentation`
##################################################################################################
##PLOTS
##################################################################################################
library(plotly)
if (!require("processx")) install.packages("processx")
setwd("~/GitHub/WeberBasinVulnerability/WeberBasinVulnerability/3 - Post Processing/Output")
### Individual plots
#X = Demand, Y= Inflows
p <- plot_ly(Data,x =Data$Demand,y=Data$Inflows ,color = Data$Storage)%>%
layout(title = "Storage by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
#X = Demand, Y= Inflows Z = Shortages
p <- plot_ly(Data,x =Data$Demand,y=Data$Inflows ,color = Data$Shortages)%>%   #How to ignore 0 values
layout(title = "Shortages by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
p
#X = Shortage, Y= Storage Z= Demands
p <- plot_ly(Data,x =Data$Shortage,y=Data$Storage ,color = Data$Demand) %>%
layout(title = "Demand by Color",
xaxis = list(title ="Shortage (Acre-Feet)"),
yaxis = list(title = "Storage (Acre-Feet)"))                        # look at removing 0 values of Shortages in plots
p
#X = Shortage, Y= Storage Z= Inflows
p <- plot_ly(Data,x =Data$Shortage,y=Data$Storage ,color = Data$Inflows)%>%
layout(title = "Inflows by Color",
xaxis = list(title ="Shortage (Acre-Feet)"),
yaxis = list(title = "Storage (Acre-Feet)"))
p
#Shortage
p <- plot_ly(
x = Data$Demand,
y = Data$Inflows,
z = Data$Shortages, nrow = 9720, ncol = 9720,type = "contour")%>%
layout(title = "Shortages by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
#Shortage
p <- plot_ly(
x = Data$Demand,
y = Data$Inflows,
z = Data$Shortages, nrow = 9720, ncol = 9720,type = "contour")%>%
layout(title = "Shortages by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
#Storage
p <- plot_ly(
x = Data$Demand,
y = Data$Inflows,
z = Data$Storage, nrow = 9720, ncol = 9720, type = "contour")%>%
layout(title = "Storage by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
# Sedimentation   -- Issues with only ploting the 30% level for the sedimentation
p <- plot_ly(
x = Data$Demand,
y = Data$Inflows,
z = Data$Sedimentation, nrow = 9720, ncol = 9720, type = "contour")%>%
layout(title = "Sedimentation by Color",
xaxis = list(title="Demand"),
yaxis = list(title="Inflows"))
p
install.packages(color.brewer)
c<-c(rgb(254,232,200),rgb(253,187,132),rgb(227,74,51))
#Storage
p <- plot_ly(
x = Data$Demand,
y = Data$Inflows,
z = Data$Storage, type = "contour",
colors = c("red","orange","yellow","white"),
#contours = list(coloring = 'heatmap'),
autocontour = F,contours = list(
start = 280000,
end = 380000,
size = 50000
))%>%
layout(title = "Storage by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
NData <- data.frame(Data[1,])
i=1
j=1
while (i<=9720) {
ifelse(Data[i,3] >= 380000, j==j-1 ,NData[j,] <- Data[i,])
i=i+1
j=j+1
}
NData[1,3] <- 350000
p <- plot_ly(
x = NData$Demand,
y = NData$Inflows,
z = NData$Storage, type = "contour",
colors = c("red","orange","yellow","white"),
#contours = list(coloring = 'heatmap',colors = c("red","orange","yellow","white")),
autocontour = F,contours = list(
start = 280000,
end = 380000,
size = 50000
))%>%
layout(title = "Storage by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
newData <- data.frame(Data[1,])
i=1
j=1
while (i<=9720) {
ifelse(Data[i,4] == 0, j==j-1 ,newData[j,] <- Data[i,])
i=i+1
j=j+1
}
newData[1,] <- rep('NA')
#Shortage
p <- plot_ly(
x = newData$Demand,
y = newData$Inflows,
z = newData$Shortages, nrow = 9720, ncol = 9720,type = "contour")%>%
layout(title = "Shortages by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
#Shortage
p <- plot_ly(
x = newData$Demand,
y = newData$Inflows,
z = newData$Shortages, nrow = 9720, ncol = 9720,type = "contour")%>%
layout(title = "Shortages by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
#Storage
p <- plot_ly(
x = newData$Demand,
y = newData$Inflows,
z = newData$Storage, nrow = 9720, ncol = 9720, type = "contour")%>%
layout(title = "Storage by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
### Individual plots
#X = Demand, Y= Inflows
p <- plot_ly(Data,x =newData$Demand,y=newData$Inflows ,color = newData$Storage)%>%
layout(title = "Storage by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
type = "contour")%>%
layout(title = "Shortages by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
#Shortage
p <- plot_ly(
x = newData$Demand,
y = newData$Inflows,
z = newData$Shortages,
colors = c("red","orange","yellow","white"),
#contours = list(coloring = 'heatmap',colors = c("red","orange","yellow","white")),
autocontour = F,contours = list(
start = 280000,
end = 380000,
size = 50000,
type = "contour")%>%
layout(title = "Shortages by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows")))
#Shortage
p <- plot_ly(
x = newData$Demand,
y = newData$Inflows,
z = newData$Shortages,
type = "contour",
colors = c("red","orange","yellow","white"),
#contours = list(coloring = 'heatmap',colors = c("red","orange","yellow","white")),
autocontour = F,contours = list(
start = 280000,
end = 380000,
size = 50000
))%>%
layout(title = "Shortages by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
x = newData$Demand,
y = newData$Inflows,
z = newData$Shortages,
type = "contour")%>%
layout(title = "Shortages by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
x = newData$Demand,
y = newData$Inflows,
z = newData$Shortages, type = "contour")%>%
layout(title = "Shortages by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
#Shortage
p <- plot_ly(
x = newData$Demand,
y = newData$Inflows,
z = newData$Shortages, type = "contour")%>%
layout(title = "Shortages by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
#Storage
p <- plot_ly(
x = newData$Demand,
y = newData$Inflows,
z = newData$Storage, type = "contour")%>%
layout(title = "Storage by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
#Storage
p <- plot_ly(
x = newData$Demand,
y = newData$Inflows,
z = newData$Storage, type = "contour",
colors = c("red","orange","yellow","white"),
#contours = list(coloring = 'heatmap',colors = c("red","orange","yellow","white")),
autocontour = F,contours = list(
start = 280000,
end = 380000,
size = 50000
))%>%
layout(title = "Storage by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
p <- plot_ly(
x = newData$Demand,
y = newData$Inflows,
z = newData$Storage, type = "contour",
colors = c("red","orange","yellow","white"),
#contours = list(coloring = 'heatmap',colors = c("red","orange","yellow","white")),
autocontour = F,contours = list(
start = 280000,
end = 380000,
size = 50000
))%>%
layout(title = "Storage by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
p <- plot_ly(
x = newData$Demand,
y = newData$Inflows,
z = newData$Storage, type = "contour",
colors = c("white","orange","yellow","red"),
#contours = list(coloring = 'heatmap',colors = c("red","orange","yellow","white")),
autocontour = F,contours = list(
start = 280000,
end = 380000,
size = 50000
))%>%
layout(title = "Storage by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
p <- plot_ly(
x = newData$Demand,
y = newData$Inflows,
z = newData$Storage, type = "contour",
colors = c("white","orange","yellow","red"),
#contours = list(coloring = 'heatmap',colors = c("red","orange","yellow","white")),
autocontour = F,contours = list(
start = 280000,
end = 380000,
size = 50000
))%>%
layout(title = "Storage by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
newData <- data.frame(Data[1,])
i=1
j=1
while (i<=9720) {
ifelse(Data[i,4] == 0, j==j-1 ,newData[j,] <- Data[i,])
i=i+1
j=j+1
}
View(newData)
#Shortage
p <- plot_ly(
x = newData$Demand,
y = newData$Inflows,
z = newData$Shortages, type = "contour")%>%
layout(title = "Shortages by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
#Shortage
p <- plot_ly(
x = newData$Demand,
y = newData$Inflows,
z = newData$Shortages, type = "contour")%>%
layout(title = "Shortages by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
#Storage
p <- plot_ly(
x = newData$Demand,
y = newData$Inflows,
z = newData$Storage, type = "contour")%>%
layout(title = "Storage by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
p <- plot_ly(
x = NData$Demand,
y = NData$Inflows,
z = NData$Storage, type = "contour",
colors = c("red","orange","yellow","white"),
#contours = list(coloring = 'heatmap',colors = c("red","orange","yellow","white")),
autocontour = F,contours = list(
start = 280000,
end = 380000,
size = 50000
))%>%
layout(title = "Storage by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
#Storage
p <- plot_ly(
x = Data$Demand,
y = Data$Inflows,
z = Data$Storage, nrow = 9720, ncol = 9720, type = "contour")%>%
layout(title = "Storage by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
p <- plot_ly(
x = NData$Demand,
y = NData$Inflows,
z = NData$Storage, type = "contour",
colors = c("red","orange","yellow","white"),
#contours = list(coloring = 'heatmap',colors = c("red","orange","yellow","white")),
autocontour = F,contours = list(
start = 280000,
end = 380000,
size = 50000
))%>%
layout(title = "Storage by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
#Storage
p <- plot_ly(
x = Data$Demand,
y = Data$Inflows,
z = Data$Storage, type = "contour",
colors = c("red","orange","yellow","white"),
#contours = list(coloring = 'heatmap'),
autocontour = F,contours = list(
start = 280000,
end = 380000,
size = 50000
))%>%
layout(title = "Storage by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
p <- plot_ly(
x = NData$Demand,
y = NData$Inflows,
z = NData$Storage, type = "contour",
colors = c("red","orange","yellow","white"),
#contours = list(coloring = 'heatmap',colors = c("red","orange","yellow","white")),
autocontour = F,contours = list(
start = 280000,
end = 380000,
size = 50000
))%>%
layout(title = "Storage by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
newData <- data.frame(Data[1,])
i=1
j=1
while (i<=9720) {
ifelse(Data[i,4] == 0, j==j-1 ,newData[j,] <- Data[i,])
i=i+1
j=j+1
}
newData[1,4] <- rep('NA')
View(newData)
#Shortage
p <- plot_ly(
x = newData$Demand,
y = newData$Inflows,
z = newData$Shortages, type = "contour")%>%
layout(title = "Shortages by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
#Storage
p <- plot_ly(
x = newData$Demand,
y = newData$Inflows,
z = newData$Storage, type = "contour")%>%
layout(title = "Storage by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
p <- plot_ly(
x = newData$Demand,
y = newData$Inflows,
z = newData$Storage, type = "contour",
colors = c("white","orange","yellow","red"),
#contours = list(coloring = 'heatmap',colors = c("red","orange","yellow","white")),
autocontour = F,contours = list(
start = 280000,
end = 380000,
size = 50000
))%>%
layout(title = "Storage by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
p <- plot_ly(
x = newData$Demand,
y = newData$Inflows,
z = newData$Storage, type = "contour",
colors = c("red","orange","yellow","white"),
#contours = list(coloring = 'heatmap',colors = c("red","orange","yellow","white")),
autocontour = F,contours = list(
start = 280000,
end = 380000,
size = 50000
))%>%
layout(title = "Storage by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
### Individual plots
#X = Demand, Y= Inflows
p <- plot_ly(Data,x =newData$Demand,y=newData$Inflows ,color = newData$Storage)%>%
layout(title = "Storage by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
#X = Demand, Y= Inflows Z = Shortages
p <- plot_ly(Data,x =Data$newDemand,y=newData$Inflows ,color = newData$Shortages)%>%   #How to ignore 0 values
layout(title = "Shortages by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
colors()
### Individual plots
#X = Demand, Y= Inflows
p <- plot_ly(Data,x =newData$Demand,y=newData$Inflows ,color = newData$Storage,colors = "Jet")%>%
layout(title = "Storage by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
### Individual plots
#X = Demand, Y= Inflows
p <- plot_ly(Data,x =newData$Demand,y=newData$Inflows ,color = newData$Storage,colorspaces = "Jet")%>%
layout(title = "Storage by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
### Individual plots
#X = Demand, Y= Inflows
p <- plot_ly(Data,x =newData$Demand,y=newData$Inflows ,color = newData$Storage,colorspaces = "Jet")%>%
layout(title = "Storage by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
### Individual plots
#X = Demand, Y= Inflows
p <- plot_ly(Data,x =newData$Demand,y=newData$Inflows ,color = newData$Storage,colors = "Jet")%>%
layout(title = "Storage by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
### Individual plots
#X = Demand, Y= Inflows
p <- plot_ly(Data,x =newData$Demand,y=newData$Inflows ,color = newData$Storage,colors = "alpha")%>%
layout(title = "Storage by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
colors()
blues9
### Individual plots
#X = Demand, Y= Inflows
p <- plot_ly(Data,x =newData$Demand,y=newData$Inflows ,color = newData$Storage,colors = blues9)%>%
layout(title = "Storage by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
#X = Demand, Y= Inflows Z = Shortages
p <- plot_ly(Data,x =Data$newDemand,y=newData$Inflows ,color = newData$Shortages,colors = blues9)%>%   #How to ignore 0 values
layout(title = "Shortages by Color",
xaxis = list(title ="Demand"),
yaxis = list(title = "Inflows"))
p
